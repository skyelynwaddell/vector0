!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/skye/github/qengine/gamedata/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
CPlayerSpawn	cl_main.qc	/^	CPlayerSpawn();$/;"	f
CheckImpulses	sv_player.qc	/^	CheckImpulses();$/;"	f
DEP	fteextensions.qc	/^DEP("Does not support all mod-specific contents.") float trace_endcontentsf;$/;"	f
DEP	fteextensions.qc	/^DEP("Does not support all mod-specific surface flags.") float trace_surfaceflagsf;$/;"	f
DEP	fteextensions.qc	/^DEP("Does not support mod-specific contents.") float trace_dphitcontents;$/;"	f
DEP	fteextensions.qc	/^DEP("Does not support mod-specific contents.") float trace_dpstartcontents;$/;"	f
DEP	fteextensions.qc	/^DEP("Does not support mod-specific surface flags") float trace_dphitq3surfaceflags;$/;"	f
DEP	fteextensions.qc	/^DEP("use CSQC_Event_Sound") float(float channel, string soundname, vector pos, float vol, float /;"	f
DEP_SSQC	fteextensions.qc	/^DEP_SSQC("Broken on dedicated servers, ignores rtlights\/etc") vector(vector org) getlight = #92/;"	f
DEP_SSQC	fteextensions.qc	/^DEP_SSQC("This bypasses networking by design, so do NOT call this from ssqc. Use ex_localsound o/;"	f
DebugInput	sui_sys.qc	/^	DebugInput(scan);$/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("Call 'error' instead") void() crash = #72; \/*$/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("Redundant") string(string s, ...) strzone = #118; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("Redundant") string(string) strzone = #56; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRI/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("Redundant") void(string s) strunzone = #119; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_S/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("Redundant") void(string) strunzone = #57; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRI/;"	f
FTEDEP	fteextensions.qc	/^FTEDEP("use MOVE_OTHERONLY") const float MOVE_WORLDONLY = 3;	\/* The trace will ignore everythin/;"	f
PISTOL_IDLE	anims.qc	/^	PISTOL_IDLE = 0,$/;"	v
PISTOL_RELOAD	anims.qc	/^	PISTOL_RELOAD = 1$/;"	v
PISTOL_SHOOT	anims.qc	/^	PISTOL_SHOOT = 3,$/;"	v
PlayerJump	sv_player.qc	/^		PlayerJump();$/;"	f
PlayerSpawn	sv_player.qc	/^	PlayerSpawn();$/;"	f
SB_ALLOWDUPES	fteextensions.qc	/^	SB_ALLOWDUPES=1<<2\/*don't filter out dupes, useful with search_getpackagename or search_fopen*/;"	v
SB_CASEINSENSITIVE	fteextensions.qc	/^	SB_CASEINSENSITIVE=1<<0\/*deprecated, ignored*\/,$/;"	v
SB_FORCESEARCH	fteextensions.qc	/^	SB_FORCESEARCH=1<<3\/*open the named package if needed (possibly in other gamedirs)*\/,$/;"	v
SB_FULLPACKAGEPATH	fteextensions.qc	/^	SB_FULLPACKAGEPATH=1<<1\/*in\/out package names use gamedir prefix for extra info\/specificity./;"	v
SB_MULTISEARCH	fteextensions.qc	/^	SB_MULTISEARCH=1<<4\/*use colons as a delimiter for multiple search patterns (instead of needin/;"	v
SB_NAMESORT	fteextensions.qc	/^	SB_NAMESORT=1<<5\/*sort results by filename, instead of by filesystem priority\/randomness*\/$/;"	v
This	fteextensions.qc	/^		This (just as evil) variant allows specifying some flags too. See the STUFFCMD_* constants. *\/$/;"	f
This	sv_defs.qc	/^		This (just as evil) variant allows specifying some flags too. See the STUFFCMD_* constants. *\/$/;"	f
WriteByte	sv_customdefs.qc	/^	WriteByte(MSG_MULTICAST, SVC_CGAMEPACKET);$/;"	f
WriteByte	sv_customdefs.qc	/^	WriteByte(MSG_MULTICAST, event);$/;"	f
WriteByte	sv_customdefs.qc	/^	WriteByte(MSG_MULTICAST, val);$/;"	f
WriteCoord	sv_customdefs.qc	/^	WriteCoord(MSG_MULTICAST, vec_x);$/;"	f
WriteCoord	sv_customdefs.qc	/^	WriteCoord(MSG_MULTICAST, vec_y);$/;"	f
WriteCoord	sv_customdefs.qc	/^	WriteCoord(MSG_MULTICAST, vec_z);$/;"	f
WriteEntity	sv_customdefs.qc	/^	WriteEntity(MSG_MULTICAST, e);$/;"	f
WriteFloat	sv_customdefs.qc	/^	WriteFloat(MSG_MULTICAST, val);$/;"	f
WriteShort	sv_customdefs.qc	/^	WriteShort(MSG_MULTICAST, val);$/;"	f
WriteString	sv_customdefs.qc	/^	WriteString(MSG_MULTICAST, s);$/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Cannot be recorded in MVDs, nor work properly with splitscreen. Use CSQC instead."/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not support mod-specific contents.") .float dphitcontentsmask;	\/* Some crapp/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not support modifiers") string(string command, optional float bindmap) findke/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not work with MVDs nor splitscreen.") .float dimension_ghost;	\/* If this ent/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not work with MVDs nor splitscreen.") .float dimension_ghost_alpha;	\/* If th/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not work with MVDs nor splitscreen.") .float dimension_see;	\/* This is the d/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Does not work with MVDs nor splitscreen.") .float dimension_seen;	\/* This is the /;"	f
__deprecated	fteextensions.qc	/^__deprecated("Doesn't support RGB player colours.") .float clientcolors;$/;"	f
__deprecated	fteextensions.qc	/^__deprecated("No RGB support.") void(entity ent, float colours) setcolor = #401; \/* Part of DP_/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Obsoleted by .skin=CONTENTS_LADDER") const float SOLID_LADDER = 20;	\/* Obsolete a/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Redundant. Cannot be recorded in MVDs, nor work properly with splitscreen. Use CSQ/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use MSG_MULTICAST+multicast(MULTICAST_*)") const float MSG_BROADCAST;	\/* The byte/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use MSG_MULTICAST+multicast(MULTICAST_ALL)") const float MSG_ALL = 2;	\/* The byte/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use MSG_MULTICAST+multicast(MULTICAST_ONE_R)") const float MSG_ONE = 1;	\/* The by/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use Menu_InputEvent") void(float scan, float chr) m_keydown;$/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use Menu_InputEvent") void(float scan, float chr) m_keyup;$/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use SendFlags instead.") .float Version;	\/* Obsolete *\/$/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use digest_hex") float(float caseinsensitive, string s, ...) crc16 = #494; \/* Par/;"	f
__deprecated	fteextensions.qc	/^__deprecated("Use strftime.") void() calltimeofday = #231; \/* Part of FTE_CALLTIMEOFDAY$/;"	f
__double	fteextensions.qc	/^__double() readdouble = #0:readdouble; \/*$/;"	f
__double	fteextensions.qc	/^__double(optional int timetype) gettimed = #0:gettimed;$/;"	f
__int64	fteextensions.qc	/^__int64() readint64 = #0:readint64; \/*$/;"	f
__int64	fteextensions.qc	/^__int64(filestream fhandle, optional __int64 newsize) fsize64 = #0:fsize64; \/*$/;"	f
__uint	fteextensions.qc	/^__uint(float) ftou = #0:ftou; \/*$/;"	f
__uint	fteextensions.qc	/^__uint(vector pos, optional float worldonly=1) pointcontentsmask = #0:pointcontentsmask; \/*$/;"	f
__uint64	fteextensions.qc	/^__uint64() readuint64 = #0:readuint64; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(__variant *dst, float ofs) memgetval = #388; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(float entnum, float fieldnum) getentity = #504; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(float lno, float fld) dynamiclight_get = #372; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(float playernum, float statnum, float stattype) getplayerstat = #0:getplayerstat; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(float prnum, string funcname, ...) externcall = #201; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	cl_defs.qc	/^__variant(float prnum, string varname) externvalue = #203; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	cl_defs.qc	/^__variant(float property) getproperty = #309; \/*$/;"	f
__variant	cl_defs.qc	/^__variant(hashtable table, string name) hash_delete = #291; \/* Part of FTE_QC_HASHTABLES$/;"	f
__variant	cl_defs.qc	/^__variant(hashtable table, string name, optional __variant deflt, optional float requiretype, op/;"	f
__variant	fteextensions.qc	/^__variant(__variant *dst, float ofs) memgetval = #388; \/*$/;"	f
__variant	fteextensions.qc	/^__variant(float action, optional vector pos, optional float radius, optional float quant, ...) t/;"	f
__variant	fteextensions.qc	/^__variant(float entnum, float fieldnum) getentity = #504; \/*$/;"	f
__variant	fteextensions.qc	/^__variant(float lno, float fld) dynamiclight_get = #372; \/*$/;"	f
__variant	fteextensions.qc	/^__variant(float playernum, float statnum, float stattype) getplayerstat = #0:getplayerstat; \/*$/;"	f
__variant	fteextensions.qc	/^__variant(float prnum, string funcname, ...) externcall = #201; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	fteextensions.qc	/^__variant(float prnum, string varname) externvalue = #203; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	fteextensions.qc	/^__variant(float property) getproperty = #309; \/*$/;"	f
__variant	fteextensions.qc	/^__variant(hashtable table, string name) hash_delete = #291; \/* Part of FTE_QC_HASHTABLES$/;"	f
__variant	fteextensions.qc	/^__variant(hashtable table, string name, optional __variant deflt, optional float requiretype, op/;"	f
__variant	m_defs.qc	/^__variant(__variant *dst, float ofs) memgetval = #388; \/*$/;"	f
__variant	m_defs.qc	/^__variant(float property) getproperty = #309; \/*$/;"	f
__variant	m_defs.qc	/^__variant(hashtable table, string name) hash_delete = #291; \/* Part of FTE_QC_HASHTABLES$/;"	f
__variant	m_defs.qc	/^__variant(hashtable table, string name, optional __variant deflt, optional float requiretype, op/;"	f
__variant	sv_defs.qc	/^__variant(__variant *dst, float ofs) memgetval = #388; \/*$/;"	f
__variant	sv_defs.qc	/^__variant(float prnum, string funcname, ...) externcall = #201; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	sv_defs.qc	/^__variant(float prnum, string varname) externvalue = #203; \/* Part of FTE_MULTIPROGS$/;"	f
__variant	sv_defs.qc	/^__variant(hashtable table, string name) hash_delete = #291; \/* Part of FTE_QC_HASHTABLES$/;"	f
__variant	sv_defs.qc	/^__variant(hashtable table, string name, optional __variant deflt, optional float requiretype, op/;"	f
_action_element_count_sanity	sui_sys.qc	/^	_action_element_count_sanity();$/;"	f
_action_elements_index	sui_sys.qc	/^	_action_elements_index = 0;$/;"	v
_click_action_count	sui_sys.qc	/^	_click_action_count = 0;$/;"	v
_cursor_click	sui_sys.qc	/^	_cursor_click = _cursor_position;$/;"	v
_cursor_is_mouse_active	sui_sys.qc	/^	_cursor_is_mouse_active = FALSE;$/;"	v
_cursor_is_mouse_active	sui_sys.qc	/^	_cursor_is_mouse_active = TRUE;$/;"	v
_cursor_mouse_activate_accum	sui_sys.qc	/^	_cursor_mouse_activate_accum = 0;$/;"	v
_cursor_position	sui_sys.qc	/^	_cursor_position = pos;$/;"	v
_cursor_relative_click	sui_sys.qc	/^	_cursor_relative_click = _cursor_relative_hover;$/;"	v
_frame_index	sui_sys.qc	/^	_frame_index = 0;$/;"	v
_hold_action_count	sui_sys.qc	/^	_hold_action_count = 0;$/;"	v
_hold_action_count	sui_sys.qc	/^	_hold_action_count = _hover_action_count;$/;"	v
_holding_click	sui_sys.qc	/^	_holding_click = FALSE;$/;"	v
_holding_click	sui_sys.qc	/^	_holding_click = TRUE;$/;"	v
_hover_action_count	sui_sys.qc	/^	_hover_action_count = 0;$/;"	v
_input_index	sui_sys.qc	/^	_input_index = 0;$/;"	v
_input_length	sui_sys.qc	/^	_input_length = 0;$/;"	v
_last_clicked_action_count	sui_sys.qc	/^		_last_clicked_action_count = 0;$/;"	v
_last_clicked_action_count	sui_sys.qc	/^	_last_clicked_action_count = 0;$/;"	v
_release_action_count	sui_sys.qc	/^	_release_action_count = 0;$/;"	v
_release_action_count	sui_sys.qc	/^	_release_action_count = _hold_action_count;$/;"	v
_retarget_kb_cursor	sui_sys.qc	/^		_retarget_kb_cursor();$/;"	f
_scan_listen_count	sui_sys.qc	/^	_scan_listen_count = 0;$/;"	v
_sui_add_input	sui_sys.qc	/^			_sui_add_input(chary, scanx);$/;"	f
_sui_binding_command	sui_sys.qc	/^		_sui_binding_command = "";$/;"	v
_sui_binding_command	sui_sys.qc	/^	_sui_binding_command = "";$/;"	v
_sui_binding_command	sui_sys.qc	/^	_sui_binding_command = command;$/;"	v
_sui_binding_command_name	sui_sys.qc	/^		_sui_binding_command_name = "";$/;"	v
_sui_binding_command_name	sui_sys.qc	/^	_sui_binding_command_name = "";$/;"	v
_sui_binding_command_name	sui_sys.qc	/^	_sui_binding_command_name = command_name;$/;"	v
_sui_clip_area_maxs	sui_sys.qc	/^	_sui_clip_area_maxs = pos + size;$/;"	v
_sui_clip_area_mins	sui_sys.qc	/^	_sui_clip_area_mins = pos;$/;"	v
_sui_default_kb_focus	sui_sys.qc	/^	_sui_default_kb_focus = id;$/;"	v
_sui_do_keybind	sui_sys.qc	/^			_sui_do_keybind(scanx, _sui_binding_command);$/;"	f
_sui_draw_initialized	sui_sys.qc	/^	_sui_draw_initialized = FALSE;$/;"	v
_sui_draw_initialized	sui_sys.qc	/^	_sui_draw_initialized = TRUE;$/;"	v
_sui_hijacked_dirs	sui_sys.qc	/^	_sui_hijacked_dirs = 0;$/;"	v
_sui_is_clipping	sui_sys.qc	/^	_sui_is_clipping = FALSE;$/;"	v
_sui_is_clipping	sui_sys.qc	/^	_sui_is_clipping = TRUE;$/;"	v
_sui_kb_move_dir	sui_sys.qc	/^	_sui_kb_move_dir = '0 0 0';$/;"	v
_sui_kb_move_dir	sui_sys.qc	/^	_sui_kb_move_dir = dir;$/;"	v
_sui_list_first	sui_sys.qc	/^	_sui_list_first = max(0, hidden_above); \/\/ Index of first elem$/;"	v
_sui_list_index	sui_sys.qc	/^	_sui_list_index = _sui_list_first;$/;"	v
_sui_list_item_height	sui_sys.qc	/^	_sui_list_item_height = itemsize_y;$/;"	v
_sui_list_last	sui_sys.qc	/^	_sui_list_last = min(_sui_list_first + rint(size_y \/ itemsize_y) + 1, numitems);$/;"	v
_sui_list_pos	sui_sys.qc	/^	_sui_list_pos = hidden_above * itemsize_y;$/;"	v
_sui_mouse1_down	sui_sys.qc	/^			_sui_mouse1_down(FALSE);$/;"	f
_sui_mouse1_up	sui_sys.qc	/^			_sui_mouse1_up(FALSE);$/;"	f
_sui_mouse_move	sui_sys.qc	/^			_sui_mouse_move(_action_elements[i].pos + _action_elements[i].size * 0.5, FALSE);$/;"	f
_sui_mouse_move	sui_sys.qc	/^		_sui_mouse_move([scanx, chary]);$/;"	f
_sui_mouse_move	sui_sys.qc	/^		_sui_mouse_move(best_pos, FALSE);	$/;"	f
_sui_mouse_move	sui_sys.qc	/^	_sui_mouse_move(default_pos, FALSE);$/;"	f
_sui_unbind	sui_sys.qc	/^		_sui_unbind(command);$/;"	f
_sui_unbind	sui_sys.qc	/^	_sui_unbind(command);$/;"	f
a	m_main.qc	/^			a = 1 - (diff - 2.5) * 2;$/;"	v
a	m_main.qc	/^			a = diff * 0.6;$/;"	v
activate_mouse_cursor	sui_sys.qc	/^				activate_mouse_cursor();$/;"	f
activate_mouse_cursor	sui_sys.qc	/^		activate_mouse_cursor();$/;"	f
addentities	cl_main.qc	/^	addentities(MASK_ENGINE | MASK_VIEWMODEL);$/;"	f
angles_str	cl_hud.qc	/^	angles_str = ftos(viewmodel.angles.x);$/;"	v
angles_str	cl_hud.qc	/^	angles_str = strcat(angles_str, ", ");$/;"	v
angles_str	cl_hud.qc	/^	angles_str = strcat(angles_str, ftos(viewmodel.angles.y));$/;"	v
angles_str	cl_hud.qc	/^	angles_str = strcat(angles_str, ftos(viewmodel.angles.z));$/;"	v
anim_finished	cl_viewmodel.qc	/^        anim_finished = FALSE;$/;"	v
anim_finished	cl_viewmodel.qc	/^        anim_finished = TRUE;$/;"	v
barname	sui_sys.qc	/^		barname = strcat(id, "vbar");$/;"	v
barpos	sui_sys.qc	/^		barpos = [0, ofs];$/;"	v
barsize	sui_sys.qc	/^		barsize = [scrollbar_widths_y, length];$/;"	v
basecolor	m_menu.qc	/^	basecolor = sui_is_held(id) ? MENU_BUTTON - MENU_DARKEN * 0.1 : basecolor;$/;"	v
best_element_index	sui_sys.qc	/^			best_element_index = i;$/;"	v
best_pos	sui_sys.qc	/^			best_pos = center;$/;"	v
best_score	sui_sys.qc	/^			best_score = score;$/;"	v
bind_button	m_menu.qc	/^		bind_button(strcat(id, ftos(index)), [0, 0], [size_x - 6, 24], bindlist[index].name, bindlist[/;"	f
bind_list	m_menu.qc	/^	bind_list("bindlist", [xpos, ypos], [width, 160], binds_scroll);$/;"	f
bprint	sv_player.qc	/^	bprint(PRINT_HIGH, " has left the game.\\n");$/;"	f
bprint	sv_player.qc	/^	bprint(PRINT_HIGH, self.netname);$/;"	f
camang	cl_main.qc	/^	camang = getproperty(VF_ANGLES);$/;"	v
campos	cl_main.qc	/^	campos = getproperty(VF_ORIGIN);$/;"	v
char	sui_sys.qc	/^	char = _input_buffer[_input_index].char;$/;"	v
clearscene	cl_main.qc	/^	clearscene();$/;"	f
click_ratio	sui_sys.qc	/^		click_ratio = bound(0, click_ratio, 1);$/;"	v
clientcommand	sv_player.qc	/^	clientcommand(self, command_string);$/;"	f
current_menu	m_main.qc	/^	current_menu = MENU_MAIN;$/;"	v
current_menu	m_menu.qc	/^			current_menu = MENU_INGAME;$/;"	v
current_menu	m_menu.qc	/^			current_menu = MENU_MAIN;$/;"	v
current_menu	m_menu.qc	/^		current_menu = MENU_HELP;$/;"	v
current_menu	m_menu.qc	/^		current_menu = MENU_INGAME;$/;"	v
current_menu	m_menu.qc	/^		current_menu = MENU_SETTINGS;$/;"	v
cursor	sui_sys.qc	/^		cursor = max(0, cursor);$/;"	v
cursor	sui_sys.qc	/^		cursor = min(strlen(prev), cursor);$/;"	v
cursor	sui_sys.qc	/^		cursor = strlen(text);$/;"	v
cursor_pos_x	cl_main.qc	/^		cursor_pos_x = scanx;$/;"	v
cursor_pos_y	cl_main.qc	/^		cursor_pos_y = chary;$/;"	v
cursorx	m_menu.qc	/^		cursorx = 0;$/;"	v
cursorx	m_menu.qc	/^		cursorx = stringwidth(substring(text, 0, cursor), 1, textsize);$/;"	v
cvar_slider	m_menu.qc	/^	cvar_slider([xpos, ypos], [width, 32], [0, 1], "musicvolume", "Music Volume", "%.2f");$/;"	f
cvar_slider	m_menu.qc	/^	cvar_slider([xpos, ypos], [width, 32], [0, 1], "volume", "Volume", "%.2f");$/;"	f
cvar_slider	m_menu.qc	/^	cvar_slider([xpos, ypos], [width, 32], [0.1, 10], "sensitivity", "Sensitivity", "%.2f");$/;"	f
deactivate_mouse_cursor	sui_sys.qc	/^	deactivate_mouse_cursor();$/;"	f
default_pos	sui_sys.qc	/^			default_pos = _action_elements[i].pos + _action_elements[i].size * 0.5;$/;"	v
dot_score	sui_sys.qc	/^			dot_score = 1.0;$/;"	v
draw_gui	cl_main.qc	/^	draw_gui();$/;"	f
drawfill	sui_sys.qc	/^	drawfill([pos_x + size_x - width, pos_y + width], [width, size_y - width * 2], color, alpha, fl/;"	f
drawfill	sui_sys.qc	/^	drawfill([pos_x, pos_y + size_y - width], [size_x, width], color, alpha, flags);$/;"	f
drawfill	sui_sys.qc	/^	drawfill([pos_x, pos_y + width], [width, size_y - width * 2], color, alpha, flags);$/;"	f
drawfill	sui_sys.qc	/^	drawfill(pos, [size_x, width], color, alpha, flags);$/;"	f
drawfill	sui_sys.qc	/^	drawfill(pos, size, color, alpha, flags);$/;"	f
drawfont	cl_main.qc	/^	drawfont = loadfont("", "Courier Prime Code", "12,16,24,32,64,72,128,256,512", -1, 0, 0);$/;"	v
drawpic	sui_sys.qc	/^	drawpic(pos, pic, size, color, alpha, flags);$/;"	f
drawresetcliparea	sui_sys.qc	/^	drawresetcliparea();$/;"	f
drawsetcliparea	sui_sys.qc	/^	drawsetcliparea(pos.x, pos.y, size.x, size.y);$/;"	f
drawstring	sui_sys.qc	/^	drawstring(pos, text, size, color, alpha, flags);$/;"	f
entity	cl_defs.qc	/^entity() spawn = #14; \/*$/;"	f
entity	cl_defs.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainflags = #450; \/* Part of /;"	f
entity	cl_defs.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainfloat = #403; \/* Part of /;"	f
entity	cl_defs.qc	/^entity(.string field, string match, optional .entity chainfield) findchain = #402; \/* Part of D/;"	f
entity	cl_defs.qc	/^entity(entity from, optional entity to) copyentity = #400; \/* Part of DP_QC_COPYENTITY$/;"	f
entity	cl_defs.qc	/^entity(entity start, .__variant fld, __variant match) findfloat = #98; \/* Part of DP_QC_FINDFLO/;"	f
entity	cl_defs.qc	/^entity(entity start, .float fld, float match) findflags = #449; \/* Part of DP_QC_FINDFLAGS*\/$/;"	f
entity	cl_defs.qc	/^entity(entity start, .string fld, string match) find = #18; \/*$/;"	f
entity	cl_defs.qc	/^entity(entity) nextent = #47; \/*$/;"	f
entity	cl_defs.qc	/^entity(float entnum) edict_num = #459; \/* Part of DP_QC_EDICT_NUM*\/$/;"	f
entity	cl_defs.qc	/^entity(vector org, float rad, optional .entity chainfield) findradius = #22; \/*$/;"	f
entity	fteextensions.qc	/^entity() checkclient = #17; \/*$/;"	f
entity	fteextensions.qc	/^entity() spawn = #14; \/*$/;"	f
entity	fteextensions.qc	/^entity() spawn = #22;$/;"	f
entity	fteextensions.qc	/^entity() spawnclient = #454; \/* Part of DP_SV_BOTCLIENT*\/$/;"	f
entity	fteextensions.qc	/^entity(.__variant field, __variant match) findchainfloat = #27; \/* Part of DP_QC_FINDCHAINFLOAT/;"	f
entity	fteextensions.qc	/^entity(.float field, float match) findchainflags = #88; \/* Part of DP_QC_FINDCHAINFLAGS*\/$/;"	f
entity	fteextensions.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainflags = #450; \/* Part of /;"	f
entity	fteextensions.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainfloat = #403; \/* Part of /;"	f
entity	fteextensions.qc	/^entity(.string field, string match) findchain = #26; \/* Part of DP_QC_FINDCHAIN*\/$/;"	f
entity	fteextensions.qc	/^entity(.string field, string match, optional .entity chainfield) findchain = #402; \/* Part of D/;"	f
entity	fteextensions.qc	/^entity(entity from, optional entity to) copyentity = #400; \/* Part of DP_QC_COPYENTITY$/;"	f
entity	fteextensions.qc	/^entity(entity start, .__variant field, __variant match) findfloat = #25; \/* Part of DP_QC_FINDF/;"	f
entity	fteextensions.qc	/^entity(entity start, .__variant fld, __variant match) findfloat = #98; \/* Part of DP_QC_FINDFLO/;"	f
entity	fteextensions.qc	/^entity(entity start, .float field, float match) findflags = #87; \/* Part of DP_QC_FINDFLAGS*\/$/;"	f
entity	fteextensions.qc	/^entity(entity start, .float fld, float match) findflags = #449; \/* Part of DP_QC_FINDFLAGS*\/$/;"	f
entity	fteextensions.qc	/^entity(entity start, .string field, string match) find = #24;$/;"	f
entity	fteextensions.qc	/^entity(entity start, .string fld, string match) find = #18; \/*$/;"	f
entity	fteextensions.qc	/^entity(entity) nextent = #37;$/;"	f
entity	fteextensions.qc	/^entity(entity) nextent = #47; \/*$/;"	f
entity	fteextensions.qc	/^entity(float entnum) edict_num = #459; \/* Part of DP_QC_EDICT_NUM*\/$/;"	f
entity	fteextensions.qc	/^entity(float entnum, optional __out float wasspawned) respawnedict = #0:respawnedict; \/*$/;"	f
entity	fteextensions.qc	/^entity(float) ftoe = #80;$/;"	f
entity	fteextensions.qc	/^entity(string match, optional float matchnum) matchclientname = #241; \/* Part of FTE_QC_MATCHCL/;"	f
entity	fteextensions.qc	/^entity(vector org, float rad, optional .entity chainfield) findradius = #22; \/*$/;"	f
entity	m_defs.qc	/^entity() spawn = #22;$/;"	f
entity	m_defs.qc	/^entity(.__variant field, __variant match) findchainfloat = #27; \/* Part of DP_QC_FINDCHAINFLOAT/;"	f
entity	m_defs.qc	/^entity(.float field, float match) findchainflags = #88; \/* Part of DP_QC_FINDCHAINFLAGS*\/$/;"	f
entity	m_defs.qc	/^entity(.string field, string match) findchain = #26; \/* Part of DP_QC_FINDCHAIN*\/$/;"	f
entity	m_defs.qc	/^entity(entity start, .__variant field, __variant match) findfloat = #25; \/* Part of DP_QC_FINDF/;"	f
entity	m_defs.qc	/^entity(entity start, .float field, float match) findflags = #87; \/* Part of DP_QC_FINDFLAGS*\/$/;"	f
entity	m_defs.qc	/^entity(entity start, .string field, string match) find = #24;$/;"	f
entity	m_defs.qc	/^entity(entity) nextent = #37;$/;"	f
entity	m_defs.qc	/^entity(float) ftoe = #80;$/;"	f
entity	sv_defs.qc	/^entity() checkclient = #17; \/*$/;"	f
entity	sv_defs.qc	/^entity() spawn = #14; \/*$/;"	f
entity	sv_defs.qc	/^entity() spawnclient = #454; \/* Part of DP_SV_BOTCLIENT*\/$/;"	f
entity	sv_defs.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainflags = #450; \/* Part of /;"	f
entity	sv_defs.qc	/^entity(.float fld, float match, optional .entity chainfield) findchainfloat = #403; \/* Part of /;"	f
entity	sv_defs.qc	/^entity(.string field, string match, optional .entity chainfield) findchain = #402; \/* Part of D/;"	f
entity	sv_defs.qc	/^entity(entity from, optional entity to) copyentity = #400; \/* Part of DP_QC_COPYENTITY$/;"	f
entity	sv_defs.qc	/^entity(entity start, .__variant fld, __variant match) findfloat = #98; \/* Part of DP_QC_FINDFLO/;"	f
entity	sv_defs.qc	/^entity(entity start, .float fld, float match) findflags = #449; \/* Part of DP_QC_FINDFLAGS*\/$/;"	f
entity	sv_defs.qc	/^entity(entity start, .string fld, string match) find = #18; \/*$/;"	f
entity	sv_defs.qc	/^entity(entity) nextent = #47; \/*$/;"	f
entity	sv_defs.qc	/^entity(float entnum) edict_num = #459; \/* Part of DP_QC_EDICT_NUM*\/$/;"	f
entity	sv_defs.qc	/^entity(string match, optional float matchnum) matchclientname = #241; \/* Part of FTE_QC_MATCHCL/;"	f
entity	sv_defs.qc	/^entity(vector org, float rad, optional .entity chainfield) findradius = #22; \/*$/;"	f
field_t	cl_defs.qc	/^field_t(float fieldnum) entityfieldref = #0:entityfieldref; \/*$/;"	f
field_t	fteextensions.qc	/^field_t(float fieldnum) entityfieldref = #0:entityfieldref; \/*$/;"	f
field_t	m_defs.qc	/^field_t(float fieldnum) entityfieldref = #0:entityfieldref; \/*$/;"	f
field_t	sv_defs.qc	/^field_t(float fieldnum) entityfieldref = #0:entityfieldref; \/*$/;"	f
filestream	cl_defs.qc	/^filestream(string filename, float mode, optional float mmapminsize) fopen = #110; \/* Part of FR/;"	f
filestream	fteextensions.qc	/^filestream(searchhandle handle, float num) search_fopen = #0:search_fopen; \/*$/;"	f
filestream	fteextensions.qc	/^filestream(string filename, float mode) fopen = #48; \/* Part of FRIK_FILE*\/$/;"	f
filestream	fteextensions.qc	/^filestream(string filename, float mode, optional float mmapminsize) fopen = #110; \/* Part of FR/;"	f
filestream	m_defs.qc	/^filestream(string filename, float mode) fopen = #48; \/* Part of FRIK_FILE*\/$/;"	f
filestream	sv_defs.qc	/^filestream(string filename, float mode, optional float mmapminsize) fopen = #110; \/* Part of FR/;"	f
float	cl_defs.qc	/^float() CSQC_Parse_TempEntity;	\/* Please don't use this. Use CSQC_Parse_Event and multicasts in/;"	f
float	cl_defs.qc	/^float() cvars_haveunsaved = #0:cvars_haveunsaved; \/*$/;"	f
float	cl_defs.qc	/^float() droptofloor = #34; \/*$/;"	f
float	cl_defs.qc	/^float() getmousetarget = #604;$/;"	f
float	cl_defs.qc	/^float() isdemo = #349; \/*$/;"	f
float	cl_defs.qc	/^float() isserver = #350; \/*$/;"	f
float	cl_defs.qc	/^float() numentityfields = #496; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	cl_defs.qc	/^float() random = #7; \/*$/;"	f
float	cl_defs.qc	/^float() readangle = #365;$/;"	f
float	cl_defs.qc	/^float() readbyte = #360;$/;"	f
float	cl_defs.qc	/^float() readchar = #361;$/;"	f
float	cl_defs.qc	/^float() readcoord = #364;$/;"	f
float	cl_defs.qc	/^float() readentitynum = #368;$/;"	f
float	cl_defs.qc	/^float() readfloat = #367;$/;"	f
float	cl_defs.qc	/^float() readlong = #363;$/;"	f
float	cl_defs.qc	/^float() readshort = #362;$/;"	f
float	cl_defs.qc	/^float(__variant funcref) checkbuiltin = #0:checkbuiltin; \/*$/;"	f
float	cl_defs.qc	/^float(entity e, float channel) getsoundtime = #533; \/*$/;"	f
float	cl_defs.qc	/^float(entity e, float channel, string newsample, float volume, float attenuation, float pitchpct/;"	f
float	cl_defs.qc	/^float(entity e, float nowreadonly) entityprotection = #0:entityprotection; \/*$/;"	f
float	cl_defs.qc	/^float(entity e, float s) getsurfacenumpoints = #434; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	cl_defs.qc	/^float(entity e, float s) getsurfacenumtriangles = #628;$/;"	f
float	cl_defs.qc	/^float(entity e, string s, optional float offset) parseentitydata = #613; \/*$/;"	f
float	cl_defs.qc	/^float(entity e, vector p) getsurfacenearpoint = #438; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	cl_defs.qc	/^float(entity ent) checkbottom = #40; \/*$/;"	f
float	cl_defs.qc	/^float(entity ent) num_for_edict = #512;$/;"	f
float	cl_defs.qc	/^float(entity ent) wasfreed = #353; \/*$/;"	f
float	cl_defs.qc	/^float(entity ent, string tagname) gettagindex = #451; \/* Part of DP_MD3_TAGSINFO*\/$/;"	f
float	cl_defs.qc	/^float(entity pusher, vector move, vector amove) pushmove = #0:pushmove;$/;"	f
float	cl_defs.qc	/^float(entity skelent, string dollcmd, float animskel) skel_ragupdate = #281; \/*$/;"	f
float	cl_defs.qc	/^float(filestream filehandle, strbuf bufhandle, optional float startpos, optional float numstring/;"	f
float	cl_defs.qc	/^float(float a) tan = #475; \/* Part of DP_QC_ASINACOSATANATAN2TAN$/;"	f
float	cl_defs.qc	/^float(float a, float b, ...) max = #95; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	cl_defs.qc	/^float(float a, float b, ...) min = #94; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	cl_defs.qc	/^float(float angle) cos = #61; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	cl_defs.qc	/^float(float angle) sin = #60; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	cl_defs.qc	/^float(float c) acos = #472; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	cl_defs.qc	/^float(float c, float s) atan2 = #474; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	cl_defs.qc	/^float(float caseinsensitive, string s, ...) crc16 = #494; \/* Part of DP_QC_CRC16*\/$/;"	f
float	cl_defs.qc	/^float(float dividend, float divisor) mod = #245;$/;"	f
float	cl_defs.qc	/^float(float effective) getcursormode = #0:getcursormode; \/*$/;"	f
float	cl_defs.qc	/^float(float entnum, float channel, string soundname, float vol, float attenuation, vector pos, f/;"	f
float	cl_defs.qc	/^float(float evtype, float scanx, float chary, float devid) CSQC_InputEvent;	\/* Called whenever /;"	f
float	cl_defs.qc	/^float(float fieldnum) entityfieldtype = #498; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	cl_defs.qc	/^float(float fieldnum, entity ent, string s) putentityfieldstring = #500; \/* Part of DP_QC_ENTIT/;"	f
float	cl_defs.qc	/^float(float fld, float hostnr) gethostcachenumber = #621; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	cl_defs.qc	/^float(float idx) argv_end_index = #516; \/*$/;"	f
float	cl_defs.qc	/^float(float idx) argv_start_index = #515; \/*$/;"	f
float	cl_defs.qc	/^float(float inputsequencenum) getinputstate = #345; \/*$/;"	f
float	cl_defs.qc	/^float(float mdlidx) modelframecount = #0:modelframecount; \/*$/;"	f
float	cl_defs.qc	/^float(float mdlindex, string skinname) skinforname = #237;$/;"	f
float	cl_defs.qc	/^float(float minimum, float val, float maximum) bound = #96; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	cl_defs.qc	/^float(float modelid, int brushid, int faceid, float selectedstate) brush_selected = #0:brush_sel/;"	f
float	cl_defs.qc	/^float(float modidx, float framenum) frameduration = #277; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	cl_defs.qc	/^float(float modidx, float framenum, __inout float basetime, float targettime, __out int code, __/;"	f
float	cl_defs.qc	/^float(float modidx, float framenum, int eventidx, __out float timestamp, __out int code, __out s/;"	f
float	cl_defs.qc	/^float(float modidx, string framename) frameforname = #276; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	cl_defs.qc	/^float(float modlindex, optional float useabstransforms) skel_create = #263; \/* Part of FTE_CSQC/;"	f
float	cl_defs.qc	/^float(float number, float quantity) bitshift = #218; \/* Part of EXT_BITSHIFT*\/$/;"	f
float	cl_defs.qc	/^float(float playernum, string keyname, optional float assumevalue) getplayerkeyfloat = #0:getpla/;"	f
float	cl_defs.qc	/^float(float property, ...) setproperty = #303; \/*$/;"	f
float	cl_defs.qc	/^float(float resourcetype, float tryload, string resourcename) resourcestatus = #286; \/*$/;"	f
float	cl_defs.qc	/^float(float s) asin = #471; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	cl_defs.qc	/^float(float save, float take, vector inflictororg) CSQC_Parse_Damage;	\/* Called as a result of /;"	f
float	cl_defs.qc	/^float(float skel) skel_get_numbones = #265; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	cl_defs.qc	/^float(float skel, entity ent, float modelindex, float retainfrac, float firstbone, float lastbon/;"	f
float	cl_defs.qc	/^float(float skel, float bonenum) skel_get_boneparent = #267; \/* Part of FTE_CSQC_SKELETONOBJECT/;"	f
float	cl_defs.qc	/^float(float skel, int numblends, skelblend_t *weights, int structsize) skel_build_ptr = #0:skel_/;"	f
float	cl_defs.qc	/^float(float skel, string tagname) skel_find_bone = #268; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	cl_defs.qc	/^float(float stnum, optional float firstbit, optional float bitcount) getstatf = #331; \/*$/;"	f
float	cl_defs.qc	/^float(float t) atan = #473; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	cl_defs.qc	/^float(float type) gethostcachevalue = #611; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	cl_defs.qc	/^float(float v, optional float base) log = #532; \/* Part of ??MVDSV_BUILTINS$/;"	f
float	cl_defs.qc	/^float(float v, optional float base) logarithm = #0:logarithm; \/*$/;"	f
float	cl_defs.qc	/^float(float value) anglemod = #102;$/;"	f
float	cl_defs.qc	/^float(float value) sqrt = #62; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	cl_defs.qc	/^float(float value, float exp) pow = #97; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	cl_defs.qc	/^float(float yaw, float dist, optional float settraceglobals) walkmove = #32; \/*$/;"	f
float	cl_defs.qc	/^float(float) ceil = #38; \/*$/;"	f
float	cl_defs.qc	/^float(float) fabs = #43; \/*$/;"	f
float	cl_defs.qc	/^float(float) floor = #37; \/*$/;"	f
float	cl_defs.qc	/^float(float) rint = #36; \/*$/;"	f
float	cl_defs.qc	/^float(int) itof = #0:itof; \/* Part of FTE_QC_INTCONV$/;"	f
float	cl_defs.qc	/^float(optional float timetype) gettime = #519;$/;"	f
float	cl_defs.qc	/^float(searchhandle handle) search_getsize = #446; \/* Part of DP_QC_FS_SEARCH$/;"	f
float	cl_defs.qc	/^float(searchhandle handle, float num) search_getfilesize = #0:search_getfilesize; \/* Part of FT/;"	f
float	cl_defs.qc	/^float(strbuf bufhandle) buf_getsize = #462; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
float	cl_defs.qc	/^float(strbuf bufhandle, string str, float ordered) bufstr_add = #468; \/* Part of DP_QC_STRINGBU/;"	f
float	cl_defs.qc	/^float(string cmd) CSQC_ConsoleCommand;	\/* Called if the user uses any console command registed /;"	f
float	cl_defs.qc	/^float(string conname, float inevtype, float parama, float paramb, float paramc) con_input = #394/;"	f
float	cl_defs.qc	/^float(string cvarname, string defaultvalue) registercvar = #93; \/* Part of DP_REGISTERCVAR$/;"	f
float	cl_defs.qc	/^float(string effectname) particleeffectnum = #335; \/* Part of DP_ENT_TRAILEFFECTNUM, FTE_SV_POI/;"	f
float	cl_defs.qc	/^float(string extname) checkextension = #99; \/*$/;"	f
float	cl_defs.qc	/^float(string fieldname) findentityfield = #0:findentityfield; \/*$/;"	f
float	cl_defs.qc	/^float(string file, string id) cin_open = #0:cin_open;$/;"	f
float	cl_defs.qc	/^float(string filename, strbuf bufhandle) buf_loadfile = #535; \/*$/;"	f
float	cl_defs.qc	/^float(string fontname, string fontmaps, string sizes, float slot, optional float fix_scale, opti/;"	f
float	cl_defs.qc	/^float(string id) cin_getstate = #0:cin_getstate;$/;"	f
float	cl_defs.qc	/^float(string key) gethostcacheindexforkey = #622; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	cl_defs.qc	/^float(string key) stringtokeynum_menu = #614;$/;"	f
float	cl_defs.qc	/^float(string key, optional float assumevalue) serverkeyfloat = #0:serverkeyfloat; \/*$/;"	f
float	cl_defs.qc	/^float(string keyname) stringtokeynum = #341; \/*$/;"	f
float	cl_defs.qc	/^float(string modelname, float(float isnew) updatecallback, float flags) deltalisten = #371; \/*$/;"	f
float	cl_defs.qc	/^float(string modelname, optional float queryonly) getmodelindex = #200; \/*$/;"	f
float	cl_defs.qc	/^float(string msg) CSQC_Parse_CenterPrint;	\/* Gives the CSQC a chance to intercept centerprints./;"	f
float	cl_defs.qc	/^float(string name) checkcommand = #294; \/* Part of FTE_QC_CHECKCOMMAND$/;"	f
float	cl_defs.qc	/^float(string name) cvar_type = #495; \/* Part of DP_QC_CVAR_TYPE*\/$/;"	f
float	cl_defs.qc	/^float(string name) iscachedpic = #316; \/*$/;"	f
float	cl_defs.qc	/^float(string name, float key, float eventtype, optional float charcode) gecko_keyevent = #490; \//;"	f
float	cl_defs.qc	/^float(string name, optional string initialURI) gecko_create = #487; \/* Part of DP_GECKO_SUPPORT$/;"	f
float	cl_defs.qc	/^float(string progsname) addprogs = #202; \/* Part of FTE_MULTIPROGS$/;"	f
float	cl_defs.qc	/^float(string s) findfont = #356; \/* Part of DP_GFX_FONTS$/;"	f
float	cl_defs.qc	/^float(string s) isfunction = #607; \/*$/;"	f
float	cl_defs.qc	/^float(string s) memstrsize = #0:memstrsize; \/*$/;"	f
float	cl_defs.qc	/^float(string s) strlen = #114; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
float	cl_defs.qc	/^float(string s) strlennocol = #476; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
float	cl_defs.qc	/^float(string s) tokenize = #441; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
float	cl_defs.qc	/^float(string s, string separator1, ...) tokenizebyseparator = #479; \/* Part of DP_QC_TOKENIZEBY/;"	f
float	cl_defs.qc	/^float(string s1, string s2) strcasecmp = #229; \/* Part of FTE_STRINGS$/;"	f
float	cl_defs.qc	/^float(string s1, string s2, float len, optional float s1ofs, optional float s2ofs) strncasecmp =/;"	f
float	cl_defs.qc	/^float(string s1, string s2, optional float len, optional float s1ofs, optional float s2ofs) strn/;"	f
float	cl_defs.qc	/^float(string s1, string sub, optional float startidx) strstrofs = #221; \/* Part of FTE_STRINGS$/;"	f
float	cl_defs.qc	/^float(string sample) soundlength = #534; \/*$/;"	f
float	cl_defs.qc	/^float(string shadername, optional string defaultshader, ...) shaderforname = #238; \/* Part of F/;"	f
float	cl_defs.qc	/^float(string skinfilename, optional string skindata) loadcustomskin = #377; \/*$/;"	f
float	cl_defs.qc	/^float(string str) tokenize_console = #514; \/*$/;"	f
float	cl_defs.qc	/^float(string str, float index) str2chr = #222; \/* Part of FTE_STRINGS$/;"	f
float	cl_defs.qc	/^float(string text, float usecolours, optional vector fontsize) stringwidth = #327; \/*$/;"	f
float	cl_defs.qc	/^float(string text, string info) CSQC_ConsoleLink;	\/* Called if the user clicks a ^[text\\infoke/;"	f
float	cl_defs.qc	/^float(string uril, float id, optional string postmimetype, optional string postdata) uri_get = #/;"	f
float	cl_defs.qc	/^float(string) cvar = #45; \/*$/;"	f
float	cl_defs.qc	/^float(string) stof = #81; \/* Part of FRIK_FILE, FTE_QC_INFOKEY, FTE_STRINGS, QW_ENGINE, ZQ_QC_S/;"	f
float	cl_defs.qc	/^float(vector bm) setbindmaps = #632;$/;"	f
float	cl_defs.qc	/^float(vector org, float radius, vector lightcolours, optional float style, optional string cubem/;"	f
float	cl_defs.qc	/^float(vector org, float radius, vector rgb) dynamiclight_spawnstatic = #0:dynamiclight_spawnstat/;"	f
float	cl_defs.qc	/^float(vector pos) pointcontents = #41; \/*$/;"	f
float	cl_defs.qc	/^float(vector position, float character, vector size, vector rgb, float alpha, optional float dra/;"	f
float	cl_defs.qc	/^float(vector position, string pic, vector size, vector rgb, float alpha, optional float drawflag/;"	f
float	cl_defs.qc	/^float(vector position, string text, vector size, vector rgb, float alpha, float drawflag) drawst/;"	f
float	cl_defs.qc	/^float(vector position, string text, vector size, vector rgb, float alpha, optional float drawfla/;"	f
float	cl_defs.qc	/^float(vector position, vector size, vector rgb, float alpha, optional float drawflag) drawfill =/;"	f
float	cl_defs.qc	/^float(vector v) vlen = #12; \/*$/;"	f
float	cl_defs.qc	/^float(vector v, optional entity reference) vectoyaw = #13; \/*$/;"	f
float	cl_defs.qc	/^float(vector viewpos, entity entity) checkpvs = #240; \/* Part of FTE_QC_CHECKPVS*\/$/;"	f
float	cl_main.qc	/^float(float evtype, float scanx, float chary, float devid) CSQC_InputEvent =$/;"	f
float	cl_main.qc	/^float(string cmd) CSQC_ConsoleCommand =$/;"	f
float	cl_main.qc	/^float(string key, string val) find_player_id =$/;"	f
float	fteextensions.qc	/^float() CSQC_Parse_TempEntity;	\/* Please don't use this. Use CSQC_Parse_Event and multicasts in/;"	f
float	fteextensions.qc	/^float() clientcount = #61; \/*$/;"	f
float	fteextensions.qc	/^float() clientstate = #62; \/*$/;"	f
float	fteextensions.qc	/^float() cvars_haveunsaved = #0:cvars_haveunsaved; \/*$/;"	f
float	fteextensions.qc	/^float() droptofloor = #34; \/*$/;"	f
float	fteextensions.qc	/^float() ex_finaleFinished = #0:ex_finaleFinished; \/*$/;"	f
float	fteextensions.qc	/^float() getkeydest = #602;$/;"	f
float	fteextensions.qc	/^float() getmousetarget = #604;$/;"	f
float	fteextensions.qc	/^float() isdemo = #349; \/*$/;"	f
float	fteextensions.qc	/^float() isserver = #350; \/*$/;"	f
float	fteextensions.qc	/^float() isserver = #60; \/*$/;"	f
float	fteextensions.qc	/^float() numentityfields = #496; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	fteextensions.qc	/^float() random = #12;$/;"	f
float	fteextensions.qc	/^float() random = #7; \/*$/;"	f
float	fteextensions.qc	/^float() readangle = #365; \/*$/;"	f
float	fteextensions.qc	/^float() readbyte = #360; \/*$/;"	f
float	fteextensions.qc	/^float() readchar = #361; \/*$/;"	f
float	fteextensions.qc	/^float() readcoord = #364; \/*$/;"	f
float	fteextensions.qc	/^float() readentitynum = #368; \/*$/;"	f
float	fteextensions.qc	/^float() readfloat = #367; \/*$/;"	f
float	fteextensions.qc	/^float() readlong = #363; \/*$/;"	f
float	fteextensions.qc	/^float() readshort = #362; \/*$/;"	f
float	fteextensions.qc	/^float(__uint, optional float shift, float mask=24) utof = #0:utof; \/*$/;"	f
float	fteextensions.qc	/^float(__variant funcref) checkbuiltin = #0:checkbuiltin; \/*$/;"	f
float	fteextensions.qc	/^float(entity client) clienttype = #455; \/* Part of DP_SV_BOTCLIENT*\/$/;"	f
float	fteextensions.qc	/^float(entity e, float channel) getchannellevel = #0:getchannellevel; \/*$/;"	f
float	fteextensions.qc	/^float(entity e, float channel) getsoundtime = #533; \/*$/;"	f
float	fteextensions.qc	/^float(entity e, float channel, string newsample, float volume, float attenuation, float pitchpct/;"	f
float	fteextensions.qc	/^float(entity e, float nowreadonly) entityprotection = #0:entityprotection; \/*$/;"	f
float	fteextensions.qc	/^float(entity e, float s) getsurfacenumpoints = #434; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	fteextensions.qc	/^float(entity e, float s) getsurfacenumtriangles = #628;$/;"	f
float	fteextensions.qc	/^float(entity e, string key) infokeyf = #0:infokeyf; \/*$/;"	f
float	fteextensions.qc	/^float(entity e, string s, optional float offset) parseentitydata = #613; \/*$/;"	f
float	fteextensions.qc	/^float(entity e, vector p) getsurfacenearpoint = #438; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	fteextensions.qc	/^float(entity ent) checkbottom = #40; \/*$/;"	f
float	fteextensions.qc	/^float(entity ent) num_for_edict = #512;$/;"	f
float	fteextensions.qc	/^float(entity ent) wasfreed = #353; \/*$/;"	f
float	fteextensions.qc	/^float(entity ent, string tagname) gettagindex = #451; \/* Part of DP_QC_GETTAGINFO*\/$/;"	f
float	fteextensions.qc	/^float(entity player) isbackbuffered = #234; \/* Part of FTE_ISBACKBUFFERED$/;"	f
float	fteextensions.qc	/^float(entity playerEnt) ex_CheckPlayerEXFlags = #0:ex_CheckPlayerEXFlags; \/*$/;"	f
float	fteextensions.qc	/^float(entity pusher, vector move, vector amove) pushmove = #0:pushmove;$/;"	f
float	fteextensions.qc	/^float(entity skelent, string dollcmd, float animskel) skel_ragupdate = #281; \/* Part of FTE_QC_/;"	f
float	fteextensions.qc	/^float(entity) etof = #79;$/;"	f
float	fteextensions.qc	/^float(filestream filehandle, strbuf bufhandle, optional float startpos, optional float numstring/;"	f
float	fteextensions.qc	/^float(float a) tan = #475; \/* Part of DP_QC_ASINACOSATANATAN2TAN$/;"	f
float	fteextensions.qc	/^float(float a, float b, ...) max = #95; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	fteextensions.qc	/^float(float a, float b, ...) min = #94; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	fteextensions.qc	/^float(float angle) cos = #61; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	fteextensions.qc	/^float(float angle) sin = #60; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	fteextensions.qc	/^float(float attributes, string effectname, ...) RegisterTempEnt = #208; \/* Part of FTE_PEXT_CUS/;"	f
float	fteextensions.qc	/^float(float bufhandle, string match, float matchrule, float startpos, float step) bufstr_find = /;"	f
float	fteextensions.qc	/^float(float c) acos = #472; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	fteextensions.qc	/^float(float c, float s) atan2 = #474; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	fteextensions.qc	/^float(float dividend, float divisor) mod = #245; \/*$/;"	f
float	fteextensions.qc	/^float(float dividend, float divisor) modulo = #0:modulo; \/*$/;"	f
float	fteextensions.qc	/^float(float effective) getcursormode = #0:getcursormode; \/*$/;"	f
float	fteextensions.qc	/^float(float entnum, float channel, string soundname, float vol, float attenuation, vector pos, f/;"	f
float	fteextensions.qc	/^float(float evtype, float scanx, float chary, float devid) CSQC_InputEvent;	\/* Called whenever /;"	f
float	fteextensions.qc	/^float(float evtype, float scanx, float chary, float devid) Menu_InputEvent;	\/* If present, this/;"	f
float	fteextensions.qc	/^float(float fieldnum) entityfieldtype = #498; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	fteextensions.qc	/^float(float fieldnum, entity ent, string s) putentityfieldstring = #500; \/* Part of DP_QC_ENTIT/;"	f
float	fteextensions.qc	/^float(float fld, float hostnr) gethostcachenumber = #621; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
float	fteextensions.qc	/^float(float idx) argv_end_index = #516; \/*$/;"	f
float	fteextensions.qc	/^float(float idx) argv_start_index = #515; \/*$/;"	f
float	fteextensions.qc	/^float(float idx) m_gethostcachecategory;$/;"	f
float	fteextensions.qc	/^float(float inputsequencenum) getinputstate = #345; \/*$/;"	f
float	fteextensions.qc	/^float(float key, string bind, optional float bindmap, optional float modifier) setkeybind = #630/;"	f
float	fteextensions.qc	/^float(float mdlidx) modelframecount = #0:modelframecount; \/*$/;"	f
float	fteextensions.qc	/^float(float mdlindex, string skinname) skinforname = #237;$/;"	f
float	fteextensions.qc	/^float(float min,float value,float max) bound = #45; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	fteextensions.qc	/^float(float minimum, float val, float maximum) bound = #96; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	fteextensions.qc	/^float(float modelid, int brushid, int faceid, float selectedstate) brush_selected = #0:brush_sel/;"	f
float	fteextensions.qc	/^float(float modidx, float framenum) frameduration = #277; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	fteextensions.qc	/^float(float modidx, float framenum, __inout float basetime, float targettime, __out int code, __/;"	f
float	fteextensions.qc	/^float(float modidx, float framenum, int eventidx, __out float timestamp, __out int code, __out s/;"	f
float	fteextensions.qc	/^float(float modidx, int actionid) frameforaction = #0:frameforaction; \/*$/;"	f
float	fteextensions.qc	/^float(float modidx, string framename) frameforname = #276; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	fteextensions.qc	/^float(float modlindex, optional float useabstransforms) skel_create = #263; \/* Part of FTE_CSQC/;"	f
float	fteextensions.qc	/^float(float movedist, vector goal) ex_walkpathtogoal = #0:ex_walkpathtogoal; \/*$/;"	f
float	fteextensions.qc	/^float(float newangle, float oldangle) anglesub = #0:anglesub; \/*$/;"	f
float	fteextensions.qc	/^float(float newstatus) SV_ShouldPause;	\/* Called to give the qc a change to block pause\/unpaus/;"	f
float	fteextensions.qc	/^float(float number, float quantity) bitshift = #218; \/* Part of EXT_BITSHIFT*\/$/;"	f
float	fteextensions.qc	/^float(float playernum, string keyname, optional float assumevalue) getplayerkeyfloat = #0:getpla/;"	f
float	fteextensions.qc	/^float(float property, ...) setproperty = #303; \/*$/;"	f
float	fteextensions.qc	/^float(float resourcetype, float tryload, string resourcename) resourcestatus = #286; \/*$/;"	f
float	fteextensions.qc	/^float(float s) asin = #471; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	fteextensions.qc	/^float(float save, float take, vector inflictororg) CSQC_Parse_Damage;	\/* Called as a result of /;"	f
float	fteextensions.qc	/^float(float serveridx, float queryidx, float row, float column) sqlreadfloat = #258; \/* Part of/;"	f
float	fteextensions.qc	/^float(float serveridx, void(float serveridx, float queryidx, float rows, float columns, float eo/;"	f
float	fteextensions.qc	/^float(float skel) skel_get_numbones = #265; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	fteextensions.qc	/^float(float skel, entity ent, float modelindex, float retainfrac, float firstbone, float lastbon/;"	f
float	fteextensions.qc	/^float(float skel, float bonenum) skel_get_boneparent = #267; \/* Part of FTE_CSQC_SKELETONOBJECT/;"	f
float	fteextensions.qc	/^float(float skel, int numblends, skelblend_t *weights, int structsize) skel_build_ptr = #0:skel_/;"	f
float	fteextensions.qc	/^float(float skel, string tagname) skel_find_bone = #268; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	fteextensions.qc	/^float(float stnum, optional float firstbit, optional float bitcount) getstatf = #331; \/*$/;"	f
float	fteextensions.qc	/^float(float t) atan = #473; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	fteextensions.qc	/^float(float type) gethostcachevalue = #611; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
float	fteextensions.qc	/^float(float v, optional float base) log = #532; \/*$/;"	f
float	fteextensions.qc	/^float(float v, optional float base) logarithm = #0:logarithm; \/*$/;"	f
float	fteextensions.qc	/^float(float val, float m) mod = #70;$/;"	f
float	fteextensions.qc	/^float(float value) anglemod = #102;$/;"	f
float	fteextensions.qc	/^float(float value) sqrt = #62; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	fteextensions.qc	/^float(float value, float exp) pow = #97; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	fteextensions.qc	/^float(float yaw, float dist, optional float settraceglobals) walkmove = #32; \/*$/;"	f
float	fteextensions.qc	/^float(float) ceil = #36;$/;"	f
float	fteextensions.qc	/^float(float) ceil = #38; \/*$/;"	f
float	fteextensions.qc	/^float(float) cos = #39; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	fteextensions.qc	/^float(float) fabs = #18;$/;"	f
float	fteextensions.qc	/^float(float) fabs = #43; \/*$/;"	f
float	fteextensions.qc	/^float(float) floor = #35;$/;"	f
float	fteextensions.qc	/^float(float) floor = #37; \/*$/;"	f
float	fteextensions.qc	/^float(float) rint = #34;$/;"	f
float	fteextensions.qc	/^float(float) rint = #36; \/*$/;"	f
float	fteextensions.qc	/^float(float) sin = #38; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	fteextensions.qc	/^float(float) sqrt = #40; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	fteextensions.qc	/^float(float,...) max = #44; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	fteextensions.qc	/^float(float,...) min = #43; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	fteextensions.qc	/^float(float,float) pow = #46; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	fteextensions.qc	/^float(int hz, int channels, int type, void *data, unsigned int frames) queueaudio = #0:queueaudi/;"	f
float	fteextensions.qc	/^float(int, optional float shift, float mask=24) itof = #0:itof; \/* Part of FTE_QC_INTCONV$/;"	f
float	fteextensions.qc	/^float(jsonnode node) json_get_float = #0:json_get_float; \/*$/;"	f
float	fteextensions.qc	/^float(optional float forcestate) physics_supported = #0:physics_supported; \/*$/;"	f
float	fteextensions.qc	/^float(optional float sleeptime) fork = #210; \/* Part of FTE_MULTITHREADED$/;"	f
float	fteextensions.qc	/^float(optional float timetype) gettime = #519;$/;"	f
float	fteextensions.qc	/^float(optional float timetype) gettime = #67;$/;"	f
float	fteextensions.qc	/^float(optional string host, optional string user, optional string pass, optional string defaultd/;"	f
float	fteextensions.qc	/^float(searchhandle handle) search_getsize = #446; \/* Part of DP_QC_FS_SEARCH, DP_QC_FS_SEARCH_P/;"	f
float	fteextensions.qc	/^float(searchhandle handle) search_getsize = #76; \/* Part of DP_QC_FS_SEARCH, DP_QC_FS_SEARCH_PA/;"	f
float	fteextensions.qc	/^float(searchhandle handle, float num) search_getfilesize = #0:search_getfilesize; \/* Part of FT/;"	f
float	fteextensions.qc	/^float(strbuf bufhandle) buf_getsize = #442; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
float	fteextensions.qc	/^float(strbuf bufhandle) buf_getsize = #462; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
float	fteextensions.qc	/^float(strbuf bufhandle, string str, float ordered) bufstr_add = #448; \/* Part of DP_QC_STRINGBU/;"	f
float	fteextensions.qc	/^float(strbuf bufhandle, string str, float ordered) bufstr_add = #468; \/* Part of DP_QC_STRINGBU/;"	f
float	fteextensions.qc	/^float(string builtinname) builtin_find = #100; \/*$/;"	f
float	fteextensions.qc	/^float(string cmd) CSQC_ConsoleCommand;	\/* Called if the user uses any console command registed /;"	f
float	fteextensions.qc	/^float(string cmd) m_consolecommand;$/;"	f
float	fteextensions.qc	/^float(string conname, float inevtype, float parama, float paramb, float paramc) con_input = #394/;"	f
float	fteextensions.qc	/^float(string cvarname, string defaultvalue, optional float flags) registercvar = #93; \/* Part o/;"	f
float	fteextensions.qc	/^float(string destaddress, string content) sendpacket = #242; \/* Part of FTE_QC_SENDPACKET$/;"	f
float	fteextensions.qc	/^float(string effectname) particleeffectnum = #335; \/* Part of DP_ENT_TRAILEFFECTNUM, FTE_SV_POI/;"	f
float	fteextensions.qc	/^float(string ext) checkextension = #1; \/*$/;"	f
float	fteextensions.qc	/^float(string extname) checkextension = #99; \/*$/;"	f
float	fteextensions.qc	/^float(string fieldname) findentityfield = #0:findentityfield; \/*$/;"	f
float	fteextensions.qc	/^float(string file, string id) cin_open = #0:cin_open;$/;"	f
float	fteextensions.qc	/^float(string filename, strbuf bufhandle) buf_loadfile = #535; \/*$/;"	f
float	fteextensions.qc	/^float(string fname) fexists = #653; \/*$/;"	f
float	fteextensions.qc	/^float(string fname) fremove = #652; \/*$/;"	f
float	fteextensions.qc	/^float(string fontname, string fontmaps, string sizes, float slot, optional float fix_scale, opti/;"	f
float	fteextensions.qc	/^float(string id) cin_getstate = #0:cin_getstate;$/;"	f
float	fteextensions.qc	/^float(string key) gethostcacheindexforkey = #622; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
float	fteextensions.qc	/^float(string key) stringtokeynum = #614; \/*$/;"	f
float	fteextensions.qc	/^float(string key) stringtokeynum_menu = #614; \/*$/;"	f
float	fteextensions.qc	/^float(string key, optional float assumevalue) serverkeyfloat = #0:serverkeyfloat; \/*$/;"	f
float	fteextensions.qc	/^float(string keyname) stringtokeynum = #341; \/*$/;"	f
float	fteextensions.qc	/^float(string mname) precache_vwep_model = #532; \/* Part of ZQ_VWEP*\/$/;"	f
float	fteextensions.qc	/^float(string modelname, float(float isnew) updatecallback, float flags) deltalisten = #371; \/*$/;"	f
float	fteextensions.qc	/^float(string modelname, optional float queryonly) getmodelindex = #200; \/*$/;"	f
float	fteextensions.qc	/^float(string msg) CSQC_Parse_CenterPrint;	\/* Gives the CSQC a chance to intercept centerprints./;"	f
float	fteextensions.qc	/^float(string name) checkcommand = #294; \/* Part of FTE_QC_CHECKCOMMAND$/;"	f
float	fteextensions.qc	/^float(string name) cvar = #14;$/;"	f
float	fteextensions.qc	/^float(string name) cvar_type = #495; \/* Part of DP_QC_CVAR_TYPE*\/$/;"	f
float	fteextensions.qc	/^float(string name) iscachedpic = #316; \/*$/;"	f
float	fteextensions.qc	/^float(string name) iscachedpic = #451;$/;"	f
float	fteextensions.qc	/^float(string name, float key, float eventtype, optional float charcode) gecko_keyevent = #490; \//;"	f
float	fteextensions.qc	/^float(string name, optional string initialURI) gecko_create = #487; \/* Part of DP_GECKO_SUPPORT$/;"	f
float	fteextensions.qc	/^float(string name, string value, optional float flags) registercvar = #42; \/* Part of DP_REGIST/;"	f
float	fteextensions.qc	/^float(string path) rmtree = #654; \/*$/;"	f
float	fteextensions.qc	/^float(string progsname) addprogs = #202; \/* Part of FTE_MULTIPROGS$/;"	f
float	fteextensions.qc	/^float(string s) findfont = #356; \/* Part of DP_GFX_FONTS$/;"	f
float	fteextensions.qc	/^float(string s) isfunction = #607; \/*$/;"	f
float	fteextensions.qc	/^float(string s) memstrsize = #0:memstrsize; \/*$/;"	f
float	fteextensions.qc	/^float(string s) strlen = #114; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
float	fteextensions.qc	/^float(string s) strlennocol = #476; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
float	fteextensions.qc	/^float(string s) tokenize = #441; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
float	fteextensions.qc	/^float(string s, string separator1, ...) tokenizebyseparator = #479; \/* Part of DP_QC_TOKENIZEBY/;"	f
float	fteextensions.qc	/^float(string s1, string s2) strcasecmp = #229; \/* Part of FTE_STRINGS$/;"	f
float	fteextensions.qc	/^float(string s1, string s2, float len, optional float s1ofs, optional float s2ofs) strncasecmp =/;"	f
float	fteextensions.qc	/^float(string s1, string s2, optional float len, optional float s1ofs, optional float s2ofs) strn/;"	f
float	fteextensions.qc	/^float(string s1, string sub, optional float startidx) strstrofs = #221; \/* Part of FTE_STRINGS$/;"	f
float	fteextensions.qc	/^float(string sample) soundlength = #534; \/*$/;"	f
float	fteextensions.qc	/^float(string sender, string body) SV_ParseConnectionlessPacket;	\/* Provides QC with a way to co/;"	f
float	fteextensions.qc	/^float(string shadername, optional string defaultshader, ...) shaderforname = #238; \/* Part of F/;"	f
float	fteextensions.qc	/^float(string skinfilename, optional string skindata) loadcustomskin = #377; \/* Part of FTE_QC_C/;"	f
float	fteextensions.qc	/^float(string soundname, optional float queryonly) getsoundindex = #0:getsoundindex; \/*$/;"	f
float	fteextensions.qc	/^float(string src, string dst) fcopy = #650; \/*$/;"	f
float	fteextensions.qc	/^float(string src, string dst) frename = #651; \/*$/;"	f
float	fteextensions.qc	/^float(string str) tokenize_console = #514; \/*$/;"	f
float	fteextensions.qc	/^float(string str, float index) str2chr = #222; \/* Part of FTE_STRINGS$/;"	f
float	fteextensions.qc	/^float(string text, float usecolours, vector fontsize='8 8') stringwidth = #327; \/*$/;"	f
float	fteextensions.qc	/^float(string text, float usecolours, vector fontsize='8 8') stringwidth = #468;$/;"	f
float	fteextensions.qc	/^float(string text, string info) CSQC_ConsoleLink;	\/* Called if the user clicks a ^[text\\infoke/;"	f
float	fteextensions.qc	/^float(string uril, float id, optional string postmimetype, optional string postdata) uri_get = #/;"	f
float	fteextensions.qc	/^float(string) cvar = #45; \/*$/;"	f
float	fteextensions.qc	/^float(string) stof = #21; \/* Part of FRIK_FILE, FTE_QC_INFOKEY, FTE_STRINGS, QW_ENGINE, ZQ_QC_S/;"	f
float	fteextensions.qc	/^float(string) stof = #81; \/* Part of FRIK_FILE, FTE_QC_INFOKEY, FTE_STRINGS, QW_ENGINE, ZQ_QC_S/;"	f
float	fteextensions.qc	/^float(string) strlen = #52; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
float	fteextensions.qc	/^float(string) tokenize = #58; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND$/;"	f
float	fteextensions.qc	/^float(string) validstring = #81; \/*$/;"	f
float	fteextensions.qc	/^float(vector angles, float isdelta) CSQC_Parse_SetAngles;$/;"	f
float	fteextensions.qc	/^float(vector bm) setbindmaps = #632;$/;"	f
float	fteextensions.qc	/^float(vector org, float radius, vector lightcolours, optional float style, optional string cubem/;"	f
float	fteextensions.qc	/^float(vector org, float radius, vector rgb) dynamiclight_spawnstatic = #0:dynamiclight_spawnstat/;"	f
float	fteextensions.qc	/^float(vector pos) pointcontents = #41; \/*$/;"	f
float	fteextensions.qc	/^float(vector pos, vector size, float alignflags, string text) drawtextfield = #0:drawtextfield; /;"	f
float	fteextensions.qc	/^float(vector position, float character, vector scale, vector rgb, float alpha, optional float fl/;"	f
float	fteextensions.qc	/^float(vector position, float character, vector size='8 8', vector rgb='1 1 1', float alpha=1, op/;"	f
float	fteextensions.qc	/^float(vector position, string pic, vector size, vector rgb, float alpha, optional float flag) dr/;"	f
float	fteextensions.qc	/^float(vector position, string pic, vector size, vector rgb='1 1 1', float alpha=1, optional floa/;"	f
float	fteextensions.qc	/^float(vector position, string text, vector scale, vector rgb, float alpha, float flag=0) drawstr/;"	f
float	fteextensions.qc	/^float(vector position, string text, vector scale, vector rgb, float alpha, optional float flag) /;"	f
float	fteextensions.qc	/^float(vector position, string text, vector size, vector rgb, float alpha, optional float drawfla/;"	f
float	fteextensions.qc	/^float(vector position, string text, vector size='8 8', vector rgb='1 1 1', float alpha=1, float /;"	f
float	fteextensions.qc	/^float(vector position, vector size, vector rgb, float alpha, optional float drawflag) drawfill =/;"	f
float	fteextensions.qc	/^float(vector position, vector size, vector rgb, float alpha, optional float flag) drawfill = #45/;"	f
float	fteextensions.qc	/^float(vector v) vlen = #12; \/*$/;"	f
float	fteextensions.qc	/^float(vector v, optional entity reference) vectoyaw = #13; \/*$/;"	f
float	fteextensions.qc	/^float(vector viewpos, entity entity) checkpvs = #240; \/* Part of FTE_QC_CHECKPVS*\/$/;"	f
float	fteextensions.qc	/^float(vector) vectoyaw = #10;$/;"	f
float	fteextensions.qc	/^float(vector) vlen = #9;$/;"	f
float	m_defs.qc	/^float() clientcount = #61;$/;"	f
float	m_defs.qc	/^float() clientstate = #62;$/;"	f
float	m_defs.qc	/^float() cvars_haveunsaved = #0:cvars_haveunsaved; \/*$/;"	f
float	m_defs.qc	/^float() getkeydest = #602;$/;"	f
float	m_defs.qc	/^float() getmousetarget = #604;$/;"	f
float	m_defs.qc	/^float() isdemo = #349; \/*$/;"	f
float	m_defs.qc	/^float() isserver = #60;$/;"	f
float	m_defs.qc	/^float() numentityfields = #496; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	m_defs.qc	/^float() random = #12;$/;"	f
float	m_defs.qc	/^float(__variant funcref) checkbuiltin = #0:checkbuiltin; \/*$/;"	f
float	m_defs.qc	/^float(entity e, float nowreadonly) entityprotection = #0:entityprotection; \/*$/;"	f
float	m_defs.qc	/^float(entity e, string s, optional float offset) parseentitydata = #613; \/*$/;"	f
float	m_defs.qc	/^float(entity ent) num_for_edict = #512;$/;"	f
float	m_defs.qc	/^float(entity) etof = #79;$/;"	f
float	m_defs.qc	/^float(filestream filehandle, strbuf bufhandle, optional float startpos, optional float numstring/;"	f
float	m_defs.qc	/^float(float a) tan = #475; \/* Part of DP_QC_ASINACOSATANATAN2TAN$/;"	f
float	m_defs.qc	/^float(float c) acos = #472; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	m_defs.qc	/^float(float c, float s) atan2 = #474; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	m_defs.qc	/^float(float caseinsensitive, string s, ...) crc16 = #494; \/* Part of DP_QC_CRC16*\/$/;"	f
float	m_defs.qc	/^float(float effective) getcursormode = #0:getcursormode; \/*$/;"	f
float	m_defs.qc	/^float(float evtype, float scanx, float chary, float devid) Menu_InputEvent;	\/* If present, this/;"	f
float	m_defs.qc	/^float(float fieldnum) entityfieldtype = #498; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	m_defs.qc	/^float(float fieldnum, entity ent, string s) putentityfieldstring = #500; \/* Part of DP_QC_ENTIT/;"	f
float	m_defs.qc	/^float(float fld, float hostnr) gethostcachenumber = #621; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	m_defs.qc	/^float(float idx) argv_end_index = #516; \/*$/;"	f
float	m_defs.qc	/^float(float idx) argv_start_index = #515; \/*$/;"	f
float	m_defs.qc	/^float(float min,float value,float max) bound = #45; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	m_defs.qc	/^float(float property, ...) setproperty = #303; \/*$/;"	f
float	m_defs.qc	/^float(float s) asin = #471; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	m_defs.qc	/^float(float t) atan = #473; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	m_defs.qc	/^float(float type) gethostcachevalue = #611; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	m_defs.qc	/^float(float v, optional float base) log = #532; \/* Part of ??MVDSV_BUILTINS$/;"	f
float	m_defs.qc	/^float(float v, optional float base) logarithm = #0:logarithm; \/*$/;"	f
float	m_defs.qc	/^float(float val, float m) mod = #70;$/;"	f
float	m_defs.qc	/^float(float) ceil = #36;$/;"	f
float	m_defs.qc	/^float(float) cos = #39; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	m_defs.qc	/^float(float) fabs = #18;$/;"	f
float	m_defs.qc	/^float(float) floor = #35;$/;"	f
float	m_defs.qc	/^float(float) rint = #34;$/;"	f
float	m_defs.qc	/^float(float) sin = #38; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	m_defs.qc	/^float(float) sqrt = #40; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	m_defs.qc	/^float(float,...) max = #44; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	m_defs.qc	/^float(float,...) min = #43; \/* Part of DP_QC_MINMAXBOUND*\/$/;"	f
float	m_defs.qc	/^float(float,float) pow = #46; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	m_defs.qc	/^float(int) itof = #0:itof; \/* Part of FTE_QC_INTCONV$/;"	f
float	m_defs.qc	/^float(optional float timetype) gettime = #67;$/;"	f
float	m_defs.qc	/^float(searchhandle handle) search_getsize = #76; \/* Part of DP_QC_FS_SEARCH*\/$/;"	f
float	m_defs.qc	/^float(searchhandle handle, float num) search_getfilesize = #0:search_getfilesize; \/* Part of FT/;"	f
float	m_defs.qc	/^float(strbuf bufhandle) buf_getsize = #442; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
float	m_defs.qc	/^float(strbuf bufhandle, string str, float ordered) bufstr_add = #448; \/* Part of DP_QC_STRINGBU/;"	f
float	m_defs.qc	/^float(string cmd) m_consolecommand;$/;"	f
float	m_defs.qc	/^float(string conname, float inevtype, float parama, float paramb, float paramc) con_input = #394/;"	f
float	m_defs.qc	/^float(string ext) checkextension = #1; \/*$/;"	f
float	m_defs.qc	/^float(string fieldname) findentityfield = #0:findentityfield; \/*$/;"	f
float	m_defs.qc	/^float(string filename, strbuf bufhandle) buf_loadfile = #535; \/*$/;"	f
float	m_defs.qc	/^float(string fontname, string fontmaps, string sizes, float slot, optional float fix_scale, opti/;"	f
float	m_defs.qc	/^float(string key) gethostcacheindexforkey = #622; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
float	m_defs.qc	/^float(string key) stringtokeynum = #614; \/*$/;"	f
float	m_defs.qc	/^float(string keyname) stringtokeynum_csqc = #341; \/*$/;"	f
float	m_defs.qc	/^float(string name) checkcommand = #294; \/* Part of FTE_QC_CHECKCOMMAND$/;"	f
float	m_defs.qc	/^float(string name) cvar = #14;$/;"	f
float	m_defs.qc	/^float(string name) cvar_type = #495; \/* Part of DP_QC_CVAR_TYPE*\/$/;"	f
float	m_defs.qc	/^float(string name) iscachedpic = #451;$/;"	f
float	m_defs.qc	/^float(string name, float key, float eventtype, optional float charcode) gecko_keyevent = #490; \//;"	f
float	m_defs.qc	/^float(string name, optional string initialURI) gecko_create = #487; \/* Part of DP_GECKO_SUPPORT$/;"	f
float	m_defs.qc	/^float(string name, string value, float flags) registercvar = #42; \/* Part of DP_REGISTERCVAR*\/$/;"	f
float	m_defs.qc	/^float(string s) findfont = #356; \/* Part of DP_GFX_FONTS$/;"	f
float	m_defs.qc	/^float(string s) isfunction = #607; \/*$/;"	f
float	m_defs.qc	/^float(string s) memstrsize = #0:memstrsize; \/*$/;"	f
float	m_defs.qc	/^float(string s) strlennocol = #476; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
float	m_defs.qc	/^float(string s, string separator1, ...) tokenizebyseparator = #479; \/* Part of DP_QC_TOKENIZEBY/;"	f
float	m_defs.qc	/^float(string s1, string s2) strcasecmp = #229; \/* Part of FTE_STRINGS$/;"	f
float	m_defs.qc	/^float(string s1, string s2, float len, optional float s1ofs, optional float s2ofs) strncasecmp =/;"	f
float	m_defs.qc	/^float(string s1, string s2, optional float len, optional float s1ofs, optional float s2ofs) strn/;"	f
float	m_defs.qc	/^float(string s1, string sub, optional float startidx) strstrofs = #221; \/* Part of FTE_STRINGS$/;"	f
float	m_defs.qc	/^float(string sample) soundlength = #534; \/*$/;"	f
float	m_defs.qc	/^float(string shadername, optional string defaultshader, ...) shaderforname = #238; \/* Part of F/;"	f
float	m_defs.qc	/^float(string str) altstr_count = #82;$/;"	f
float	m_defs.qc	/^float(string str) tokenize_console = #514; \/*$/;"	f
float	m_defs.qc	/^float(string str, float index) str2chr = #222; \/* Part of FTE_STRINGS$/;"	f
float	m_defs.qc	/^float(string text, float usecolours, optional vector fontsize) stringwidth = #468;$/;"	f
float	m_defs.qc	/^float(string uril, float id, optional string postmimetype, optional string postdata) uri_get = #/;"	f
float	m_defs.qc	/^float(string) stof = #21; \/* Part of FRIK_FILE, FTE_QC_INFOKEY, FTE_STRINGS, QW_ENGINE, ZQ_QC_S/;"	f
float	m_defs.qc	/^float(string) strlen = #52; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
float	m_defs.qc	/^float(string) tokenize = #58; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
float	m_defs.qc	/^float(string) validstring = #81;$/;"	f
float	m_defs.qc	/^float(vector bm) setbindmaps = #632;$/;"	f
float	m_defs.qc	/^float(vector position, float character, vector scale, vector rgb, float alpha, optional float fl/;"	f
float	m_defs.qc	/^float(vector position, string pic, vector size, vector rgb, float alpha, optional float flag) dr/;"	f
float	m_defs.qc	/^float(vector position, string text, vector scale, vector rgb, float alpha, float flag) drawstrin/;"	f
float	m_defs.qc	/^float(vector position, string text, vector scale, vector rgb, float alpha, optional float flag) /;"	f
float	m_defs.qc	/^float(vector position, vector size, vector rgb, float alpha, optional float flag) drawfill = #45/;"	f
float	m_defs.qc	/^float(vector) vectoyaw = #10;$/;"	f
float	m_defs.qc	/^float(vector) vlen = #9;$/;"	f
float	m_main.qc	/^float(float evtype, float scanx, float chary, float devid) Menu_InputEvent =$/;"	f
float	m_main.qc	/^float(string cmd) m_consolecommand =$/;"	f
float	m_menu.qc	/^float(string id, vector pos, vector size, string text) my_button =$/;"	f
float	sui_sys.qc	/^float() sui_click_held = { return _holding_click; };$/;"	f
float	sui_sys.qc	/^float() sui_is_clipping =$/;"	f
float	sui_sys.qc	/^float() sui_listen_back =$/;"	f
float	sui_sys.qc	/^float() sui_listen_confirm =$/;"	f
float	sui_sys.qc	/^float() sui_listen_down = $/;"	f
float	sui_sys.qc	/^float() sui_listen_left = $/;"	f
float	sui_sys.qc	/^float() sui_listen_right = $/;"	f
float	sui_sys.qc	/^float() sui_listen_up = $/;"	f
float	sui_sys.qc	/^float(__inout float char, __inout float scan) sui_get_input =$/;"	f
float	sui_sys.qc	/^float(__inout vector pos) sui_list_item =$/;"	f
float	sui_sys.qc	/^float(float char, float scan) _sui_add_input =$/;"	f
float	sui_sys.qc	/^float(float evtype, float scanx, float chary, float devid) sui_input_event =$/;"	f
float	sui_sys.qc	/^float(float is_mouse = TRUE) _sui_mouse1_down =$/;"	f
float	sui_sys.qc	/^float(float is_mouse = TRUE) _sui_mouse1_up =$/;"	f
float	sui_sys.qc	/^float(float keycode) sui_listen_scan =$/;"	f
float	sui_sys.qc	/^float(float num) mouse_action_sanity =$/;"	f
float	sui_sys.qc	/^float(float scan) sui_input_is_back =$/;"	f
float	sui_sys.qc	/^float(float scan) sui_input_is_confirm =$/;"	f
float	sui_sys.qc	/^float(float scanx, float chary) sui_block_all =$/;"	f
float	sui_sys.qc	/^float(float scanx, float chary) sui_block_listened =$/;"	f
float	sui_sys.qc	/^float(float scanx, float chary) sui_block_menu_navigation =$/;"	f
float	sui_sys.qc	/^float(float scanx, float chary) sui_block_none =$/;"	f
float	sui_sys.qc	/^float(string command) sui_listen_command =$/;"	f
float	sui_sys.qc	/^float(string id) sui_click_index =$/;"	f
float	sui_sys.qc	/^float(string id) sui_hold_index =$/;"	f
float	sui_sys.qc	/^float(string id) sui_hover_index =$/;"	f
float	sui_sys.qc	/^float(string id) sui_is_clicked =$/;"	f
float	sui_sys.qc	/^float(string id) sui_is_held =$/;"	f
float	sui_sys.qc	/^float(string id) sui_is_hovered =$/;"	f
float	sui_sys.qc	/^float(string id) sui_is_last_clicked =$/;"	f
float	sui_sys.qc	/^float(string id) sui_is_released =$/;"	f
float	sui_sys.qc	/^float(string id) sui_last_clicked_index =$/;"	f
float	sui_sys.qc	/^float(string id) sui_release_index =$/;"	f
float	sui_sys.qc	/^float(string id, vector pos, vector size, vector minmaxsteps, float value, void(float value) act/;"	f
float	sui_sys.qc	/^float(vector dir) kb_dir_from_vec =$/;"	f
float	sui_sys.qc	/^float(vector point, vector min, vector max) is_2dpoint_in_bounds =$/;"	f
float	sui_sys.qc	/^float(vector point, vector pos, vector size) is_2dpoint_in_bbox =$/;"	f
float	sv_defs.qc	/^float() droptofloor = #34; \/*$/;"	f
float	sv_defs.qc	/^float() numentityfields = #496; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	sv_defs.qc	/^float() random = #7; \/*$/;"	f
float	sv_defs.qc	/^float(__variant funcref) checkbuiltin = #0:checkbuiltin; \/*$/;"	f
float	sv_defs.qc	/^float(entity client) clienttype = #455; \/* Part of DP_SV_BOTCLIENT*\/$/;"	f
float	sv_defs.qc	/^float(entity e, float nowreadonly) entityprotection = #0:entityprotection; \/*$/;"	f
float	sv_defs.qc	/^float(entity e, float s) getsurfacenumpoints = #434; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	sv_defs.qc	/^float(entity e, float s) getsurfacenumtriangles = #628;$/;"	f
float	sv_defs.qc	/^float(entity e, string key) infokeyf = #0:infokeyf; \/*$/;"	f
float	sv_defs.qc	/^float(entity e, string s, optional float offset) parseentitydata = #613; \/*$/;"	f
float	sv_defs.qc	/^float(entity e, vector p) getsurfacenearpoint = #438; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
float	sv_defs.qc	/^float(entity ent) checkbottom = #40; \/*$/;"	f
float	sv_defs.qc	/^float(entity ent) num_for_edict = #512;$/;"	f
float	sv_defs.qc	/^float(entity ent) wasfreed = #353; \/*$/;"	f
float	sv_defs.qc	/^float(entity ent, string tagname) gettagindex = #451; \/* Part of DP_MD3_TAGSINFO*\/$/;"	f
float	sv_defs.qc	/^float(entity player) isbackbuffered = #234; \/* Part of FTE_ISBACKBUFFERED$/;"	f
float	sv_defs.qc	/^float(entity pusher, vector move, vector amove) pushmove = #0:pushmove;$/;"	f
float	sv_defs.qc	/^float(entity skelent, string dollcmd, float animskel) skel_ragupdate = #281; \/*$/;"	f
float	sv_defs.qc	/^float(filestream filehandle, strbuf bufhandle, optional float startpos, optional float numstring/;"	f
float	sv_defs.qc	/^float(float a) tan = #475; \/* Part of DP_QC_ASINACOSATANATAN2TAN$/;"	f
float	sv_defs.qc	/^float(float a, float b, ...) max = #95; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	sv_defs.qc	/^float(float a, float b, ...) min = #94; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	sv_defs.qc	/^float(float a, float n) modulo = #0:modulo;$/;"	f
float	sv_defs.qc	/^float(float angle) cos = #61; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	sv_defs.qc	/^float(float angle) sin = #60; \/* Part of DP_QC_SINCOSSQRTPOW$/;"	f
float	sv_defs.qc	/^float(float attributes, string effectname, ...) RegisterTempEnt = #208; \/* Part of FTE_PEXT_CUS/;"	f
float	sv_defs.qc	/^float(float c) acos = #472; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	sv_defs.qc	/^float(float c, float s) atan2 = #474; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	sv_defs.qc	/^float(float caseinsensitive, string s, ...) crc16 = #494; \/* Part of DP_QC_CRC16*\/$/;"	f
float	sv_defs.qc	/^float(float dividend, float divisor) mod = #245;$/;"	f
float	sv_defs.qc	/^float(float fieldnum) entityfieldtype = #498; \/* Part of DP_QC_ENTITYDATA$/;"	f
float	sv_defs.qc	/^float(float fieldnum, entity ent, string s) putentityfieldstring = #500; \/* Part of DP_QC_ENTIT/;"	f
float	sv_defs.qc	/^float(float idx) argv_end_index = #516; \/*$/;"	f
float	sv_defs.qc	/^float(float idx) argv_start_index = #515; \/*$/;"	f
float	sv_defs.qc	/^float(float mdlidx) modelframecount = #0:modelframecount; \/*$/;"	f
float	sv_defs.qc	/^float(float mdlindex, string skinname) skinforname = #237;$/;"	f
float	sv_defs.qc	/^float(float minimum, float val, float maximum) bound = #96; \/* Part of DP_QC_MINMAXBOUND$/;"	f
float	sv_defs.qc	/^float(float modelid, int brushid, int faceid, float selectedstate) brush_selected = #0:brush_sel/;"	f
float	sv_defs.qc	/^float(float modidx, float framenum) frameduration = #277; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	sv_defs.qc	/^float(float modidx, float framenum, __inout float basetime, float targettime, __out int code, __/;"	f
float	sv_defs.qc	/^float(float modidx, float framenum, int eventidx, __out float timestamp, __out int code, __out s/;"	f
float	sv_defs.qc	/^float(float modidx, string framename) frameforname = #276; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	sv_defs.qc	/^float(float modlindex, optional float useabstransforms) skel_create = #263; \/* Part of FTE_CSQC/;"	f
float	sv_defs.qc	/^float(float newstatus) SV_ShouldPause;	\/* Called to give the qc a change to block pause\/unpaus/;"	f
float	sv_defs.qc	/^float(float number, float quantity) bitshift = #218; \/* Part of EXT_BITSHIFT*\/$/;"	f
float	sv_defs.qc	/^float(float resourcetype, float tryload, string resourcename) resourcestatus = #286; \/*$/;"	f
float	sv_defs.qc	/^float(float s) asin = #471; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	sv_defs.qc	/^float(float serveridx, float queryidx, float row, float column) sqlreadfloat = #258; \/* Part of/;"	f
float	sv_defs.qc	/^float(float serveridx, void(float serveridx, float queryidx, float rows, float columns, float eo/;"	f
float	sv_defs.qc	/^float(float skel) skel_get_numbones = #265; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	sv_defs.qc	/^float(float skel, entity ent, float modelindex, float retainfrac, float firstbone, float lastbon/;"	f
float	sv_defs.qc	/^float(float skel, float bonenum) skel_get_boneparent = #267; \/* Part of FTE_CSQC_SKELETONOBJECT/;"	f
float	sv_defs.qc	/^float(float skel, int numblends, skelblend_t *weights, int structsize) skel_build_ptr = #0:skel_/;"	f
float	sv_defs.qc	/^float(float skel, string tagname) skel_find_bone = #268; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
float	sv_defs.qc	/^float(float t) atan = #473; \/* Part of DP_QC_ASINACOSATANATAN2TAN*\/$/;"	f
float	sv_defs.qc	/^float(float v, optional float base) log = #532; \/* Part of ??MVDSV_BUILTINS$/;"	f
float	sv_defs.qc	/^float(float v, optional float base) logarithm = #0:logarithm; \/*$/;"	f
float	sv_defs.qc	/^float(float value) anglemod = #102;$/;"	f
float	sv_defs.qc	/^float(float value) sqrt = #62; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	sv_defs.qc	/^float(float value, float exp) pow = #97; \/* Part of DP_QC_SINCOSSQRTPOW*\/$/;"	f
float	sv_defs.qc	/^float(float yaw, float dist, optional float settraceglobals) walkmove = #32; \/*$/;"	f
float	sv_defs.qc	/^float(float) ceil = #38; \/*$/;"	f
float	sv_defs.qc	/^float(float) fabs = #43; \/*$/;"	f
float	sv_defs.qc	/^float(float) floor = #37; \/*$/;"	f
float	sv_defs.qc	/^float(float) rint = #36; \/*$/;"	f
float	sv_defs.qc	/^float(int) itof = #0:itof; \/* Part of FTE_QC_INTCONV$/;"	f
float	sv_defs.qc	/^float(optional float force) physics_supported = #0:physics_supported; \/*$/;"	f
float	sv_defs.qc	/^float(optional float sleeptime) fork = #210; \/* Part of FTE_MULTITHREADED$/;"	f
float	sv_defs.qc	/^float(optional float timetype) gettime = #519;$/;"	f
float	sv_defs.qc	/^float(optional string host, optional string user, optional string pass, optional string defaultd/;"	f
float	sv_defs.qc	/^float(searchhandle handle) search_getsize = #446; \/* Part of DP_QC_FS_SEARCH$/;"	f
float	sv_defs.qc	/^float(searchhandle handle, float num) search_getfilesize = #0:search_getfilesize; \/* Part of FT/;"	f
float	sv_defs.qc	/^float(strbuf bufhandle) buf_getsize = #462; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
float	sv_defs.qc	/^float(strbuf bufhandle, string str, float ordered) bufstr_add = #468; \/* Part of DP_QC_STRINGBU/;"	f
float	sv_defs.qc	/^float(string builtinname) builtin_find = #100; \/*$/;"	f
float	sv_defs.qc	/^float(string cvarname, string defaultvalue) registercvar = #93; \/* Part of DP_REGISTERCVAR$/;"	f
float	sv_defs.qc	/^float(string effectname) particleeffectnum = #335; \/* Part of DP_ENT_TRAILEFFECTNUM, FTE_SV_POI/;"	f
float	sv_defs.qc	/^float(string extname) checkextension = #99; \/*$/;"	f
float	sv_defs.qc	/^float(string fieldname) findentityfield = #0:findentityfield; \/*$/;"	f
float	sv_defs.qc	/^float(string filename, strbuf bufhandle) buf_loadfile = #535; \/*$/;"	f
float	sv_defs.qc	/^float(string key, optional float assumevalue) serverkeyfloat = #0:serverkeyfloat; \/*$/;"	f
float	sv_defs.qc	/^float(string mname) precache_vwep_model = #532; \/* Part of ZQ_VWEP*\/$/;"	f
float	sv_defs.qc	/^float(string modelname, optional float queryonly) getmodelindex = #200; \/*$/;"	f
float	sv_defs.qc	/^float(string name) checkcommand = #294; \/* Part of FTE_QC_CHECKCOMMAND$/;"	f
float	sv_defs.qc	/^float(string name) cvar_type = #495; \/* Part of DP_QC_CVAR_TYPE*\/$/;"	f
float	sv_defs.qc	/^float(string progsname) addprogs = #202; \/* Part of FTE_MULTIPROGS$/;"	f
float	sv_defs.qc	/^float(string s) isfunction = #607; \/*$/;"	f
float	sv_defs.qc	/^float(string s) memstrsize = #0:memstrsize; \/*$/;"	f
float	sv_defs.qc	/^float(string s) strlen = #114; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
float	sv_defs.qc	/^float(string s) strlennocol = #476; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
float	sv_defs.qc	/^float(string s) tokenize = #441; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
float	sv_defs.qc	/^float(string s, string separator1, ...) tokenizebyseparator = #479; \/* Part of DP_QC_TOKENIZEBY/;"	f
float	sv_defs.qc	/^float(string s1, string s2) strcasecmp = #229; \/* Part of FTE_STRINGS$/;"	f
float	sv_defs.qc	/^float(string s1, string s2, float len, optional float s1ofs, optional float s2ofs) strncasecmp =/;"	f
float	sv_defs.qc	/^float(string s1, string s2, optional float len, optional float s1ofs, optional float s2ofs) strn/;"	f
float	sv_defs.qc	/^float(string s1, string sub, optional float startidx) strstrofs = #221; \/* Part of FTE_STRINGS$/;"	f
float	sv_defs.qc	/^float(string sender, string body) SV_ParseConnectionlessPacket;	\/* Provides QC with a way to co/;"	f
float	sv_defs.qc	/^float(string str) tokenize_console = #514; \/*$/;"	f
float	sv_defs.qc	/^float(string str, float index) str2chr = #222; \/* Part of FTE_STRINGS$/;"	f
float	sv_defs.qc	/^float(string uril, float id, optional string postmimetype, optional string postdata) uri_get = #/;"	f
float	sv_defs.qc	/^float(string) cvar = #45; \/*$/;"	f
float	sv_defs.qc	/^float(string) stof = #81; \/* Part of FRIK_FILE, FTE_QC_INFOKEY, FTE_STRINGS, QW_ENGINE, ZQ_QC_S/;"	f
float	sv_defs.qc	/^float(vector pos) pointcontents = #41; \/*$/;"	f
float	sv_defs.qc	/^float(vector v) vlen = #12; \/*$/;"	f
float	sv_defs.qc	/^float(vector v, optional entity reference) vectoyaw = #13; \/*$/;"	f
float	sv_defs.qc	/^float(vector viewpos, entity entity) checkpvs = #240; \/* Part of FTE_QC_CHECKPVS*\/$/;"	f
for	cl_main.qc	/^	for (int currentindex = 0; currentindex < maxclients; currentindex++)$/;"	f
for	m_menu.qc	/^	for (float index = sui_list_item(listitem_pos); index > -1; index = sui_list_item(listitem_pos)/;"	f
for	sui_sys.qc	/^		for (int j = 0; j < _hold_action_count; j++)$/;"	f
for	sui_sys.qc	/^		for (int j = 0; j < _input_length; j++)$/;"	f
for	sui_sys.qc	/^	for (float i = 0; i < _input_length; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _action_elements_index; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _click_action_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _hold_action_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _hover_action_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _last_clicked_action_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _release_action_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < _scan_listen_count; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = 0; i < num_binds; i++)$/;"	f
for	sui_sys.qc	/^	for (int i = min(MAX_ACTION_ELEMENTS, _action_elements_index) - 1; i >= 0; i--)$/;"	f
g_height	cl_main.qc	/^	g_height = height;$/;"	v
g_width	cl_main.qc	/^	g_width = width;$/;"	v
hashtable	cl_defs.qc	/^hashtable(float tabsize, optional float defaulttype) hash_createtab = #287; \/* Part of FTE_QC_H/;"	f
hashtable	fteextensions.qc	/^hashtable(float tabsize, optional float defaulttype) hash_createtab = #287; \/* Part of FTE_QC_H/;"	f
hashtable	m_defs.qc	/^hashtable(float tabsize, optional float defaulttype) hash_createtab = #287; \/* Part of FTE_QC_H/;"	f
hashtable	sv_defs.qc	/^hashtable(float tabsize, optional float defaulttype) hash_createtab = #287; \/* Part of FTE_QC_H/;"	f
if	cl_defs.qc	/^		 if (ent.drawmask&mask){ if (!ent.predaw()) addentity(ent); }$/;"	f
if	cl_main.qc	/^		if (getplayerkeyvalue(currentindex, key) == val) return currentindex;$/;"	f
if	cl_player.qc	/^	if (input_buttons & 1) \/\/ bit 1$/;"	f
if	cl_viewmodel.qc	/^    if (this.frame1time >= viewmodel_anim_lengths[this.frame])$/;"	f
if	fteextensions.qc	/^		 if (ent.drawmask&mask){ if (!ent.predaw()) addentity(ent); }$/;"	f
if	m_main.qc	/^		if (diff > 2.5)$/;"	f
if	m_main.qc	/^	if (evtype == IE_KEYDOWN && !used)$/;"	f
if	m_main.qc	/^	if (menu_active) m_close();$/;"	f
if	m_main.qc	/^	if (menu_active)$/;"	f
if	m_main.qc	/^	if (realsize_y < 600) target_conauto = 1;$/;"	f
if	m_main.qc	/^	if (target_conauto != cvar("vid_conautoscale")) localcmd(sprintf("vid_conautoscale %f\\n", targ/;"	f
if	m_main.qc	/^	if (time < splash_time)$/;"	f
if	m_menu.qc	/^		if (menu_in_game == 1)$/;"	f
if	m_menu.qc	/^		if (menu_in_game == TRUE)$/;"	f
if	m_menu.qc	/^	if (current != old) cvar_set(cvar_s, ftos(current));$/;"	f
if	m_menu.qc	/^	if (focused) $/;"	f
if	m_menu.qc	/^	if (menu_in_game == TRUE)$/;"	f
if	m_menu.qc	/^	if (my_button("mm_help", [0, ypos], bsize, "Help"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_loadgame", [0, ypos], bsize, "Load Game"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_multiplayer", [0, ypos], bsize, "Multiplayer"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_savegame", [0, ypos], bsize, "Save Game"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_settings", [0, ypos], bsize, "Settings"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_start", [0, ypos], bsize, "New Game"))$/;"	f
if	m_menu.qc	/^	if (my_button("mm_start", [0, ypos], bsize, "Resume Game")) $/;"	f
if	m_menu.qc	/^	if (printme != "") printf("INPUT: %s\\n", printme); $/;"	f
if	m_menu.qc	/^	if (stringwidth(text, 1, textsize) > size_x - 4)$/;"	f
if	m_menu.qc	/^	if (sui_is_hovered(id)) sui_fill([0, 0], size, MENU_HIGHLIGHT, 0.1, 0);$/;"	f
if	m_menu.qc	/^	if (sui_listen_back())$/;"	f
if	sui_sys.qc	/^					if (mouse_action_sanity(_click_action_count)) break;$/;"	f
if	sui_sys.qc	/^				if (is_2dpoint_in_bbox(_cursor_position, _action_elements[i].pos, _action_elements[i].size))$/;"	f
if	sui_sys.qc	/^			if ((_cursor_position.y - boxmin.y) <= scroll_step * 2 && sui_listen_up())$/;"	f
if	sui_sys.qc	/^			if ((boxmax.y - _cursor_position.y) <= scroll_step * 2 && sui_listen_down())$/;"	f
if	sui_sys.qc	/^			if (_cursor_mouse_activate_accum > 10)$/;"	f
if	sui_sys.qc	/^			if (_hold_actions[j] == _action_elements[i].id) \/\/ yes this element was held$/;"	f
if	sui_sys.qc	/^			if (_hover_action_count == 0) _cursor_relative_hover = _cursor_position - _action_elements[i]/;"	f
if	sui_sys.qc	/^			if (_input_buffer[j].scan == keycode)$/;"	f
if	sui_sys.qc	/^			if (mouse_action_sanity(_hover_action_count)) break;$/;"	f
if	sui_sys.qc	/^			if (scan == K_MWHEELDOWN)$/;"	f
if	sui_sys.qc	/^			if (scan == K_MWHEELUP)$/;"	f
if	sui_sys.qc	/^		if (!_cursor_is_mouse_active)$/;"	f
if	sui_sys.qc	/^		if ((_cursor_position.y - boxmin.y) <= scroll_step && _sui_kb_move_dir.y < 0) offset_y -= scro/;"	f
if	sui_sys.qc	/^		if ((boxmax.y - _cursor_position.y) <= scroll_step && _sui_kb_move_dir.y > 0) offset_y += scro/;"	f
if	sui_sys.qc	/^		if (_action_elements[i].id == _sui_default_kb_focus)$/;"	f
if	sui_sys.qc	/^		if (_action_elements[i].id == target)$/;"	f
if	sui_sys.qc	/^		if (_action_elements[i].kb_nav_disabled)$/;"	f
if	sui_sys.qc	/^		if (_action_elements[i].size.x * _action_elements[i].size.y <= 0)$/;"	f
if	sui_sys.qc	/^		if (_click_actions[i] == id) return i;$/;"	f
if	sui_sys.qc	/^		if (_hold_actions[i] == id) return i;$/;"	f
if	sui_sys.qc	/^		if (_hover_actions[i] == id) return i;$/;"	f
if	sui_sys.qc	/^		if (_input_buffer[i].scan == keycode)$/;"	f
if	sui_sys.qc	/^		if (_last_clicked_actions[i] == id) return i;$/;"	f
if	sui_sys.qc	/^		if (_release_actions[i] == id) return i;$/;"	f
if	sui_sys.qc	/^		if (_scan_listens[i] == scanx)$/;"	f
if	sui_sys.qc	/^		if (_sui_binding_command != "")$/;"	f
if	sui_sys.qc	/^		if (box_overlaps)$/;"	f
if	sui_sys.qc	/^		if (cursor <= 0) return;$/;"	f
if	sui_sys.qc	/^		if (cursor >= length) return;$/;"	f
if	sui_sys.qc	/^		if (dir.x > 0) return KB_DIR_RIGHT;$/;"	f
if	sui_sys.qc	/^		if (dot_score < 0)$/;"	f
if	sui_sys.qc	/^		if (is_2dpoint_in_bbox(_cursor_position, _action_elements[i].pos, _action_elements[i].size))$/;"	f
if	sui_sys.qc	/^		if (length >= maxlen) return;$/;"	f
if	sui_sys.qc	/^		if (newvalue != value) action(newvalue);$/;"	f
if	sui_sys.qc	/^		if (score > best_score)$/;"	f
if	sui_sys.qc	/^		if (steps > 0) click_ratio = rint(click_ratio * steps) \/ steps;$/;"	f
if	sui_sys.qc	/^		if (sui_hover_index(_action_elements[i].id) >= 0)$/;"	f
if	sui_sys.qc	/^		if (sui_is_held(barname))$/;"	f
if	sui_sys.qc	/^		if (sui_listen_left())$/;"	f
if	sui_sys.qc	/^		if (sui_listen_right())$/;"	f
if	sui_sys.qc	/^	if (!_cursor_is_mouse_active)$/;"	f
if	sui_sys.qc	/^	if (!_sui_draw_initialized) $/;"	f
if	sui_sys.qc	/^	if (_action_elements_index == 0) return;$/;"	f
if	sui_sys.qc	/^	if (_action_elements_index > MAX_ACTION_ELEMENTS)$/;"	f
if	sui_sys.qc	/^	if (_action_elements_index >= MAX_ACTION_ELEMENTS)$/;"	f
if	sui_sys.qc	/^	if (_frame_index > 0) _frame_index -= 1;$/;"	f
if	sui_sys.qc	/^	if (_frame_index >= MAX_FRAMES)$/;"	f
if	sui_sys.qc	/^	if (_input_index >= _input_length) return FALSE;$/;"	f
if	sui_sys.qc	/^	if (_input_length >= MAX_INPUTS)$/;"	f
if	sui_sys.qc	/^	if (_release_action_count > 0)$/;"	f
if	sui_sys.qc	/^	if (_sui_binding_command != "")$/;"	f
if	sui_sys.qc	/^	if (_sui_hijacked_dirs & kb_dir_from_vec(dir))$/;"	f
if	sui_sys.qc	/^	if (_sui_is_clipping)$/;"	f
if	sui_sys.qc	/^	if (_sui_list_index >= _sui_list_last) return -1;$/;"	f
if	sui_sys.qc	/^	if (best_score > 0)$/;"	f
if	sui_sys.qc	/^	if (char > 31 && char < 128) \/\/an actual input$/;"	f
if	sui_sys.qc	/^	if (cmd == "+attack" || scan == K_ENTER || scan == K_GP_A)$/;"	f
if	sui_sys.qc	/^	if (cmd == "+back" || cmd == "+lookdown" || scan == K_DOWNARROW || scan == K_GP_DPAD_DOWN)$/;"	f
if	sui_sys.qc	/^	if (cmd == "+forward" || cmd == "+lookup" || scan == K_UPARROW || scan == K_GP_DPAD_UP)$/;"	f
if	sui_sys.qc	/^	if (cmd == "+moveleft" || cmd == "+lookleft" || scan == K_LEFTARROW || scan == K_GP_DPAD_LEFT)$/;"	f
if	sui_sys.qc	/^	if (cmd == "+moveright" || cmd == "+lookright" || scan == K_RIGHTARROW || scan == K_GP_DPAD_RIG/;"	f
if	sui_sys.qc	/^	if (cmd == "togglemenu" || scan == K_ESCAPE || scan == K_BACKSPACE || scan == K_GP_B)$/;"	f
if	sui_sys.qc	/^	if (dir.y > 0) return KB_DIR_DOWN;$/;"	f
if	sui_sys.qc	/^	if (fabs(dir.x) > fabs(dir.y))$/;"	f
if	sui_sys.qc	/^	if (is_mouse)$/;"	f
if	sui_sys.qc	/^	if (keyname == "01") keyname = "unbound";$/;"	f
if	sui_sys.qc	/^	if (maxoffset_y > 0 && contentsize_y > 0)$/;"	f
if	sui_sys.qc	/^	if (movedirs != '0 0 0') return TRUE;$/;"	f
if	sui_sys.qc	/^	if (num >= MAX_MOUSE_ACTIONS)$/;"	f
if	sui_sys.qc	/^	if (point_x <= min_x || point_y <= min_y) return FALSE;$/;"	f
if	sui_sys.qc	/^	if (point_x > max_x || point_y > max_y) return FALSE;$/;"	f
if	sui_sys.qc	/^	if (scan == K_BACKSPACE)$/;"	f
if	sui_sys.qc	/^	if (scan == K_ESCAPE) $/;"	f
if	sui_sys.qc	/^	if (strlen(text) > maxlen)$/;"	f
if	sui_sys.qc	/^	if (sui_hover_index(id) > -1)$/;"	f
if	sui_sys.qc	/^	if (sui_input_is_back) return TRUE;$/;"	f
if	sui_sys.qc	/^	if (sui_input_is_confirm) return TRUE;$/;"	f
if	sui_sys.qc	/^	if (sui_is_clicked(id)) cursor = strlen(text);$/;"	f
if	sui_sys.qc	/^	if (sui_is_held(id))$/;"	f
if	sui_sys.qc	/^	if (sui_is_last_clicked(id))$/;"	f
if	sui_sys.qc	/^	if (sui_is_released(id))$/;"	f
if	sui_sys.qc	/^	if (sui_listen_down()) _cursor_kb_move('0 1 0');$/;"	f
if	sui_sys.qc	/^	if (sui_listen_left()) _cursor_kb_move('-1 0 0');$/;"	f
if	sui_sys.qc	/^	if (sui_listen_right()) _cursor_kb_move('1 0 0');$/;"	f
if	sui_sys.qc	/^	if (sui_listen_up()) _cursor_kb_move('0 -1 0');$/;"	f
if	sui_sys.qc	/^	if (vlen(dir) < 0.2) return 0;$/;"	f
if	sv_customdefs.qc	/^	if (adding.player_chain_prev || adding.player_chain_next || (adding == player_chain_head && !ad/;"	f
if	sv_customdefs.qc	/^	if (player_chain_head) player_chain_head.player_chain_prev = adding;$/;"	f
if	sv_customdefs.qc	/^	if (removing == player_chain_head)$/;"	f
if	sv_customdefs.qc	/^	if (removing.player_chain_next) removing.player_chain_next.player_chain_prev = removing.player_/;"	f
if	sv_customdefs.qc	/^	if (removing.player_chain_prev) removing.player_chain_prev.player_chain_next = removing.player_/;"	f
if	sv_func_brush.qc	/^	if (self.spawnflags & 2)$/;"	f
if	sv_player.qc	/^	if ( !(self.flags & FL_JUMPRELEASED) )$/;"	f
if	sv_player.qc	/^	if (!(self.flags & FL_ONGROUND))$/;"	f
if	sv_player.qc	/^	if(self.button0)$/;"	f
if	sv_player.qc	/^	if(self.button2)$/;"	f
if	sv_player.qc	/^	if(self.flags & FL_ONGROUND)$/;"	f
infostring	fteextensions.qc	/^infostring(infostring old, string key, string value) infoadd = #226; \/* Part of FTE_STRINGS$/;"	f
input_movevalues_x	cl_player.qc	/^	input_movevalues_x = bound(-350, input_movevalues_x, 350);$/;"	v
input_movevalues_y	cl_player.qc	/^	input_movevalues_y = bound(-350, input_movevalues_y, 350);$/;"	v
input_movevalues_z	cl_player.qc	/^	input_movevalues_z = bound(-350, input_movevalues_z, 350);$/;"	v
int	cl_defs.qc	/^int(filestream fhandle, optional int newoffset) fseek = #0:fseek; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	cl_defs.qc	/^int(filestream fhandle, optional int newsize) fsize = #0:fsize; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	cl_defs.qc	/^int(filestream fhandle, void *ptr, int size) fread = #0:fread; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	cl_defs.qc	/^int(filestream fhandle, void *ptr, int size) fwrite = #0:fwrite; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	cl_defs.qc	/^int(float modelid, int brushid, int faceid, vector *points, int maxpoints) brush_getfacepoints =/;"	f
int	cl_defs.qc	/^int(float modelid, vector *planes, float *dists, int numplanes, int *out_brushes, int *out_faces/;"	f
int	cl_defs.qc	/^int(float modelidx, brushface_t *in_faces, int numfaces, int contents, optional int brushid) bru/;"	f
int	cl_defs.qc	/^int(float modelidx, int brushid, brushface_t *out_faces, int maxfaces, int *out_contents) brush_/;"	f
int	cl_defs.qc	/^int(float stnum) getstati = #330; \/*$/;"	f
int	cl_defs.qc	/^int(float) ftoi = #0:ftoi; \/* Part of FTE_QC_INTCONV$/;"	f
int	cl_defs.qc	/^int(int faceid, brushface_t *in_faces, int numfaces, vector *points, int maxpoints) brush_calcfa/;"	f
int	cl_defs.qc	/^int(string) stoh = #261; \/* Part of FTE_QC_INTCONV$/;"	f
int	cl_defs.qc	/^int(string) stoi = #259; \/* Part of FTE_QC_INTCONV$/;"	f
int	fteextensions.qc	/^int() readint = #0:readint; \/*$/;"	f
int	fteextensions.qc	/^int(__variant *dst, __variant *src, int size, optional int dstoffset, int srcoffset) memcmp = #0/;"	f
int	fteextensions.qc	/^int(entity e, string key, optional void *outbuf, int outbufsize) infokey_blob = #0:infokey_blob;/;"	f
int	fteextensions.qc	/^int(filestream fhandle, optional __int64 newoffset) fseek64 = #0:fseek64; \/*$/;"	f
int	fteextensions.qc	/^int(filestream fhandle, optional int newoffset) fseek = #0:fseek; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	fteextensions.qc	/^int(filestream fhandle, optional int newsize) fsize = #0:fsize; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	fteextensions.qc	/^int(filestream fhandle, void *ptr, int size, optional int offset) fread = #0:fread; \/* Part of /;"	f
int	fteextensions.qc	/^int(filestream fhandle, void *ptr, int size, optional int offset) fwrite = #0:fwrite; \/* Part o/;"	f
int	fteextensions.qc	/^int(float modelid, int brushid, int faceid, vector *points, int maxpoints) brush_getfacepoints =/;"	f
int	fteextensions.qc	/^int(float modelid, vector *planes, float *dists, int numplanes, int *out_brushes, int *out_faces/;"	f
int	fteextensions.qc	/^int(float modelidx, brushface_t *in_faces, int numfaces, int contents, optional int brushid) bru/;"	f
int	fteextensions.qc	/^int(float modelidx, int brushid, brushface_t *out_faces, int maxfaces, int *out_contents) brush_/;"	f
int	fteextensions.qc	/^int(float modelidx, int oldpatchid, patchvert_t *in_controlverts, patchinfo_t in_info) patch_cre/;"	f
int	fteextensions.qc	/^int(float modelidx, int patchid, patchvert_t *out_controlverts, int maxcp, patchinfo_t *out_info/;"	f
int	fteextensions.qc	/^int(float modelidx, int patchid, patchvert_t *out_verts, int maxverts, patchinfo_t *out_info) pa/;"	f
int	fteextensions.qc	/^int(float playernum, string keyname, optional void *outptr, int size) getplayerkeyblob = #0:getp/;"	f
int	fteextensions.qc	/^int(float seat, string keyname, void *outptr, int maxsize) getlocaluserinfoblob = #0:getlocaluse/;"	f
int	fteextensions.qc	/^int(float serveridx, float queryidx, float row, float column, __variant *ptr, int maxsize) sqlre/;"	f
int	fteextensions.qc	/^int(float stnum) getstati = #330; \/*$/;"	f
int	fteextensions.qc	/^int(float) ftoi = #0:ftoi; \/* Part of FTE_QC_INTCONV$/;"	f
int	fteextensions.qc	/^int(int faceid, brushface_t *in_faces, int numfaces, vector *points, int maxpoints) brush_calcfa/;"	f
int	fteextensions.qc	/^int(jsonnode node) json_get_integer = #0:json_get_integer; \/*$/;"	f
int	fteextensions.qc	/^int(jsonnode node) json_get_length = #0:json_get_length; \/*$/;"	f
int	fteextensions.qc	/^int(patchvert_t *in_controlverts, patchvert_t *out_renderverts, int maxout, patchinfo_t *inout_i/;"	f
int	fteextensions.qc	/^int(string key, optional void *ptr, int maxsize) serverkeyblob = #0:serverkeyblob; \/* Part of F/;"	f
int	fteextensions.qc	/^int(string keyname, optional void *outptr, int size) getlocalinfo = #0:getlocalinfo; \/*$/;"	f
int	fteextensions.qc	/^int(string) stoh = #261; \/* Part of FTE_QC_INTCONV$/;"	f
int	fteextensions.qc	/^int(string) stoi = #259; \/* Part of FTE_QC_INTCONV$/;"	f
int	m_defs.qc	/^int(filestream fhandle, optional int newoffset) fseek = #0:fseek; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	m_defs.qc	/^int(filestream fhandle, optional int newsize) fsize = #0:fsize; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	m_defs.qc	/^int(filestream fhandle, void *ptr, int size) fread = #0:fread; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	m_defs.qc	/^int(filestream fhandle, void *ptr, int size) fwrite = #0:fwrite; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	m_defs.qc	/^int(float) ftoi = #0:ftoi; \/* Part of FTE_QC_INTCONV$/;"	f
int	sv_defs.qc	/^int(filestream fhandle, optional int newoffset) fseek = #0:fseek; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	sv_defs.qc	/^int(filestream fhandle, optional int newsize) fsize = #0:fsize; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	sv_defs.qc	/^int(filestream fhandle, void *ptr, int size) fread = #0:fread; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	sv_defs.qc	/^int(filestream fhandle, void *ptr, int size) fwrite = #0:fwrite; \/* Part of FTE_QC_FILE_BINARY$/;"	f
int	sv_defs.qc	/^int(float modelid, int brushid, int faceid, vector *points, int maxpoints) brush_getfacepoints =/;"	f
int	sv_defs.qc	/^int(float modelid, vector *planes, float *dists, int numplanes, int *out_brushes, int *out_faces/;"	f
int	sv_defs.qc	/^int(float modelidx, brushface_t *in_faces, int numfaces, int contents, optional int brushid) bru/;"	f
int	sv_defs.qc	/^int(float modelidx, int brushid, brushface_t *out_faces, int maxfaces, int *out_contents) brush_/;"	f
int	sv_defs.qc	/^int(float serveridx, float queryidx, float row, float column, __variant *ptr, int maxsize) sqlre/;"	f
int	sv_defs.qc	/^int(float) ftoi = #0:ftoi; \/* Part of FTE_QC_INTCONV$/;"	f
int	sv_defs.qc	/^int(int faceid, brushface_t *in_faces, int numfaces, vector *points, int maxpoints) brush_calcfa/;"	f
int	sv_defs.qc	/^int(string) stoh = #261; \/* Part of FTE_QC_INTCONV$/;"	f
int	sv_defs.qc	/^int(string) stoi = #259; \/* Part of FTE_QC_INTCONV$/;"	f
json_type_e	fteextensions.qc	/^json_type_e(jsonnode node) json_get_value_type = #0:json_get_value_type; \/*$/;"	f
jsonnode	fteextensions.qc	/^jsonnode(jsonnode node, int childindex) json_get_child_at_index = #0:json_get_child_at_index; \//;"	f
jsonnode	fteextensions.qc	/^jsonnode(jsonnode node, string) json_find_object_child = #0:json_find_object_child; \/*$/;"	f
jsonnode	fteextensions.qc	/^jsonnode(string) json_parse = #0:json_parse; \/*$/;"	f
length	sui_sys.qc	/^		length = (size_y \/ contentsize_y) * size_y;$/;"	v
localcmd	cl_main.qc	/^	localcmd("crosshair 16\\n");$/;"	f
localcmd	m_menu.qc	/^		localcmd("map test2\\n");$/;"	f
localcmd	sui_sys.qc	/^	localcmd(sprintf("bind %s %s\\n", keyname, command));$/;"	f
localcmd	sui_sys.qc	/^	localcmd(sprintf("unbind %s\\n", altkeyname));$/;"	f
localcmd	sui_sys.qc	/^	localcmd(sprintf("unbind %s\\n", keyname));$/;"	f
m_close	m_main.qc	/^				m_close();$/;"	f
m_close	m_main.qc	/^			m_close();$/;"	f
m_toggle	m_menu.qc	/^		m_toggle(0);$/;"	f
makevectors	sv_player.qc	/^	makevectors(self.v_angle);$/;"	f
maxoffset_x	sui_sys.qc	/^	maxoffset_x = max(0, maxoffset_x);$/;"	v
maxoffset_y	sui_sys.qc	/^	maxoffset_y = max(0, maxoffset_y);$/;"	v
menu_active	m_main.qc	/^	menu_active = FALSE;$/;"	v
menu_active	m_main.qc	/^	menu_active = TRUE;$/;"	v
menu_in_game	m_menu.qc	/^		menu_in_game = 1;$/;"	v
mouse_hit	sui_sys.qc	/^			mouse_hit = _sui_mouse1_down();$/;"	v
mouse_hit	sui_sys.qc	/^			mouse_hit = _sui_mouse1_up();$/;"	v
my_button	m_menu.qc	/^		my_button("stg_back", [8, -8], [80, 20], "Back") ? current_menu = MENU_INGAME : 0;$/;"	f
my_button	m_menu.qc	/^		my_button("stg_back", [8, -8], [80, 20], "Back") ? current_menu = MENU_MAIN : 0;$/;"	f
my_button	m_menu.qc	/^	my_button("fs_btn", [xpos, ypos], [width, 20], "Fullscreen") ? localcmd("vid_fullscreen 2; vid_/;"	f
my_button	m_menu.qc	/^	my_button("mm_quit", [0, ypos], bsize, "Quit") ? localcmd("quit\\n") : 0;$/;"	f
my_button	m_menu.qc	/^	my_button("wn_btn", [xpos, ypos], [width, 20], "Windowed") ? localcmd("vid_fullscreen 0; vid_wi/;"	f
my_slider	m_menu.qc	/^	my_slider(strcat(cvar_s, "sldr"), [pos_x, pos_y + size_y * 0.5], [size_x, size_y * 0.5], minmax/;"	f
newvalue	sui_sys.qc	/^		newvalue = bound(minmaxsteps[0], newvalue, minmaxsteps[1]);$/;"	v
newvalue	sui_sys.qc	/^		newvalue = minval + click_ratio * (maxval - minval);$/;"	v
offset_x	sui_sys.qc	/^	offset_x = bound(0, offset_x, maxoffset_x);$/;"	v
offset_y	sui_sys.qc	/^	offset_y = bound(0, offset_y, maxoffset_y);$/;"	v
ofs	sui_sys.qc	/^		ofs = (offset_y \/ contentsize_y) * size_y;$/;"	v
origin_str	cl_hud.qc	/^	origin_str = ftos(viewmodel.origin.x);$/;"	v
origin_str	cl_hud.qc	/^	origin_str = strcat(origin_str, ", ");$/;"	v
origin_str	cl_hud.qc	/^	origin_str = strcat(origin_str, ftos(viewmodel.origin.y));$/;"	v
origin_str	cl_hud.qc	/^	origin_str = strcat(origin_str, ftos(viewmodel.origin.z));$/;"	v
player_chain_add	sv_player.qc	/^	player_chain_add(self);$/;"	f
player_chain_head	sv_customdefs.qc	/^		player_chain_head = removing.player_chain_next;$/;"	v
player_chain_head	sv_customdefs.qc	/^	player_chain_head = adding;$/;"	v
pos	sui_sys.qc	/^	pos = _sui_list_index * [0, _sui_list_item_height];$/;"	v
pos_x	sui_sys.qc	/^		pos_x = max(pos_x, _sui_clip_area_mins_x);$/;"	v
pos_y	sui_sys.qc	/^		pos_y = max(pos_y, _sui_clip_area_mins_y);$/;"	v
post_cursor	sui_sys.qc	/^		post_cursor = substring(prev, cursor + 1, length);$/;"	v
post_cursor	sui_sys.qc	/^		post_cursor = substring(prev, cursor, length);$/;"	v
pre_cursor	sui_sys.qc	/^		pre_cursor = substring(prev, 0, cursor - 1);$/;"	v
pre_cursor	sui_sys.qc	/^		pre_cursor = substring(prev, 0, cursor);$/;"	v
precache_everything	cl_main.qc	/^	precache_everything();$/;"	f
precache_everything	sv_main.qc	/^	precache_everything();$/;"	f
precache_model	sh_customdefs.qc	/^	precache_model("models\/testplayer.iqm");$/;"	f
precache_sound	sh_customdefs.qc	/^	precache_sound("demon\/dland2.wav");$/;"	f
print	cl_main.qc	/^	print(printmsg);$/;"	f
print	sui_sys.qc	/^		print("^1sui error: adding sui elements before sui_pre_draw!\\n^1  Always do your sui menus be/;"	f
print	sv_customdefs.qc	/^		print("Trying to adding an entity into player chain while it already is in chain!\\n");$/;"	f
print	sv_player.qc	/^	print("Client connect\\n");$/;"	f
printf	cl_main.qc	/^			printf("No action for byte %f\\n", first);$/;"	f
printf	sui_sys.qc	/^			printf("mouse moved to %v\\n", pos);$/;"	f
printf	sui_sys.qc	/^		printf("^3sui warning: amount of action elements = %.0f exceeds MAX_ACTION_ELEMENTS = %.0f, co/;"	f
printf	sui_sys.qc	/^		printf("^3sui warning: amount of frames = %.0f exceeds MAX_FRAMES = %.0f, consider increasing /;"	f
printf	sui_sys.qc	/^		printf("^3sui warning: exceeded amount of per frame inputs count MAX_INPUTS = %.0f\\n"$/;"	f
printf	sui_sys.qc	/^		printf("^3sui warning: you have exceeded the amount of overlapping action elements with %.0f, /;"	f
printme	m_menu.qc	/^		printme = strcat(printme, chr2str(char));$/;"	v
prnum	cl_defs.qc	/^		prnum=-1 means current progs.$/;"	v
prnum	cl_defs.qc	/^		prnum=-2 will scan through the active progs and will use the first it finds. *\/$/;"	v
prnum	cl_defs.qc	/^		prnum=0 is the 'default' or 'main' progs.$/;"	v
prnum	fteextensions.qc	/^		prnum=-1 means current progs.$/;"	v
prnum	fteextensions.qc	/^		prnum=-2 will scan through the active progs and will use the first it finds. *\/$/;"	v
prnum	fteextensions.qc	/^		prnum=0 is the 'default' or 'main' progs.$/;"	v
prnum	sv_defs.qc	/^		prnum=-1 means current progs.$/;"	v
prnum	sv_defs.qc	/^		prnum=-2 will scan through the active progs and will use the first it finds. *\/$/;"	v
prnum	sv_defs.qc	/^		prnum=0 is the 'default' or 'main' progs.$/;"	v
r_x	cl_customdefs.qc	/^	r_x = readcoord();$/;"	v
r_y	cl_customdefs.qc	/^	r_y = readcoord();$/;"	v
r_z	cl_customdefs.qc	/^	r_z = readcoord();$/;"	v
registercommand	m_main.qc	/^	registercommand("togglemenu2");$/;"	f
remove	cl_main.qc	/^	remove(self);$/;"	f
remove	sv_customdefs.qc	/^	remove(self);$/;"	f
renderscene	cl_main.qc	/^	renderscene();$/;"	f
root_menu	m_main.qc	/^		root_menu(screensize);$/;"	f
runstandardplayerphysics	sv_player.qc	/^	runstandardplayerphysics(self);$/;"	f
scan	sui_sys.qc	/^	scan = _input_buffer[_input_index].scan;$/;"	v
searchhandle	cl_defs.qc	/^searchhandle(string pattern, float caseinsensitive, float quiet) search_begin = #444; \/* Part o/;"	f
searchhandle	fteextensions.qc	/^searchhandle(string pattern, enumflags:float{$/;"	f
searchhandle	fteextensions.qc	/^searchhandle(string pattern, enumflags:float{SB_CASEINSENSITIVE=1<<0,SB_FULLPACKAGEPATH=1<<1,SB_/;"	f
searchhandle	m_defs.qc	/^searchhandle(string pattern, float caseinsensitive, float quiet) search_begin = #74; \/* Part of/;"	f
searchhandle	sv_defs.qc	/^searchhandle(string pattern, float caseinsensitive, float quiet) search_begin = #444; \/* Part o/;"	f
setcursormode	m_main.qc	/^	setcursormode(TRUE,"gfx\/xhair", [16, 16], cvar("vid_conautoscale"));$/;"	f
setcustomskin	cl_player.qc	/^	setcustomskin(viewmodel, __NULL__, "replace \\"Arms\\" \\"custommaterials\/pistol_arms\\"\\n");$/;"	f
setcustomskin	cl_player.qc	/^	setcustomskin(viewmodel, __NULL__, "replace \\"Magazine\\" \\"custommaterials\/pistol_arms\\"\\/;"	f
setcustomskin	cl_player.qc	/^	setcustomskin(viewmodel, __NULL__, "replace \\"Pistol\\" \\"custommaterials\/pistol_arms\\"\\n"/;"	f
setkeydest	m_main.qc	/^	setkeydest(0);$/;"	f
setkeydest	m_main.qc	/^	setkeydest(2);$/;"	f
setmodel	sv_func_brush.qc	/^	setmodel(self, self.model);$/;"	f
setmodel	sv_player.qc	/^	setmodel(self, "models\/testplayer.iqm");$/;"	f
setmodel	sv_triggers.qc	/^	setmodel(self, self.model);$/;"	f
setmodelindex	cl_viewmodel.qc	/^    setmodelindex(this, to);$/;"	f
setorigin	cl_viewmodel.qc	/^    setorigin(this, [0, 0, 0]);$/;"	f
setorigin	sv_player.qc	/^	setorigin(self, get_spawn_point());$/;"	f
setproperty	cl_main.qc	/^	setproperty(VF_DRAWCROSSHAIR, 1);$/;"	f
setproperty	cl_main.qc	/^	setproperty(VF_DRAWENGINESBAR, 0);	$/;"	f
setsize	cl_viewmodel.qc	/^    setsize(this, [0, 0, 0], [0, 0, 0]);$/;"	f
setsize	sv_player.qc	/^	setsize(self, [-16, -16, 0], [16, 16, 56]);$/;"	f
spawnpoint	sv_player.qc	/^	spawnpoint = find(spawnpoint, classname, "info_player_start");$/;"	v
splash_time	m_main.qc	/^	splash_time = time + 2.5;$/;"	v
strbuf	cl_defs.qc	/^strbuf() buf_create = #460; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
strbuf	fteextensions.qc	/^strbuf() buf_create = #440; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
strbuf	fteextensions.qc	/^strbuf() buf_create = #460; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
strbuf	m_defs.qc	/^strbuf() buf_create = #440; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
strbuf	sv_defs.qc	/^strbuf() buf_create = #460; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	cl_defs.qc	/^string() ReadPicture = #501; \/*$/;"	f
string	cl_defs.qc	/^string() getextresponse = #624; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
string	cl_defs.qc	/^string() readstring = #366;$/;"	f
string	cl_defs.qc	/^string(entity e) generateentitydata = #0:generateentitydata; \/*$/;"	f
string	cl_defs.qc	/^string(entity e, float s) getsurfacetexture = #437; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
string	cl_defs.qc	/^string(entity e, string key) infokey = #80; \/* Part of FTE_QC_INFOKEY, QW_ENGINE$/;"	f
string	cl_defs.qc	/^string(entity ent) etos = #65; \/* Part of DP_QC_ETOS*\/$/;"	f
string	cl_defs.qc	/^string(filestream fhandle) fgets = #112; \/* Part of FRIK_FILE$/;"	f
string	cl_defs.qc	/^string(float ccase, float redalpha, float redchars, string str, ...) strconv = #224; \/* Part of/;"	f
string	cl_defs.qc	/^string(float chr, ...) chr2str = #223; \/* Part of FTE_STRINGS$/;"	f
string	cl_defs.qc	/^string(float efnum, float body) particleeffectquery = #374; \/*$/;"	f
string	cl_defs.qc	/^string(float fieldnum) entityfieldname = #497; \/* Part of DP_QC_ENTITYDATA$/;"	f
string	cl_defs.qc	/^string(float fieldnum, entity ent) getentityfieldstring = #499; \/* Part of DP_QC_ENTITYDATA*\/$/;"	f
string	cl_defs.qc	/^string(float keynum) getkeybind = #342; \/*$/;"	f
string	cl_defs.qc	/^string(float keynum) keynumtostring = #340; \/*$/;"	f
string	cl_defs.qc	/^string(float keynum) keynumtostring_menu = #609;$/;"	f
string	cl_defs.qc	/^string(float keynum) keynumtostring_omgwtf = #520;$/;"	f
string	cl_defs.qc	/^string(float mdlindex) modelnameforindex = #334; \/*$/;"	f
string	cl_defs.qc	/^string(float modidx, float framenum) frametoname = #284;$/;"	f
string	cl_defs.qc	/^string(float modidx, float skin) skintoname = #285;$/;"	f
string	cl_defs.qc	/^string(float n) argv = #442; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
string	cl_defs.qc	/^string(float pad, string str1, ...) strpad = #225; \/* Part of FTE_STRINGS$/;"	f
string	cl_defs.qc	/^string(float playernum, string keyname) getplayerkeyvalue = #348; \/*$/;"	f
string	cl_defs.qc	/^string(float skel, float bonenum) skel_get_bonename = #266; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
string	cl_defs.qc	/^string(float stnum) getstats = #332; \/*$/;"	f
string	cl_defs.qc	/^string(float style, optional __out vector rgb) getlightstyle = #0:getlightstyle; \/*$/;"	f
string	cl_defs.qc	/^string(float type, float hostnr) gethostcachestring = #612; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
string	cl_defs.qc	/^string(float uselocaltime, string format, ...) strftime = #478; \/* Part of DP_QC_STRFTIME*\/$/;"	f
string	cl_defs.qc	/^string(float val) ftos = #26; \/*$/;"	f
string	cl_defs.qc	/^string(hashtable table, float idx) hash_getkey = #292; \/* Part of FTE_QC_HASHTABLES$/;"	f
string	cl_defs.qc	/^string(infostring info, string key) infoget = #227; \/* Part of FTE_STRINGS$/;"	f
string	cl_defs.qc	/^string(infostring old, string key, string value) infoadd = #226; \/* Part of FTE_STRINGS$/;"	f
string	cl_defs.qc	/^string(int) htos = #262; \/* Part of FTE_QC_INTCONV$/;"	f
string	cl_defs.qc	/^string(int) itos = #260; \/* Part of FTE_QC_INTCONV$/;"	f
string	cl_defs.qc	/^string(optional string resetstring) getentitytoken = #355; \/*$/;"	f
string	cl_defs.qc	/^string(searchhandle handle, float num) search_getfilemtime = #0:search_getfilemtime; \/* Part of/;"	f
string	cl_defs.qc	/^string(searchhandle handle, float num) search_getfilename = #447; \/* Part of DP_QC_FS_SEARCH$/;"	f
string	cl_defs.qc	/^string(strbuf bufhandle, float string_index) bufstr_get = #466; \/* Part of DP_QC_STRINGBUFFERS*/;"	f
string	cl_defs.qc	/^string(strbuf bufhandle, string glue) buf_implode = #465; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	cl_defs.qc	/^string(string command, optional float bindmap) findkeysforcommand = #521; \/*$/;"	f
string	cl_defs.qc	/^string(string command, optional float bindmap) findkeysforcommandex = #0:findkeysforcommandex; \//;"	f
string	cl_defs.qc	/^string(string conname, string field, optional string newvalue) con_getset = #391; \/* Part of FT/;"	f
string	cl_defs.qc	/^string(string cvarname) cvar_description = #518; \/*$/;"	f
string	cl_defs.qc	/^string(string cvarname) cvar_string = #448; \/* Part of DP_QC_CVAR_STRING*\/$/;"	f
string	cl_defs.qc	/^string(string digest, string data, ...) digest_hex = #639;$/;"	f
string	cl_defs.qc	/^string(string dnsname, optional float defport) netaddress_resolve = #625;$/;"	f
string	cl_defs.qc	/^string(string filename, optional float makereferenced) whichpack = #503; \/* Part of DP_QC_WHICH/;"	f
string	cl_defs.qc	/^string(string fmt, ...) sprintf = #627; \/* Part of DP_QC_SPRINTF*\/$/;"	f
string	cl_defs.qc	/^string(string in) uri_escape = #510; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	cl_defs.qc	/^string(string in) uri_unescape = #511; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	cl_defs.qc	/^string(string key) serverkey = #354; \/*$/;"	f
string	cl_defs.qc	/^string(string name, optional float trywad) precache_pic = #317; \/*$/;"	f
string	cl_defs.qc	/^string(string s) argescape = #295; \/*$/;"	f
string	cl_defs.qc	/^string(string s) cvar_defstring = #482; \/* Part of DP_QC_CVAR_DEFSTRING*\/$/;"	f
string	cl_defs.qc	/^string(string s) precache_file = #68; \/*$/;"	f
string	cl_defs.qc	/^string(string s) precache_model = #20; \/*$/;"	f
string	cl_defs.qc	/^string(string s) precache_sound = #19; \/*$/;"	f
string	cl_defs.qc	/^string(string s) strdecolorize = #477; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
string	cl_defs.qc	/^string(string s) strtolower = #480; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	cl_defs.qc	/^string(string s) strtoupper = #481; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	cl_defs.qc	/^string(string s) strtrim = #0:strtrim; \/*$/;"	f
string	cl_defs.qc	/^string(string s, ...) strzone = #118; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
string	cl_defs.qc	/^string(string s, float start, float length) substring = #116; \/* Part of FRIK_FILE, FTE_STRINGS/;"	f
string	cl_defs.qc	/^string(string s1, optional string s2, optional string s3, optional string s4, optional string s5/;"	f
string	cl_defs.qc	/^string(string search, string replace, string subject) strireplace = #485; \/* Part of DP_QC_STRR/;"	f
string	cl_defs.qc	/^string(string search, string replace, string subject) strreplace = #484; \/* Part of DP_QC_STRRE/;"	f
string	cl_defs.qc	/^string(string shadname, string propname) gecko_getproperty = #0:gecko_getproperty; \/*$/;"	f
string	cl_defs.qc	/^string(string str) precache_file2 = #77;$/;"	f
string	cl_defs.qc	/^string(string str) precache_model2 = #75;$/;"	f
string	cl_defs.qc	/^string(string str) precache_sound2 = #76;$/;"	f
string	cl_defs.qc	/^string(string uri, string method, string postdata, __in string requestheaders, __inout string re/;"	f
string	cl_defs.qc	/^string(vector val) vtos = #27; \/*$/;"	f
string	fteextensions.qc	/^string() ReadPicture = #501; \/*$/;"	f
string	fteextensions.qc	/^string() getextresponse = #624; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
string	fteextensions.qc	/^string() readstring = #366; \/*$/;"	f
string	fteextensions.qc	/^string(__variant *ptr, int bytes, optional int offset) base64encode = #0:base64encode; \/*$/;"	f
string	fteextensions.qc	/^string(entity e) generateentitydata = #0:generateentitydata; \/*$/;"	f
string	fteextensions.qc	/^string(entity e, float s) getsurfacetexture = #437; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
string	fteextensions.qc	/^string(entity e, string key) infokey = #80; \/* Part of FTE_QC_INFOKEY, QW_ENGINE$/;"	f
string	fteextensions.qc	/^string(entity ent) etos = #65; \/* Part of DP_QC_ETOS$/;"	f
string	fteextensions.qc	/^string(entity player, optional string newnode) clustertransfer = #0:clustertransfer; \/*$/;"	f
string	fteextensions.qc	/^string(entity) etos = #20; \/* Part of DP_QC_ETOS*\/$/;"	f
string	fteextensions.qc	/^string(filestream fhandle) fgets = #112; \/* Part of FRIK_FILE$/;"	f
string	fteextensions.qc	/^string(filestream fhandle) fgets = #50; \/* Part of FRIK_FILE*\/$/;"	f
string	fteextensions.qc	/^string(float ccase, float redalpha, float redchars, string str, ...) strconv = #224; \/* Part of/;"	f
string	fteextensions.qc	/^string(float chr, ...) chr2str = #223; \/* Part of FTE_STRINGS$/;"	f
string	fteextensions.qc	/^string(float efnum, float body) particleeffectquery = #374; \/*$/;"	f
string	fteextensions.qc	/^string(float fieldnum) entityfieldname = #497; \/* Part of DP_QC_ENTITYDATA$/;"	f
string	fteextensions.qc	/^string(float fieldnum, entity ent) getentityfieldstring = #499; \/* Part of DP_QC_ENTITYDATA*\/$/;"	f
string	fteextensions.qc	/^string(float fld, float hostnr) gethostcachestring = #612; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
string	fteextensions.qc	/^string(float keynum) keynumtostring = #340; \/*$/;"	f
string	fteextensions.qc	/^string(float keynum) keynumtostring = #609; \/*$/;"	f
string	fteextensions.qc	/^string(float keynum, optional float bindmap, optional float modifier) getkeybind = #342; \/*$/;"	f
string	fteextensions.qc	/^string(float mdlindex) modelnameforindex = #334; \/*$/;"	f
string	fteextensions.qc	/^string(float modidx, float framenum) frametoname = #284;$/;"	f
string	fteextensions.qc	/^string(float modidx, float skin) skintoname = #285;$/;"	f
string	fteextensions.qc	/^string(float n) argv = #442; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
string	fteextensions.qc	/^string(float n, float prop) getgamedirinfo = #626; \/*$/;"	f
string	fteextensions.qc	/^string(float pad, string str1, ...) strpad = #225; \/* Part of FTE_STRINGS$/;"	f
string	fteextensions.qc	/^string(float playernum, string keyname) getplayerkeyvalue = #348; \/*$/;"	f
string	fteextensions.qc	/^string(float seat, string keyname) getlocaluserinfo = #0:getlocaluserinfo; \/*$/;"	f
string	fteextensions.qc	/^string(float serveridx) sqlversion = #257; \/* Part of FTE_SQL*\/$/;"	f
string	fteextensions.qc	/^string(float serveridx, __variant *ptr, int maxsize) sqlescapeblob = #0:sqlescapeblob;$/;"	f
string	fteextensions.qc	/^string(float serveridx, float queryidx, float row, float column) sqlreadfield = #254; \/* Part o/;"	f
string	fteextensions.qc	/^string(float serveridx, optional float queryidx) sqlerror = #255; \/* Part of FTE_SQL*\/$/;"	f
string	fteextensions.qc	/^string(float serveridx, string data) sqlescape = #256; \/* Part of FTE_SQL*\/$/;"	f
string	fteextensions.qc	/^string(float skel, float bonenum) skel_get_bonename = #266; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
string	fteextensions.qc	/^string(float sndindex) soundnameforindex = #0:soundnameforindex; \/*$/;"	f
string	fteextensions.qc	/^string(float stnum) getstats = #332; \/*$/;"	f
string	fteextensions.qc	/^string(float style, optional __out vector rgb) getlightstyle = #0:getlightstyle; \/*$/;"	f
string	fteextensions.qc	/^string(float uselocaltime, string format, ...) strftime = #478; \/* Part of DP_QC_STRFTIME*\/$/;"	f
string	fteextensions.qc	/^string(float val) ftos = #26; \/*$/;"	f
string	fteextensions.qc	/^string(float) argv = #59; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND$/;"	f
string	fteextensions.qc	/^string(float) ftos = #17;$/;"	f
string	fteextensions.qc	/^string(hashtable table, float idx) hash_getkey = #292; \/* Part of FTE_QC_HASHTABLES$/;"	f
string	fteextensions.qc	/^string(infostring info, string key) infoget = #227; \/* Part of FTE_STRINGS$/;"	f
string	fteextensions.qc	/^string(int n, int prop) getpackagemanagerinfo = #0:getpackagemanagerinfo; \/*$/;"	f
string	fteextensions.qc	/^string(int) htos = #262; \/* Part of FTE_QC_INTCONV$/;"	f
string	fteextensions.qc	/^string(int) itos = #260; \/* Part of FTE_QC_INTCONV$/;"	f
string	fteextensions.qc	/^string(jsonnode node) json_get_name = #0:json_get_name; \/*$/;"	f
string	fteextensions.qc	/^string(jsonnode node) json_get_string = #0:json_get_string; \/*$/;"	f
string	fteextensions.qc	/^string(optional string resetstring) getentitytoken = #355; \/*$/;"	f
string	fteextensions.qc	/^string(searchhandle handle, float num) search_getfilemtime = #0:search_getfilemtime; \/* Part of/;"	f
string	fteextensions.qc	/^string(searchhandle handle, float num) search_getfilename = #447; \/* Part of DP_QC_FS_SEARCH, D/;"	f
string	fteextensions.qc	/^string(searchhandle handle, float num) search_getfilename = #77; \/* Part of DP_QC_FS_SEARCH, DP/;"	f
string	fteextensions.qc	/^string(searchhandle handle, float num) search_getpackagename = #0:search_getpackagename; \/*$/;"	f
string	fteextensions.qc	/^string(strbuf bufhandle, float string_index) bufstr_get = #446; \/* Part of DP_QC_STRINGBUFFERS*/;"	f
string	fteextensions.qc	/^string(strbuf bufhandle, float string_index) bufstr_get = #466; \/* Part of DP_QC_STRINGBUFFERS*/;"	f
string	fteextensions.qc	/^string(strbuf bufhandle, string glue) buf_implode = #445; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	fteextensions.qc	/^string(strbuf bufhandle, string glue) buf_implode = #465; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	fteextensions.qc	/^string(string addr, string uinfo, string features)  SV_CheckRejectConnection;	\/* Called to give/;"	f
string	fteextensions.qc	/^string(string command, optional float bindmap) findkeysforcommand = #610;$/;"	f
string	fteextensions.qc	/^string(string command, optional float bindmap) findkeysforcommandex = #0:findkeysforcommandex; \//;"	f
string	fteextensions.qc	/^string(string conname, string field, optional string newvalue) con_getset = #391; \/* Part of FT/;"	f
string	fteextensions.qc	/^string(string cvarname) cvar_description = #518; \/*$/;"	f
string	fteextensions.qc	/^string(string cvarname) cvar_string = #448; \/* Part of DP_QC_CVAR_STRING*\/$/;"	f
string	fteextensions.qc	/^string(string digest, string data, ...) digest_hex = #639;$/;"	f
string	fteextensions.qc	/^string(string digest, void *data, int length, optional int offset) digest_ptr = #0:digest_ptr; \//;"	f
string	fteextensions.qc	/^string(string dnsname, optional float defport) netaddress_resolve = #625; \/*$/;"	f
string	fteextensions.qc	/^string(string file) precache_file = #28; \/*$/;"	f
string	fteextensions.qc	/^string(string filename, optional enumflags:float{WP_REFERENCEPACKAGE,WP_FULLPACKAGEPATH} flags) /;"	f
string	fteextensions.qc	/^string(string fmt, ...) sprintf = #627; \/* Part of DP_QC_SPRINTF$/;"	f
string	fteextensions.qc	/^string(string in) uri_escape = #510; \/* Part of DP_QC_URI_ESCAPE$/;"	f
string	fteextensions.qc	/^string(string in) uri_unescape = #511; \/* Part of DP_QC_URI_ESCAPE$/;"	f
string	fteextensions.qc	/^string(string javascript) js_run_script = #0:js_run_script; \/*$/;"	f
string	fteextensions.qc	/^string(string key) serverkey = #354; \/*$/;"	f
string	fteextensions.qc	/^string(string modelname, int frame, float frametime) spriteframe = #0:spriteframe; \/*$/;"	f
string	fteextensions.qc	/^string(string name) cvar_defstring = #89; \/* Part of DP_QC_CVAR_DEFSTRING*\/$/;"	f
string	fteextensions.qc	/^string(string name) cvar_string = #71; \/* Part of DP_QC_CVAR_STRING$/;"	f
string	fteextensions.qc	/^string(string name, optional float flags) precache_pic = #317; \/*$/;"	f
string	fteextensions.qc	/^string(string name, optional float flags) precache_pic = #452;$/;"	f
string	fteextensions.qc	/^string(string s) argescape = #295; \/*$/;"	f
string	fteextensions.qc	/^string(string s) cvar_defstring = #482; \/* Part of DP_QC_CVAR_DEFSTRING*\/$/;"	f
string	fteextensions.qc	/^string(string s) precache_file = #68; \/*$/;"	f
string	fteextensions.qc	/^string(string s) precache_model = #20; \/*$/;"	f
string	fteextensions.qc	/^string(string s) precache_sound = #19; \/*$/;"	f
string	fteextensions.qc	/^string(string s) strdecolorize = #477; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
string	fteextensions.qc	/^string(string s) strtolower = #480; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	fteextensions.qc	/^string(string s) strtoupper = #481; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	fteextensions.qc	/^string(string s) strtrim = #0:strtrim; \/*$/;"	f
string	fteextensions.qc	/^string(string s, float start, float length) substring = #116; \/* Part of FRIK_FILE, FTE_STRINGS/;"	f
string	fteextensions.qc	/^string(string s, float start, float length) substring = #54; \/* Part of FRIK_FILE, FTE_STRINGS,/;"	f
string	fteextensions.qc	/^string(string s1, optional string s2, optional string s3, optional string s4, optional string s5/;"	f
string	fteextensions.qc	/^string(string sample) precache_sound = #29;$/;"	f
string	fteextensions.qc	/^string(string search, string replace, string subject) strireplace = #485; \/* Part of DP_QC_STRR/;"	f
string	fteextensions.qc	/^string(string search, string replace, string subject) strreplace = #484; \/* Part of DP_QC_STRRE/;"	f
string	fteextensions.qc	/^string(string shadername) CSQC_GenerateMaterial;	\/* Returns the material text to use for the na/;"	f
string	fteextensions.qc	/^string(string shadname, string propname) gecko_getproperty = #0:gecko_getproperty; \/*$/;"	f
string	fteextensions.qc	/^string(string str) precache_file2 = #77; \/*$/;"	f
string	fteextensions.qc	/^string(string str) precache_model2 = #75; \/*$/;"	f
string	fteextensions.qc	/^string(string str) precache_sound2 = #76; \/*$/;"	f
string	fteextensions.qc	/^string(string uri, string method, string postdata, __in string requestheaders, __inout string re/;"	f
string	fteextensions.qc	/^string(string, optional string, optional string, optional string, optional string, optional stri/;"	f
string	fteextensions.qc	/^string(vector pos) getlocationname = #0:getlocationname; \/*$/;"	f
string	fteextensions.qc	/^string(vector val) vtos = #27; \/*$/;"	f
string	fteextensions.qc	/^string(vector) vtos = #19;$/;"	f
string	m_defs.qc	/^string() getextresponse = #624; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
string	m_defs.qc	/^string(entity e) generateentitydata = #0:generateentitydata; \/*$/;"	f
string	m_defs.qc	/^string(entity) etos = #20; \/* Part of DP_QC_ETOS*\/$/;"	f
string	m_defs.qc	/^string(filestream fhandle) fgets = #50; \/* Part of FRIK_FILE*\/$/;"	f
string	m_defs.qc	/^string(float ccase, float redalpha, float redchars, string str, ...) strconv = #224; \/* Part of/;"	f
string	m_defs.qc	/^string(float chr, ...) chr2str = #223; \/* Part of FTE_STRINGS$/;"	f
string	m_defs.qc	/^string(float fieldnum) entityfieldname = #497; \/* Part of DP_QC_ENTITYDATA$/;"	f
string	m_defs.qc	/^string(float fieldnum, entity ent) getentityfieldstring = #499; \/* Part of DP_QC_ENTITYDATA*\/$/;"	f
string	m_defs.qc	/^string(float keynum) getkeybind = #342; \/*$/;"	f
string	m_defs.qc	/^string(float keynum) keynumtostring = #609; \/*$/;"	f
string	m_defs.qc	/^string(float keynum) keynumtostring_csqc = #340; \/*$/;"	f
string	m_defs.qc	/^string(float pad, string str1, ...) strpad = #225; \/* Part of FTE_STRINGS$/;"	f
string	m_defs.qc	/^string(float type, float hostnr) gethostcachestring = #612; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
string	m_defs.qc	/^string(float uselocaltime, string format, ...) strftime = #478; \/* Part of DP_QC_STRFTIME*\/$/;"	f
string	m_defs.qc	/^string(float) argv = #59; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
string	m_defs.qc	/^string(float) ftos = #17;$/;"	f
string	m_defs.qc	/^string(hashtable table, float idx) hash_getkey = #292; \/* Part of FTE_QC_HASHTABLES$/;"	f
string	m_defs.qc	/^string(infostring info, string key) infoget = #227; \/* Part of FTE_STRINGS$/;"	f
string	m_defs.qc	/^string(infostring old, string key, string value) infoadd = #226; \/* Part of FTE_STRINGS$/;"	f
string	m_defs.qc	/^string(searchhandle handle, float num) search_getfilemtime = #0:search_getfilemtime; \/* Part of/;"	f
string	m_defs.qc	/^string(searchhandle handle, float num) search_getfilename = #77; \/* Part of DP_QC_FS_SEARCH*\/$/;"	f
string	m_defs.qc	/^string(strbuf bufhandle, float string_index) bufstr_get = #446; \/* Part of DP_QC_STRINGBUFFERS*/;"	f
string	m_defs.qc	/^string(strbuf bufhandle, string glue) buf_implode = #445; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	m_defs.qc	/^string(string command, optional float bindmap) findkeysforcommand = #610;$/;"	f
string	m_defs.qc	/^string(string conname, string field, optional string newvalue) con_getset = #391; \/* Part of FT/;"	f
string	m_defs.qc	/^string(string cvarname) cvar_description = #518; \/*$/;"	f
string	m_defs.qc	/^string(string digest, string data, ...) digest_hex = #639;$/;"	f
string	m_defs.qc	/^string(string digest, void *data, int length) digest_ptr = #0:digest_ptr; \/*$/;"	f
string	m_defs.qc	/^string(string dnsname, optional float defport) netaddress_resolve = #625;$/;"	f
string	m_defs.qc	/^string(string file) precache_file = #28;$/;"	f
string	m_defs.qc	/^string(string filename, optional float makereferenced) whichpack = #503; \/* Part of DP_QC_WHICH/;"	f
string	m_defs.qc	/^string(string fmt, ...) sprintf = #627; \/* Part of DP_QC_SPRINTF$/;"	f
string	m_defs.qc	/^string(string in) uri_escape = #510; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	m_defs.qc	/^string(string in) uri_unescape = #511; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	m_defs.qc	/^string(string name) cvar_string = #71; \/* Part of DP_QC_CVAR_STRING*\/$/;"	f
string	m_defs.qc	/^string(string name, optional float trywad) precache_pic = #452;$/;"	f
string	m_defs.qc	/^string(string s) argescape = #295; \/*$/;"	f
string	m_defs.qc	/^string(string s) cvar_defstring = #482; \/* Part of DP_QC_CVAR_DEFSTRING*\/$/;"	f
string	m_defs.qc	/^string(string s) strdecolorize = #477; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
string	m_defs.qc	/^string(string s) strtolower = #480; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	m_defs.qc	/^string(string s) strtoupper = #481; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	m_defs.qc	/^string(string s) strtrim = #0:strtrim; \/*$/;"	f
string	m_defs.qc	/^string(string s, float start, float length) substring = #54; \/* Part of FRIK_FILE, FTE_STRINGS,/;"	f
string	m_defs.qc	/^string(string sample) precache_sound = #29;$/;"	f
string	m_defs.qc	/^string(string search, string replace, string subject) strireplace = #485; \/* Part of DP_QC_STRR/;"	f
string	m_defs.qc	/^string(string search, string replace, string subject) strreplace = #484; \/* Part of DP_QC_STRRE/;"	f
string	m_defs.qc	/^string(string shadname, string propname) gecko_getproperty = #0:gecko_getproperty; \/*$/;"	f
string	m_defs.qc	/^string(string str) altstr_prepare = #83;$/;"	f
string	m_defs.qc	/^string(string str, float num) altstr_get = #84;$/;"	f
string	m_defs.qc	/^string(string str, float num, string set)  altstr_set = #85;$/;"	f
string	m_defs.qc	/^string(string uri, string method, string postdata, __in string requestheaders, __inout string re/;"	f
string	m_defs.qc	/^string(string) strzone = #56; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
string	m_defs.qc	/^string(string, optional string, optional string, optional string, optional string, optional stri/;"	f
string	m_defs.qc	/^string(vector) vtos = #19;$/;"	f
string	sui_sys.qc	/^string() sui_listen_text_input =$/;"	f
string	sui_sys.qc	/^string(string id, vector pos, vector size, string name, string command) sui_binder =$/;"	f
string	sv_defs.qc	/^string(entity e) generateentitydata = #0:generateentitydata; \/*$/;"	f
string	sv_defs.qc	/^string(entity e, float s) getsurfacetexture = #437; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
string	sv_defs.qc	/^string(entity e, string key) infokey = #80; \/* Part of FTE_QC_INFOKEY, QW_ENGINE$/;"	f
string	sv_defs.qc	/^string(entity ent) etos = #65; \/* Part of DP_QC_ETOS*\/$/;"	f
string	sv_defs.qc	/^string(entity player, optional string newnode) clustertransfer = #0:clustertransfer; \/*$/;"	f
string	sv_defs.qc	/^string(filestream fhandle) fgets = #112; \/* Part of FRIK_FILE$/;"	f
string	sv_defs.qc	/^string(float ccase, float redalpha, float redchars, string str, ...) strconv = #224; \/* Part of/;"	f
string	sv_defs.qc	/^string(float chr, ...) chr2str = #223; \/* Part of FTE_STRINGS$/;"	f
string	sv_defs.qc	/^string(float fieldnum) entityfieldname = #497; \/* Part of DP_QC_ENTITYDATA$/;"	f
string	sv_defs.qc	/^string(float fieldnum, entity ent) getentityfieldstring = #499; \/* Part of DP_QC_ENTITYDATA*\/$/;"	f
string	sv_defs.qc	/^string(float modidx, float framenum) frametoname = #284;$/;"	f
string	sv_defs.qc	/^string(float modidx, float skin) skintoname = #285;$/;"	f
string	sv_defs.qc	/^string(float n) argv = #442; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
string	sv_defs.qc	/^string(float pad, string str1, ...) strpad = #225; \/* Part of FTE_STRINGS$/;"	f
string	sv_defs.qc	/^string(float serveridx) sqlversion = #257; \/* Part of FTE_SQL*\/$/;"	f
string	sv_defs.qc	/^string(float serveridx, __variant *ptr, int maxsize) sqlescapeblob = #0:sqlescapeblob;$/;"	f
string	sv_defs.qc	/^string(float serveridx, float queryidx, float row, float column) sqlreadfield = #254; \/* Part o/;"	f
string	sv_defs.qc	/^string(float serveridx, optional float queryidx) sqlerror = #255; \/* Part of FTE_SQL*\/$/;"	f
string	sv_defs.qc	/^string(float serveridx, string data) sqlescape = #256; \/* Part of FTE_SQL*\/$/;"	f
string	sv_defs.qc	/^string(float skel, float bonenum) skel_get_bonename = #266; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
string	sv_defs.qc	/^string(float style, optional __out vector rgb) getlightstyle = #0:getlightstyle; \/*$/;"	f
string	sv_defs.qc	/^string(float uselocaltime, string format, ...) strftime = #478; \/* Part of DP_QC_STRFTIME*\/$/;"	f
string	sv_defs.qc	/^string(float val) ftos = #26; \/*$/;"	f
string	sv_defs.qc	/^string(hashtable table, float idx) hash_getkey = #292; \/* Part of FTE_QC_HASHTABLES$/;"	f
string	sv_defs.qc	/^string(infostring info, string key) infoget = #227; \/* Part of FTE_STRINGS$/;"	f
string	sv_defs.qc	/^string(infostring old, string key, string value) infoadd = #226; \/* Part of FTE_STRINGS$/;"	f
string	sv_defs.qc	/^string(int) htos = #262; \/* Part of FTE_QC_INTCONV$/;"	f
string	sv_defs.qc	/^string(int) itos = #260; \/* Part of FTE_QC_INTCONV$/;"	f
string	sv_defs.qc	/^string(searchhandle handle, float num) search_getfilemtime = #0:search_getfilemtime; \/* Part of/;"	f
string	sv_defs.qc	/^string(searchhandle handle, float num) search_getfilename = #447; \/* Part of DP_QC_FS_SEARCH$/;"	f
string	sv_defs.qc	/^string(strbuf bufhandle, float string_index) bufstr_get = #466; \/* Part of DP_QC_STRINGBUFFERS*/;"	f
string	sv_defs.qc	/^string(strbuf bufhandle, string glue) buf_implode = #465; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
string	sv_defs.qc	/^string(string addr, string uinfo, string features)  SV_CheckRejectConnection;	\/* Called to give/;"	f
string	sv_defs.qc	/^string(string cvarname) cvar_description = #518; \/*$/;"	f
string	sv_defs.qc	/^string(string cvarname) cvar_string = #448; \/* Part of DP_QC_CVAR_STRING*\/$/;"	f
string	sv_defs.qc	/^string(string digest, string data, ...) digest_hex = #639;$/;"	f
string	sv_defs.qc	/^string(string dnsname, optional float defport) netaddress_resolve = #625;$/;"	f
string	sv_defs.qc	/^string(string filename, optional float makereferenced) whichpack = #503; \/* Part of DP_QC_WHICH/;"	f
string	sv_defs.qc	/^string(string fmt, ...) sprintf = #627; \/* Part of DP_QC_SPRINTF*\/$/;"	f
string	sv_defs.qc	/^string(string in) uri_escape = #510; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	sv_defs.qc	/^string(string in) uri_unescape = #511; \/* Part of DP_QC_URI_ESCAPE*\/$/;"	f
string	sv_defs.qc	/^string(string key) serverkey = #354; \/*$/;"	f
string	sv_defs.qc	/^string(string s) argescape = #295; \/*$/;"	f
string	sv_defs.qc	/^string(string s) cvar_defstring = #482; \/* Part of DP_QC_CVAR_DEFSTRING*\/$/;"	f
string	sv_defs.qc	/^string(string s) precache_file = #68; \/*$/;"	f
string	sv_defs.qc	/^string(string s) precache_model = #20; \/*$/;"	f
string	sv_defs.qc	/^string(string s) precache_sound = #19; \/*$/;"	f
string	sv_defs.qc	/^string(string s) strdecolorize = #477; \/* Part of DP_QC_STRINGCOLORFUNCTIONS$/;"	f
string	sv_defs.qc	/^string(string s) strtolower = #480; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	sv_defs.qc	/^string(string s) strtoupper = #481; \/* Part of DP_QC_STRING_CASE_FUNCTIONS*\/$/;"	f
string	sv_defs.qc	/^string(string s) strtrim = #0:strtrim; \/*$/;"	f
string	sv_defs.qc	/^string(string s, ...) strzone = #118; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
string	sv_defs.qc	/^string(string s, float start, float length) substring = #116; \/* Part of FRIK_FILE, FTE_STRINGS/;"	f
string	sv_defs.qc	/^string(string s1, optional string s2, optional string s3, optional string s4, optional string s5/;"	f
string	sv_defs.qc	/^string(string search, string replace, string subject) strireplace = #485; \/* Part of DP_QC_STRR/;"	f
string	sv_defs.qc	/^string(string search, string replace, string subject) strreplace = #484; \/* Part of DP_QC_STRRE/;"	f
string	sv_defs.qc	/^string(string str) precache_file2 = #77;$/;"	f
string	sv_defs.qc	/^string(string str) precache_model2 = #75;$/;"	f
string	sv_defs.qc	/^string(string str) precache_sound2 = #76;$/;"	f
string	sv_defs.qc	/^string(string uri, string method, string postdata, __in string requestheaders, __inout string re/;"	f
string	sv_defs.qc	/^string(vector val) vtos = #27; \/*$/;"	f
sui_action_element	m_menu.qc	/^	sui_action_element([0, 0], size, id, sui_noop);$/;"	f
sui_action_element	sui_sys.qc	/^		sui_action_element(barpos, barsize, barname, sui_noop, TRUE);$/;"	f
sui_action_element	sui_sys.qc	/^	sui_action_element([0, 0], size, id, sui_noop, TRUE);$/;"	f
sui_action_element	sui_sys.qc	/^	sui_action_element(pos, size, id, sui_noop);$/;"	f
sui_begin	cl_hud.qc	/^    sui_begin(g_width, g_height);$/;"	f
sui_begin	m_main.qc	/^	sui_begin(screensize_x, screensize_y);$/;"	f
sui_border_box	m_menu.qc	/^	sui_border_box([0, 0], size, 2, MENU_BORDER, 0.2, 0);$/;"	f
sui_border_box	m_menu.qc	/^	sui_border_box([0, 0], size, 2, MENU_BORDER, 0.3, 0);$/;"	f
sui_border_box	sui_sys.qc	/^		sui_border_box(_action_elements[i].pos, _action_elements[i].size, 1, '1 0 0', 0.25, 0);$/;"	f
sui_clear_input	sui_sys.qc	/^	sui_clear_input();$/;"	f
sui_clip_to_frame	m_menu.qc	/^		sui_clip_to_frame();$/;"	f
sui_clip_to_frame	sui_sys.qc	/^	sui_clip_to_frame();$/;"	f
sui_draw_bind_overlay	sui_sys.qc	/^	sui_draw_bind_overlay();$/;"	f
sui_end	cl_hud.qc	/^	sui_end();$/;"	f
sui_end	m_main.qc	/^	sui_end();$/;"	f
sui_fill	m_main.qc	/^			sui_fill([0, 0], screensize, '0 0 0', 1, 0);$/;"	f
sui_fill	m_main.qc	/^			sui_fill([0, 0], screensize, '0 0 0', a * 2, 0);$/;"	f
sui_fill	m_menu.qc	/^		sui_fill([cursorx, 0], [2, textsize_y], MENU_TEXT_1, fabs(sin(time * 4)), 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([0, 0], size, '0 0 0', 0.5, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([0, 0], size, MENU_BG, 0.3, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([0, 0], size, MENU_BG, 0.75, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([0, 0], size, basecolor, 0.6, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([0, size_y * 0.25], [size_x, size_y * 0.5], MENU_BG_DARK, 1.0, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill([sliderx - 2, 0], [4, size_y], slider_ctrl_color, 1.0, 0);$/;"	f
sui_fill	m_menu.qc	/^	sui_fill(pos, size, MENU_BG_DARK, 0.75, 0);$/;"	f
sui_fill	sui_sys.qc	/^		sui_fill([0, 0], size, '0 0 0', 0.5, 0);$/;"	f
sui_fill	sui_sys.qc	/^		sui_fill(_action_elements[i].pos + _action_elements[i].size * 0.5 - [1, 1], [2, 2], '0 1 0', 0/;"	f
sui_fill	sui_sys.qc	/^		sui_fill(barpos, barsize, '0.1 0.1 0.1' * (1 - sui_is_hovered(barname)), 0.66, 0);$/;"	f
sui_hijack_kb_nav	sui_sys.qc	/^		sui_hijack_kb_nav(KB_DIR_LEFT);$/;"	f
sui_hijack_kb_nav	sui_sys.qc	/^		sui_hijack_kb_nav(KB_DIR_RIGHT);$/;"	f
sui_input_event	cl_main.qc	/^	sui_input_event(evtype, scanx, chary, devid);$/;"	f
sui_list_view_begin	m_menu.qc	/^	sui_list_view_begin(strcat(id, "scrl"), pos, size, [size_x - 6, 24], bindlist.length, scrollofs/;"	f
sui_list_view_end	m_menu.qc	/^	sui_list_view_end();	$/;"	f
sui_menu_nav	m_main.qc	/^	sui_menu_nav();$/;"	f
sui_pic	m_main.qc	/^			sui_pic(randomofs() * 1, [screensize_y * (0.7 + xstretch), screensize_y * 0.7], "gfx\/splash./;"	f
sui_pic	m_main.qc	/^			sui_pic(randomofs() * a, [screensize_y * (0.7 + random() * 0.05), screensize_y * 0.7], "gfx\//;"	f
sui_pic	m_main.qc	/^			sui_pic(randomofs() * a, [screensize_y * 0.7, screensize_y * 0.7], "gfx\/splash.tga", '1 1 1'/;"	f
sui_pop_frame	m_menu.qc	/^		sui_pop_frame();$/;"	f
sui_pop_frame	m_menu.qc	/^	sui_pop_frame();	$/;"	f
sui_pop_frame	m_menu.qc	/^	sui_pop_frame();$/;"	f
sui_pop_frame	sui_sys.qc	/^		sui_pop_frame();$/;"	f
sui_pop_frame	sui_sys.qc	/^	sui_pop_frame();$/;"	f
sui_push_frame	m_menu.qc	/^		sui_push_frame(listitem_pos, [size_x - 6, 24]);$/;"	f
sui_push_frame	m_menu.qc	/^	sui_push_frame([2, 0], [size_x - 4, size_y - 4]);$/;"	f
sui_push_frame	m_menu.qc	/^	sui_push_frame(pos, [size_x, size_y * 0.5 - 4]);$/;"	f
sui_push_frame	m_menu.qc	/^	sui_push_frame(pos, size);$/;"	f
sui_push_frame	sui_sys.qc	/^		sui_push_frame([0, 0], [scrollbar_widths_y, size_y]);$/;"	f
sui_push_frame	sui_sys.qc	/^		sui_push_frame(_action_elements[i].pos, _action_elements[i].size);$/;"	f
sui_push_frame	sui_sys.qc	/^	sui_push_frame(-1 * offset, contentsize);$/;"	f
sui_push_frame	sui_sys.qc	/^	sui_push_frame([0, 0], [width, height]);$/;"	f
sui_push_frame	sui_sys.qc	/^	sui_push_frame([0, 0], size);$/;"	f
sui_push_frame	sui_sys.qc	/^	sui_push_frame(pos, size - [scrollbar_widths_y, scrollbar_widths_x]);$/;"	f
sui_reread_input	sui_sys.qc	/^		sui_reread_input();$/;"	f
sui_reset_align	sui_sys.qc	/^	sui_reset_align();$/;"	f
sui_reset_clip	m_menu.qc	/^	sui_reset_clip();$/;"	f
sui_reset_clip	sui_sys.qc	/^	sui_reset_clip();$/;"	f
sui_reset_frame	sui_sys.qc	/^	sui_reset_frame();$/;"	f
sui_scroll_view_begin	sui_sys.qc	/^	sui_scroll_view_begin(id, pos, size, contentsize, offset, scrollbar_widths, itemsize.y);$/;"	f
sui_scroll_view_end	sui_sys.qc	/^	sui_scroll_view_end();$/;"	f
sui_scrollbar	sui_sys.qc	/^	sui_scrollbar(id, size, contentsize, offset, scrollbar_widths);$/;"	f
sui_set_align	m_main.qc	/^		sui_set_align([SUI_ALIGN_CENTER, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	m_menu.qc	/^		sui_set_align([SUI_ALIGN_END, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_CENTER, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_CENTER, SUI_ALIGN_END]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_CENTER, SUI_ALIGN_START]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_END, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_END, SUI_ALIGN_END]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_END, SUI_ALIGN_START]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_START, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_START, SUI_ALIGN_END]);$/;"	f
sui_set_align	m_menu.qc	/^	sui_set_align([SUI_ALIGN_START, SUI_ALIGN_START]);$/;"	f
sui_set_align	sui_sys.qc	/^		sui_set_align([SUI_ALIGN_CENTER, SUI_ALIGN_CENTER]);$/;"	f
sui_set_align	sui_sys.qc	/^		sui_set_align([SUI_ALIGN_END, SUI_ALIGN_START]);$/;"	f
sui_set_default_kb_focus	m_menu.qc	/^	sui_set_default_kb_focus("mm_start");$/;"	f
sui_set_default_kb_focus	m_menu.qc	/^	sui_set_default_kb_focus("volume");$/;"	f
sui_start_bind	sui_sys.qc	/^		sui_start_bind(command, name);$/;"	f
sui_text	cl_hud.qc	/^	sui_text(pos, size, strcat("Angles: ", angles_str), '1 1 1', 1.0, 0);$/;"	f
sui_text	cl_hud.qc	/^	sui_text(pos, size, strcat("Origin: ", origin_str), '1 1 1', 1.0, 0);$/;"	f
sui_text	m_menu.qc	/^		sui_text([0, 0], textsize, text, MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([-6, 0], MENU_TEXT_SMALL, key, MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 0], MENU_TEXT_SMALL, name, MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 0], MENU_TEXT_SMALL, sprintf(format, current), MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 0], MENU_TEXT_SMALL, text, text_color, 1, 0);	$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 4], MENU_TEXT_MEDIUM, "Help", MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 4], MENU_TEXT_MEDIUM, "Settings", MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([0, 64], MENU_TEXT_LARGE, "vector0", [1, 1, 1], 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([6, 0], MENU_TEXT_SMALL, name, MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([xpos, ypos], MENU_TEXT_SMALL, "Bunch of Help and About", MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([xpos, ypos], MENU_TEXT_SMALL, "Controls", MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([xpos, ypos], MENU_TEXT_SMALL, "Video", MENU_TEXT_1, 1, 0);$/;"	f
sui_text	m_menu.qc	/^	sui_text([xpos, ypos], MENU_TEXT_SMALL, "Window can be resized.", MENU_TEXT_1, 0.8, 0);$/;"	f
sui_text	sui_sys.qc	/^		sui_text([0, -16], [textsize, textsize], "Press a key for", '1 1 1', 1, 0);$/;"	f
sui_text	sui_sys.qc	/^		sui_text([0, -4], [8, 8], _action_elements[i].id, '1 0 0', 0.75, 0);$/;"	f
sui_text	sui_sys.qc	/^		sui_text([0, 0], [textsize, textsize], sprintf("'%s'", _sui_binding_command_name), '1 1 1', 1,/;"	f
sui_text	sui_sys.qc	/^		sui_text([0, 16], [textsize - 4, textsize - 4], "ESC to cancel, BACKSPACE to remove", '1 1 1',/;"	f
sui_text_input	m_menu.qc	/^	sui_text_input(id, [0, 0], size, text, cursor);$/;"	f
sui_transform_box	sui_sys.qc	/^	sui_transform_box(pos, [stringwidth(text, 1, size), size_y]);$/;"	f
sui_transform_box	sui_sys.qc	/^	sui_transform_box(pos, size);$/;"	f
sui_transform_point	sui_sys.qc	/^			sui_transform_point(anchor);$/;"	f
sui_transform_point	sui_sys.qc	/^		sui_transform_point(boxmax);$/;"	f
sui_transform_point	sui_sys.qc	/^		sui_transform_point(boxmin);$/;"	f
switch	cl_main.qc	/^		switch (scanx)$/;"	f
switch	cl_main.qc	/^	switch(argv(0))$/;"	f
switch	cl_main.qc	/^	switch(evtype)$/;"	f
switch	cl_main.qc	/^	switch(first) {$/;"	f
switch	m_main.qc	/^		switch (cmd)$/;"	f
switch	m_main.qc	/^		switch (scanx)$/;"	f
switch	m_main.qc	/^	switch (argv(0))$/;"	f
switch	m_menu.qc	/^	switch (current_menu)$/;"	f
switch	sui_sys.qc	/^	switch (_frames[idx].align.x) $/;"	f
switch	sui_sys.qc	/^	switch (_frames[idx].align.y) $/;"	f
switch	sui_sys.qc	/^	switch (evtype)$/;"	f
switch	sv_player.qc	/^	switch (cmd)$/;"	f
switch	sv_player.qc	/^	switch (self.impulse)$/;"	f
text	sui_sys.qc	/^		text = sprintf("%s%s%s", pre_cursor, chr2str(char), post_cursor);$/;"	v
text	sui_sys.qc	/^		text = strcat(pre_cursor, post_cursor);$/;"	v
text	sui_sys.qc	/^		text = substring(text, 0, strlen(text));$/;"	v
tokenize	cl_main.qc	/^	tokenize(cmd);$/;"	f
tokenize	m_main.qc	/^	tokenize(cmd);$/;"	f
tokenize	sui_sys.qc	/^	tokenize(findkeysforcommand(command));$/;"	f
tokenize	sv_player.qc	/^	tokenize(command_string);$/;"	f
uri_get	cl_defs.qc	/^		uri_get() gets content from an URL and calls a callback "uri_get_callback" with it set as stri/;"	f
uri_get	fteextensions.qc	/^		uri_get() gets content from an URL and calls a callback "uri_get_callback" with it set as stri/;"	f
uri_get	m_defs.qc	/^		uri_get() gets content from an URL and calls a callback "uri_get_callback" with it set as stri/;"	f
uri_get	sv_defs.qc	/^		uri_get() gets content from an URL and calls a callback "uri_get_callback" with it set as stri/;"	f
value	m_menu.qc	/^	value = sui_slidercontrol(id, [0, 0], size, minmaxsteps, value, sui_slider_noop);$/;"	v
vector	cl_customdefs.qc	/^vector() readvector =$/;"	f
vector	cl_defs.qc	/^vector (vector v) project = #311; \/*$/;"	f
vector	cl_defs.qc	/^vector (vector v) unproject = #310; \/*$/;"	f
vector	cl_defs.qc	/^vector() getbindmaps = #631;$/;"	f
vector	cl_defs.qc	/^vector() getmousepos = #344; \/*$/;"	f
vector	cl_defs.qc	/^vector() randomvec = #91; \/* Part of DP_QC_RANDOMVEC$/;"	f
vector	cl_defs.qc	/^vector(entity e, float s) getsurfacenormal = #436; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	cl_defs.qc	/^vector(entity e, float s, float n) getsurfacepoint = #435; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	cl_defs.qc	/^vector(entity e, float s, float n) getsurfacetriangle = #629;$/;"	f
vector	cl_defs.qc	/^vector(entity e, float s, float n, float a) getsurfacepointattribute = #486; \/* Part of DP_QC_G/;"	f
vector	cl_defs.qc	/^vector(entity e, float s, vector p) getsurfaceclippedpoint = #439; \/* Part of DP_QC_GETSURFACE*/;"	f
vector	cl_defs.qc	/^vector(entity ent, float tagindex) gettaginfo = #452; \/* Part of DP_MD3_TAGSINFO$/;"	f
vector	cl_defs.qc	/^vector(entity ent, float tagnum) rotatevectorsbytag = #244;$/;"	f
vector	cl_defs.qc	/^vector(float skel, float bonenum) skel_get_boneabs = #270; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	cl_defs.qc	/^vector(float skel, float bonenum) skel_get_bonerel = #269; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	cl_defs.qc	/^vector(float style) getlightstylergb = #0:getlightstylergb; \/*$/;"	f
vector	cl_defs.qc	/^vector(float vidmode, optional float forfullscreen) getresolution = #608; \/*$/;"	f
vector	cl_defs.qc	/^vector(string name) gecko_get_texture_extent = #493; \/* Part of DP_GECKO_SUPPORT$/;"	f
vector	cl_defs.qc	/^vector(string picname) drawgetimagesize = #318; \/*$/;"	f
vector	cl_defs.qc	/^vector(string s) stov = #117; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
vector	cl_defs.qc	/^vector(vector fwd, optional vector up) vectoangles = #51; \/*$/;"	f
vector	cl_defs.qc	/^vector(vector org) getlight = #92;$/;"	f
vector	cl_defs.qc	/^vector(vector v) normalize = #9; \/*$/;"	f
vector	cl_defs.qc	/^vector(vector v1, vector v2) crossproduct = #0:crossproduct; \/* Part of FTE_QC_CROSSPRODUCT$/;"	f
vector	fteextensions.qc	/^vector (vector v) project = #311; \/*$/;"	f
vector	fteextensions.qc	/^vector (vector v) unproject = #310; \/*$/;"	f
vector	fteextensions.qc	/^vector() getbindmaps = #631;$/;"	f
vector	fteextensions.qc	/^vector() getmousepos = #344; \/*$/;"	f
vector	fteextensions.qc	/^vector() getmousepos = #66; \/*$/;"	f
vector	fteextensions.qc	/^vector() randomvec = #41; \/* Part of DP_QC_RANDOMVEC$/;"	f
vector	fteextensions.qc	/^vector() randomvec = #91; \/* Part of DP_QC_RANDOMVEC$/;"	f
vector	fteextensions.qc	/^vector(entity e, float s) getsurfacenormal = #436; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	fteextensions.qc	/^vector(entity e, float s, float n) getsurfacepoint = #435; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	fteextensions.qc	/^vector(entity e, float s, float n) getsurfacetriangle = #629;$/;"	f
vector	fteextensions.qc	/^vector(entity e, float s, float n, float a) getsurfacepointattribute = #486; \/* Part of DP_QC_G/;"	f
vector	fteextensions.qc	/^vector(entity e, float s, vector p) getsurfaceclippedpoint = #439; \/* Part of DP_QC_GETSURFACE*/;"	f
vector	fteextensions.qc	/^vector(entity ent, float tagindex) gettaginfo = #452; \/* Part of DP_QC_GETTAGINFO$/;"	f
vector	fteextensions.qc	/^vector(entity ent, float tagnum) rotatevectorsbytag = #244;$/;"	f
vector	fteextensions.qc	/^vector(entity player, float missilespeed) aim = #44; \/*$/;"	f
vector	fteextensions.qc	/^vector(float skel, float bonenum) skel_get_boneabs = #270; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	fteextensions.qc	/^vector(float skel, float bonenum) skel_get_bonerel = #269; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	fteextensions.qc	/^vector(float style) getlightstylergb = #0:getlightstylergb; \/*$/;"	f
vector	fteextensions.qc	/^vector(float vidmode, optional float forfullscreen) getresolution = #608; \/*$/;"	f
vector	fteextensions.qc	/^vector(string name) gecko_get_texture_extent = #493; \/* Part of DP_GECKO_SUPPORT$/;"	f
vector	fteextensions.qc	/^vector(string picname) drawgetimagesize = #318; \/*$/;"	f
vector	fteextensions.qc	/^vector(string picname) drawgetimagesize = #460;$/;"	f
vector	fteextensions.qc	/^vector(string s) stov = #117; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
vector	fteextensions.qc	/^vector(string) stov = #55; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
vector	fteextensions.qc	/^vector(vector fwd, optional vector up) vectoangles = #51; \/*$/;"	f
vector	fteextensions.qc	/^vector(vector v) normalize = #9; \/*$/;"	f
vector	fteextensions.qc	/^vector(vector v1, vector v2) crossproduct = #0:crossproduct; \/* Part of FTE_QC_CROSSPRODUCT$/;"	f
vector	fteextensions.qc	/^vector(vector) normalize = #8;$/;"	f
vector	fteextensions.qc	/^vector(vector) vectoangles = #11;$/;"	f
vector	m_defs.qc	/^vector() getbindmaps = #631;$/;"	f
vector	m_defs.qc	/^vector() getmousepos = #66;$/;"	f
vector	m_defs.qc	/^vector() randomvector = #41;$/;"	f
vector	m_defs.qc	/^vector(float vidmode, optional float forfullscreen) getresolution = #608; \/*$/;"	f
vector	m_defs.qc	/^vector(string name) gecko_get_texture_extent = #493; \/* Part of DP_GECKO_SUPPORT$/;"	f
vector	m_defs.qc	/^vector(string picname) drawgetimagesize = #460;$/;"	f
vector	m_defs.qc	/^vector(string) stov = #55; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
vector	m_defs.qc	/^vector(vector v1, vector v2) crossproduct = #0:crossproduct; \/* Part of FTE_QC_CROSSPRODUCT$/;"	f
vector	m_defs.qc	/^vector(vector) normalize = #8;$/;"	f
vector	m_defs.qc	/^vector(vector) vectoangles = #11;$/;"	f
vector	m_main.qc	/^vector() randomofs = { return [random() - 0.5, random() - 0.5] * 2; };$/;"	f
vector	sui_sys.qc	/^vector() sui_current_frame_pos = $/;"	f
vector	sui_sys.qc	/^vector() sui_current_frame_size =$/;"	f
vector	sui_sys.qc	/^vector(float scan) sui_input_dir =$/;"	f
vector	sv_defs.qc	/^vector() randomvec = #91; \/* Part of DP_QC_RANDOMVEC$/;"	f
vector	sv_defs.qc	/^vector(entity e, float s) getsurfacenormal = #436; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	sv_defs.qc	/^vector(entity e, float s, float n) getsurfacepoint = #435; \/* Part of DP_QC_GETSURFACE*\/$/;"	f
vector	sv_defs.qc	/^vector(entity e, float s, float n) getsurfacetriangle = #629;$/;"	f
vector	sv_defs.qc	/^vector(entity e, float s, float n, float a) getsurfacepointattribute = #486; \/* Part of DP_QC_G/;"	f
vector	sv_defs.qc	/^vector(entity e, float s, vector p) getsurfaceclippedpoint = #439; \/* Part of DP_QC_GETSURFACE*/;"	f
vector	sv_defs.qc	/^vector(entity ent, float tagindex) gettaginfo = #452; \/* Part of DP_MD3_TAGSINFO$/;"	f
vector	sv_defs.qc	/^vector(entity player, float missilespeed) aim = #44; \/*$/;"	f
vector	sv_defs.qc	/^vector(float skel, float bonenum) skel_get_boneabs = #270; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	sv_defs.qc	/^vector(float skel, float bonenum) skel_get_bonerel = #269; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
vector	sv_defs.qc	/^vector(float style) getlightstylergb = #0:getlightstylergb; \/*$/;"	f
vector	sv_defs.qc	/^vector(string s) stov = #117; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
vector	sv_defs.qc	/^vector(vector fwd, optional vector up) vectoangles = #51; \/*$/;"	f
vector	sv_defs.qc	/^vector(vector org) getlight = #92;$/;"	f
vector	sv_defs.qc	/^vector(vector v) normalize = #9; \/*$/;"	f
vector	sv_defs.qc	/^vector(vector v1, vector v2) crossproduct = #0:crossproduct; \/* Part of FTE_QC_CROSSPRODUCT$/;"	f
vector	sv_player.qc	/^vector() get_spawn_point =$/;"	f
viewmodel	cl_player.qc	/^	viewmodel = spawn(CViewModel);$/;"	v
void	cl_defs.qc	/^void (vector pos, string samp, float vol, float atten) ambientsound = #74;$/;"	f
void	cl_defs.qc	/^void() CSQC_Ent_Remove;$/;"	f
void	cl_defs.qc	/^void() CSQC_Parse_Event;	\/* Called when the client receives an SVC_CGAMEPACKET. The csqc should/;"	f
void	cl_defs.qc	/^void() CSQC_Shutdown;	\/* Specifies that the csqc is going down. Save your persistant settings h/;"	f
void	cl_defs.qc	/^void() CSQC_WorldLoaded;	\/* Called after model+sound precaches have been executed. Gives a chan/;"	f
void	cl_defs.qc	/^void() R_EndPolygon = #308; \/*$/;"	f
void	cl_defs.qc	/^void() calltimeofday = #231; \/* Part of FTE_CALLTIMEOFDAY$/;"	f
void	cl_defs.qc	/^void() changeyaw = #49; \/*$/;"	f
void	cl_defs.qc	/^void() clearscene = #300; \/*$/;"	f
void	cl_defs.qc	/^void() coredump = #28; \/*$/;"	f
void	cl_defs.qc	/^void() initents;	\/* Part of FTE_MULTIPROGS. Called after fields have been finalized. This is th/;"	f
void	cl_defs.qc	/^void() renderscene = #304; \/*$/;"	f
void	cl_defs.qc	/^void() resethostcachemasks = #615; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	cl_defs.qc	/^void() resorthostcache = #618; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	cl_defs.qc	/^void() traceoff = #30; \/*$/;"	f
void	cl_defs.qc	/^void() traceon = #29; \/*$/;"	f
void	cl_defs.qc	/^void(...\/*, string funcname*\/) callfunction = #605; \/*$/;"	f
void	cl_defs.qc	/^void(__variant *dst, __variant *src, int size) memcpy = #386; \/* Part of FTE_MEMALLOC$/;"	f
void	cl_defs.qc	/^void(__variant *dst, float ofs, __variant val) memsetval = #389; \/*$/;"	f
void	cl_defs.qc	/^void(__variant *dst, int val, int size) memfill8 = #387; \/* Part of FTE_MEMALLOC$/;"	f
void	cl_defs.qc	/^void(__variant *ptr) memfree = #385; \/* Part of FTE_MEMALLOC$/;"	f
void	cl_defs.qc	/^void(entity e) eprint = #31; \/*$/;"	f
void	cl_defs.qc	/^void(entity e) makestatic = #69; \/*$/;"	f
void	cl_defs.qc	/^void(entity e) remove = #15; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, entity tagentity, string tagname) setattachment = #443; \/* Part of DP_GFX_QUAKE3/;"	f
void	cl_defs.qc	/^void(entity e, float chan, string samp, float vol, float atten, optional float speedpct, optiona/;"	f
void	cl_defs.qc	/^void(entity e, float mdlindex) setmodelindex = #333; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, float physics_enabled) physics_enable = #540; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, float skinobj) applycustomskin = #378; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, string m) setmodel = #3; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, string skinfilename, optional string skindata) setcustomskin = #376; \/* Part of /;"	f
void	cl_defs.qc	/^void(entity e, vector force, vector relative_ofs) physics_addforce = #541; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, vector min, vector max) setsize = #4; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, vector o) setorigin = #2; \/*$/;"	f
void	cl_defs.qc	/^void(entity e, vector torque) physics_addtorque = #542; \/*$/;"	f
void	cl_defs.qc	/^void(entity ent) addentity = #302; \/*$/;"	f
void	cl_defs.qc	/^void(entity ent) changepitch = #63; \/* Part of DP_QC_CHANGEPITCH*\/$/;"	f
void	cl_defs.qc	/^void(entity ent) removeentity = #0:removeentity; \/*$/;"	f
void	cl_defs.qc	/^void(entity ent) runstandardplayerphysics = #347; \/*$/;"	f
void	cl_defs.qc	/^void(entity ent, entity ignore) tracetoss = #64;$/;"	f
void	cl_defs.qc	/^void(entity ent, float bonenum, vector org, optional vector angorfwd, optional vector right, opt/;"	f
void	cl_defs.qc	/^void(entity own, vector start, vector end) te_beam = #431; \/* Part of DP_TE_STANDARDEFFECTBUILT/;"	f
void	cl_defs.qc	/^void(entity own, vector start, vector end) te_lightning1 = #428; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	cl_defs.qc	/^void(entity own, vector start, vector end) te_lightning2 = #429; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	cl_defs.qc	/^void(entity own, vector start, vector end) te_lightning3 = #430; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	cl_defs.qc	/^void(entity portal, float state) openportal = #207; \/*$/;"	f
void	cl_defs.qc	/^void(filestream fh, entity e) writetofile = #606; \/*$/;"	f
void	cl_defs.qc	/^void(filestream fhandle) fclose = #111; \/* Part of FRIK_FILE*\/$/;"	f
void	cl_defs.qc	/^void(filestream fhandle, string s, optional string s2, optional string s3, optional string s4, o/;"	f
void	cl_defs.qc	/^void(float action, optional vector pos, optional float radius, optional float quant, ...) terrai/;"	f
void	cl_defs.qc	/^void(float apilevel, string enginename, float engineversion) CSQC_Init;	\/* Called at startup. e/;"	f
void	cl_defs.qc	/^void(float effectindex, entity own, vector org_from, vector org_to, vector dir_from, vector dir_/;"	f
void	cl_defs.qc	/^void(float effectnum, entity ent, vector start, vector end) trailparticles = #336; \/* Part of F/;"	f
void	cl_defs.qc	/^void(float effectnum, vector origin, optional vector dir, optional float count) pointparticles =/;"	f
void	cl_defs.qc	/^void(float entnum) CSQC_Ent_Spawn;	\/* Clumsily defined function for compat with DP. Should call/;"	f
void	cl_defs.qc	/^void(float fld, float descending) sethostcachesort = #619; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	cl_defs.qc	/^void(float isnew) CSQC_Ent_Update;	\/* Parses the data sent by ssqc's various SendEntity functio/;"	f
void	cl_defs.qc	/^void(float lightstyle, string stylestring, optional vector rgb) lightstyle = #35; \/*$/;"	f
void	cl_defs.qc	/^void(float lno, float fld, __variant value) dynamiclight_set = #373; \/*$/;"	f
void	cl_defs.qc	/^void(float mask) addentities = #301; \/*$/;"	f
void	cl_defs.qc	/^void(float mask, float fld, float num, float op) sethostcachemasknumber = #617; \/* Part of FTE_/;"	f
void	cl_defs.qc	/^void(float mask, float fld, string str, float op) sethostcachemaskstring = #616; \/* Part of FTE/;"	f
void	cl_defs.qc	/^void(float modelidx, int brushid) brush_delete = #0:brush_delete; \/* Part of FTE_RAW_MAP$/;"	f
void	cl_defs.qc	/^void(float modidx, float framenum, __inout float basetime, float targettime, void(float timestam/;"	f
void	cl_defs.qc	/^void(float prevprogs) init;	\/* Part of FTE_MULTIPROGS. Called as soon as a progs is loaded, cal/;"	f
void	cl_defs.qc	/^void(float prnum, __variant newval, string varname) externset = #204; \/* Part of FTE_MULTIPROGS$/;"	f
void	cl_defs.qc	/^void(float reqid, float responsecode, string resourcebody) URI_Get_Callback;	\/* Called as an ev/;"	f
void	cl_defs.qc	/^void(float reverbslot, reverbinfo_t *reverbinfo, int sizeofreverinfo_t) setup_reverb = #0:setup_/;"	f
void	cl_defs.qc	/^void(float sens) setsensitivityscaler = #346; \/*$/;"	f
void	cl_defs.qc	/^void(float skel) skel_delete = #275; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
void	cl_defs.qc	/^void(float skel, float bonenum, vector org, optional vector fwd, optional vector right, optional/;"	f
void	cl_defs.qc	/^void(float skel, float startbone, float endbone, vector org, optional vector fwd, optional vecto/;"	f
void	cl_defs.qc	/^void(float skeldst, float skelsrc, float startbone, float entbone) skel_copybones = #274; \/* Pa/;"	f
void	cl_defs.qc	/^void(float skinobj) releasecustomskin = #379; \/*$/;"	f
void	cl_defs.qc	/^void(float step) movetogoal = #67; \/*$/;"	f
void	cl_defs.qc	/^void(float trg) setmousetarget = #603;$/;"	f
void	cl_defs.qc	/^void(float usecursor, optional string cursorimage, optional vector hotspot, optional float scale/;"	f
void	cl_defs.qc	/^void(float vwidth, float vheight, float notmenu) CSQC_UpdateView;	\/* Called every single video /;"	f
void	cl_defs.qc	/^void(float vwidth, float vheight, float notmenu) CSQC_UpdateViewLoading;	\/* Alternative to CSQC/;"	f
void	cl_defs.qc	/^void(float width, vector pos1, vector pos2, vector rgb, float alpha, optional float drawflag) dr/;"	f
void	cl_defs.qc	/^void(float x, float y, float width, float height) drawsetcliparea = #324; \/*$/;"	f
void	cl_defs.qc	/^void(hashtable table) hash_destroytab = #288; \/* Part of FTE_QC_HASHTABLES$/;"	f
void	cl_defs.qc	/^void(hashtable table, string name, __variant value, optional float typeandflags) hash_add = #289/;"	f
void	cl_defs.qc	/^void(optional __variant ret) abort = #211; \/* Part of FTE_MULTITHREADED$/;"	f
void	cl_defs.qc	/^void(optional entity ent, optional vector neworigin) touchtriggers = #279; \/*$/;"	f
void	cl_defs.qc	/^void(optional float dopurge) refreshhostcache = #620; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	cl_defs.qc	/^void(searchhandle handle) search_end = #445; \/* Part of DP_QC_FS_SEARCH*\/$/;"	f
void	cl_defs.qc	/^void(strbuf bufhandle) buf_del = #461; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	cl_defs.qc	/^void(strbuf bufhandle, float sortprefixlen, float backward) buf_sort = #464; \/* Part of DP_QC_S/;"	f
void	cl_defs.qc	/^void(strbuf bufhandle, float string_index) bufstr_free = #469; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	cl_defs.qc	/^void(strbuf bufhandle, float string_index, string str) bufstr_set = #467; \/* Part of DP_QC_STRI/;"	f
void	cl_defs.qc	/^void(strbuf bufhandle_from, strbuf bufhandle_to) buf_copy = #463; \/* Part of DP_QC_STRINGBUFFER/;"	f
void	cl_defs.qc	/^void(strbuf strbuf, string pattern, string antipattern) buf_cvarlist = #517;$/;"	f
void	cl_defs.qc	/^void(string cmdname) registercommand = #352; \/*$/;"	f
void	cl_defs.qc	/^void(string cmdtext) GameCommand;$/;"	f
void	cl_defs.qc	/^void(string conname, string messagefmt, ...) con_printf = #392; \/* Part of FTE_CSQC_ALTCONSOLES$/;"	f
void	cl_defs.qc	/^void(string conname, vector pos, vector size, float fontsize) con_draw = #393; \/* Part of FTE_C/;"	f
void	cl_defs.qc	/^void(string cvarname, string valuetoset) cvar_set = #72; \/*$/;"	f
void	cl_defs.qc	/^void(string e) error = #10; \/*$/;"	f
void	cl_defs.qc	/^void(string e) objerror = #11; \/*$/;"	f
void	cl_defs.qc	/^void(string evname, string evargs, ...) sendevent = #359; \/*$/;"	f
void	cl_defs.qc	/^void(string file) cin_restart = #0:cin_restart;$/;"	f
void	cl_defs.qc	/^void(string id) cin_close = #0:cin_close;$/;"	f
void	cl_defs.qc	/^void(string id, float newstate) cin_setstate = #0:cin_setstate;$/;"	f
void	cl_defs.qc	/^void(string imagename, int width, int height, int *pixeldata) r_uploadimage = #0:r_uploadimage; /;"	f
void	cl_defs.qc	/^void(string key) addwantedhostcachekey = #623; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	cl_defs.qc	/^void(string msg) CSQC_Parse_StuffCmd;	\/* Gives the CSQC a chance to intercept stuffcmds. Use th/;"	f
void	cl_defs.qc	/^void(string name) freepic = #319; \/*$/;"	f
void	cl_defs.qc	/^void(string name) gecko_destroy = #488; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	cl_defs.qc	/^void(string name, float w, float h) gecko_resize = #492; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	cl_defs.qc	/^void(string name, float x, float y) gecko_mousemove = #491; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	cl_defs.qc	/^void(string name, string URI) gecko_navigate = #489; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	cl_defs.qc	/^void(string newcaption) setwindowcaption = #0:setwindowcaption; \/* Part of FTE_CSQC_WINDOWCAPTI/;"	f
void	cl_defs.qc	/^void(string printmsg, float printlvl) CSQC_Parse_Print;	\/* Gives the CSQC a chance to intercept/;"	f
void	cl_defs.qc	/^void(string rendererdescription) CSQC_RendererRestarted;	\/* Called by the engine after the vide/;"	f
void	cl_defs.qc	/^void(string s) loadfromdata = #529; \/*$/;"	f
void	cl_defs.qc	/^void(string s) loadfromfile = #530; \/*$/;"	f
void	cl_defs.qc	/^void(string s) strunzone = #119; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
void	cl_defs.qc	/^void(string s, ...) cprint = #338; \/*$/;"	f
void	cl_defs.qc	/^void(string s, ...) dprint = #25; \/*$/;"	f
void	cl_defs.qc	/^void(string s, ...) print = #339; \/* Part of DP_SV_PRINT$/;"	f
void	cl_defs.qc	/^void(string shadername, vector origin, vector up, vector side, vector rgb, float alpha) adddecal/;"	f
void	cl_defs.qc	/^void(string soundname, optional float channel, optional float volume) localsound = #177; \/*$/;"	f
void	cl_defs.qc	/^void(string texturename, int flags, struct trisoup_simple_vert_s *verts, int *indexes, int numin/;"	f
void	cl_defs.qc	/^void(string texturename, optional float flags, optional float is2d) R_BeginPolygon = #306; \/*$/;"	f
void	cl_defs.qc	/^void(string, ...) localcmd = #46; \/*$/;"	f
void	cl_defs.qc	/^void(vector angle) rotatevectorsbyangle = #235; \/*$/;"	f
void	cl_defs.qc	/^void(vector dir) vectorvectors = #432; \/* Part of DP_QC_VECTORVECTORS*\/$/;"	f
void	cl_defs.qc	/^void(vector fwd, vector right, vector up) rotatevectorsbyvectors = #236;$/;"	f
void	cl_defs.qc	/^void(vector mincorner, vector maxcorner, float explosionspeed, float howmany) te_bloodshower = #/;"	f
void	cl_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlerain/;"	f
void	cl_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlesnow/;"	f
void	cl_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color, float gravityfl/;"	f
void	cl_defs.qc	/^void(vector org) te_explosion = #421; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDE/;"	f
void	cl_defs.qc	/^void(vector org) te_explosionquad = #415; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_gunshotquad = #412; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_knightspike = #424; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDAR/;"	f
void	cl_defs.qc	/^void(vector org) te_lavasplash = #425; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	cl_defs.qc	/^void(vector org) te_plasmaburn = #433; \/* Part of _DP_TE_PLASMABURN*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_smallflash = #416; \/* Part of DP_TE_SMALLFLASH*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_spike = #419; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEFFEC/;"	f
void	cl_defs.qc	/^void(vector org) te_spikequad = #413; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_superspike = #420; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	cl_defs.qc	/^void(vector org) te_superspikequad = #414; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	cl_defs.qc	/^void(vector org) te_tarexplosion = #422; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDA/;"	f
void	cl_defs.qc	/^void(vector org) te_teleport = #426; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	cl_defs.qc	/^void(vector org) te_wizspike = #423; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	cl_defs.qc	/^void(vector org, float color, float colorlength) te_explosion2 = #427; \/* Part of DP_TE_STANDAR/;"	f
void	cl_defs.qc	/^void(vector org, float radius, float colour, float effect, float count) particle4 = #217; \/* Pa/;"	f
void	cl_defs.qc	/^void(vector org, float radius, float lifetime, vector color) te_customflash = #417; \/* Part of /;"	f
void	cl_defs.qc	/^void(vector org, optional float count) te_bloodqw = #239; \/* Part of FTE_TE_STANDARDEFFECTBUILT/;"	f
void	cl_defs.qc	/^void(vector org, optional float count) te_gunshot = #418; \/* Part of DP_TE_STANDARDEFFECTBUILTI/;"	f
void	cl_defs.qc	/^void(vector org, string modelname, float startframe, float endframe, float framerate) effect = #/;"	f
void	cl_defs.qc	/^void(vector org, vector box, float colour, float effect, float count) particle3 = #216; \/* Part/;"	f
void	cl_defs.qc	/^void(vector org, vector color) te_explosionrgb = #407; \/* Part of DP_TE_EXPLOSIONRGB*\/$/;"	f
void	cl_defs.qc	/^void(vector org, vector dir, float count) te_blood = #405; \/* Part of DP_TE_BLOOD*\/$/;"	f
void	cl_defs.qc	/^void(vector org, vector dmin, vector dmax, float colour, float effect, float count) particle2 = /;"	f
void	cl_defs.qc	/^void(vector org, vector texcoords, vector rgb, float alpha) R_PolygonVertex = #307; \/*$/;"	f
void	cl_defs.qc	/^void(vector org, vector vel, float howmany) te_flamejet = #457; \/* Part of _DP_TE_FLAMEJET*\/$/;"	f
void	cl_defs.qc	/^void(vector org, vector vel, float howmany) te_spark = #411; \/* Part of DP_TE_SPARK*\/$/;"	f
void	cl_defs.qc	/^void(vector origin, string sample, float volume, float attenuation) pointsound = #483; \/* Part /;"	f
void	cl_defs.qc	/^void(vector origin, vector forward, vector right, vector up, optional float reverbtype) SetListe/;"	f
void	cl_defs.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector rgb, float alpha, float angle) d/;"	f
void	cl_defs.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector txmin, vector txsize, vector rgb/;"	f
void	cl_defs.qc	/^void(vector pos) te_lightningblood = #219; \/* Part of FTE_TE_STANDARDEFFECTBUILTINS*\/$/;"	f
void	cl_defs.qc	/^void(vector pos, vector dir, float colour, float count) particle = #48; \/*$/;"	f
void	cl_defs.qc	/^void(vector pos, vector size, float alignflags, string text) drawtextfield = #0:drawtextfield; \//;"	f
void	cl_defs.qc	/^void(vector pos, vector sz, string pic, vector srcpos, vector srcsz, vector rgb, float alpha, op/;"	f
void	cl_defs.qc	/^void(vector start, vector mins, vector maxs, vector end, float nomonsters, entity ent) tracebox /;"	f
void	cl_defs.qc	/^void(vector v1, vector v2, float flags, entity ent) traceline = #16; \/*$/;"	f
void	cl_defs.qc	/^void(vector vang) makevectors = #1; \/*$/;"	f
void	cl_defs.qc	/^void(void) drawresetcliparea = #325; \/*$/;"	f
void	cl_hud.qc	/^void() draw_gui = $/;"	f
void	cl_main.qc	/^void() CSQC_Ent_Remove =$/;"	f
void	cl_main.qc	/^void() CSQC_Parse_Event =$/;"	f
void	cl_main.qc	/^void() CSQC_Shutdown =$/;"	f
void	cl_main.qc	/^void(float width, float height, float menushown) CSQC_UpdateView =$/;"	f
void	cl_main.qc	/^void(string printmsg, float printlvl) CSQC_Parse_Print =$/;"	f
void	cl_viewmodel.qc	/^    void() CViewModel;$/;"	f
void	fteextensions.qc	/^void (vector pos, string samp, float vol, float atten) ambientsound = #74; \/*$/;"	f
void	fteextensions.qc	/^void() CSQC_Ent_Remove;$/;"	f
void	fteextensions.qc	/^void() CSQC_Parse_Event;	\/* Called when the client receives an SVC_CGAMEPACKET. The csqc should/;"	f
void	fteextensions.qc	/^void() CSQC_ServerInfoChanged;$/;"	f
void	fteextensions.qc	/^void() CSQC_Shutdown;	\/* Specifies that the csqc is going down. Save your persistant settings h/;"	f
void	fteextensions.qc	/^void() CSQC_WorldLoaded;	\/* Called after the server's model+sound precaches have been executed./;"	f
void	fteextensions.qc	/^void() ClientConnect;	\/* Called after the connecting client has finished loading and is ready t/;"	f
void	fteextensions.qc	/^void() ClientDisconnect;	\/* Called once a client disconnects or times out. Not guarenteed to be/;"	f
void	fteextensions.qc	/^void() ClientKill;	\/* Called in response to 'cmd kill' (or just 'kill'). *\/$/;"	f
void	fteextensions.qc	/^void() EndFrame;	\/* Called after non-player entities have been run at the end of the physics fr/;"	f
void	fteextensions.qc	/^void() PlayerPostThink;	\/* Called after the player's input commands are processed. *\/$/;"	f
void	fteextensions.qc	/^void() PlayerPreThink;	\/* With Prediction(QW compat\/FTE default): Called before the player's i/;"	f
void	fteextensions.qc	/^void() PutClientInServer;	\/* Enginewise, this is only ever called immediately after ClientConne/;"	f
void	fteextensions.qc	/^void() R_EndPolygon = #308; \/*$/;"	f
void	fteextensions.qc	/^void() RestoreGame;	\/* Called for each reconnecting player as part of loading a saved game. Par/;"	f
void	fteextensions.qc	/^void() SV_AddDebugPolygons;	\/* Called each video frame. This is the only place where ssqc is al/;"	f
void	fteextensions.qc	/^void() SV_RunClientCommand;	\/* Called each time a player movement packet was received from a cl/;"	f
void	fteextensions.qc	/^void() SetChangeParms;	\/* Called for each client on map changes. Should copy various entity fie/;"	f
void	fteextensions.qc	/^void() SetNewParms;	\/* Called without context when a new client initially connects (before Clie/;"	f
void	fteextensions.qc	/^void() SetTransferParms;	\/* Called as an alternative to SetChangeParms when a player is transfe/;"	f
void	fteextensions.qc	/^void() SpectatorConnect;	\/* Called when a spectator joins the game. *\/$/;"	f
void	fteextensions.qc	/^void() SpectatorDisconnect;	\/* Called when a spectator disconnects from the game. *\/$/;"	f
void	fteextensions.qc	/^void() SpectatorThink;	\/* Called each frame for each spectator. *\/$/;"	f
void	fteextensions.qc	/^void() StartFrame;	\/* Called at the start of each new physics frame. Player entities may think /;"	f
void	fteextensions.qc	/^void() StartFrame;	\/* ssqc global *\/$/;"	f
void	fteextensions.qc	/^void() breakpoint = #6; \/*$/;"	f
void	fteextensions.qc	/^void() changeyaw = #49; \/*$/;"	f
void	fteextensions.qc	/^void() clearscene = #300; \/*$/;"	f
void	fteextensions.qc	/^void() coredump = #28; \/*$/;"	f
void	fteextensions.qc	/^void() coredump = #30; \/*$/;"	f
void	fteextensions.qc	/^void() initents;	\/* Part of FTE_MULTIPROGS. Called after fields have been finalized. This is th/;"	f
void	fteextensions.qc	/^void() m_init;$/;"	f
void	fteextensions.qc	/^void() m_shutdown;$/;"	f
void	fteextensions.qc	/^void() main;	\/* This function is never called, and is effectively dead code. *\/$/;"	f
void	fteextensions.qc	/^void() renderscene = #304; \/*$/;"	f
void	fteextensions.qc	/^void() resethostcachemasks = #615; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
void	fteextensions.qc	/^void() resorthostcache = #618; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
void	fteextensions.qc	/^void() stackdump = #73; \/*$/;"	f
void	fteextensions.qc	/^void() traceoff = #30; \/*$/;"	f
void	fteextensions.qc	/^void() traceoff = #32; \/*$/;"	f
void	fteextensions.qc	/^void() traceon = #29; \/*$/;"	f
void	fteextensions.qc	/^void() traceon = #31; \/*$/;"	f
void	fteextensions.qc	/^void(...\/*, string funcname*\/) callfunction = #605; \/*$/;"	f
void	fteextensions.qc	/^void(__variant *dst, __variant *src, int size, optional int dstoffset, int srcoffset) memcpy = #/;"	f
void	fteextensions.qc	/^void(__variant *dst, float ofs, __variant val) memsetval = #389; \/*$/;"	f
void	fteextensions.qc	/^void(__variant *dst, int val, int size, optional int offset) memfill8 = #387; \/* Part of FTE_ME/;"	f
void	fteextensions.qc	/^void(__variant *ptr) memfree = #385; \/* Part of FTE_MEMALLOC$/;"	f
void	fteextensions.qc	/^void(entity client, float flags, string s, optional string s2, optional string s3, optional stri/;"	f
void	fteextensions.qc	/^void(entity client, float msglvl, string s, optional string s2, optional string s3, optional str/;"	f
void	fteextensions.qc	/^void(entity client, string s, optional string s0, optional string s1, optional string s2, option/;"	f
void	fteextensions.qc	/^void(entity client, string s, optional string s2, optional string s3, optional string s4, option/;"	f
void	fteextensions.qc	/^void(entity client, string sample) ex_localsound = #0:ex_localsound; \/*$/;"	f
void	fteextensions.qc	/^void(entity e) eprint = #31; \/*$/;"	f
void	fteextensions.qc	/^void(entity e) makestatic = #69; \/*$/;"	f
void	fteextensions.qc	/^void(entity e) remove = #15; \/*$/;"	f
void	fteextensions.qc	/^void(entity e) removeinstant = #0:removeinstant; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, entity tagentity, string tagname) setattachment = #443; \/* Part of DP_GFX_QUAKE3/;"	f
void	fteextensions.qc	/^void(entity e, float chan, string samp, float vol, float atten, optional float speedpct, optiona/;"	f
void	fteextensions.qc	/^void(entity e, float mdlindex) setmodelindex = #333; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, float physics_enabled) physics_enable = #540; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, float skinobj) applycustomskin = #378; \/* Part of FTE_QC_CUSTOMSKINS$/;"	f
void	fteextensions.qc	/^void(entity e, string m) setmodel = #3; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, string s) clientcommand = #440; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
void	fteextensions.qc	/^void(entity e, string skinfilename, optional string skindata) setcustomskin = #376; \/* Part of /;"	f
void	fteextensions.qc	/^void(entity e, vector force, vector relative_ofs) physics_addforce = #541; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, vector min, vector max) setsize = #4; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, vector o) setorigin = #2; \/*$/;"	f
void	fteextensions.qc	/^void(entity e, vector torque) physics_addtorque = #542; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent) addentity = #302; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent) changepitch = #63; \/* Part of DP_QC_CHANGEPITCH*\/$/;"	f
void	fteextensions.qc	/^void(entity ent) removeentity = #0:removeentity; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent) runstandardplayerphysics = #347; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent) te_muzzleflash = #0:te_muzzleflash;$/;"	f
void	fteextensions.qc	/^void(entity ent, entity ignore) tracetoss = #64; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent, float bonenum, vector org, optional vector angorfwd, optional vector right, opt/;"	f
void	fteextensions.qc	/^void(entity ent, string mname) setmodel = #90; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent, string text, optional string s0, optional string s1, optional string s2, option/;"	f
void	fteextensions.qc	/^void(entity ent, string text, optional string text2, optional string text3, optional string text/;"	f
void	fteextensions.qc	/^void(entity ent, vector dest, int denylinkflags, void(entity ent, vector dest, int numnodes, nod/;"	f
void	fteextensions.qc	/^void(entity ent, vector lightdir, vector lightavg, vector lightrange, int reserved1=0,void*reser/;"	f
void	fteextensions.qc	/^void(entity ent, vector neworg) setorigin = #92; \/*$/;"	f
void	fteextensions.qc	/^void(entity ent, vector sendflags, entity unicastplayer) setsendneeded = #0:setsendneeded; \/*$/;"	f
void	fteextensions.qc	/^void(entity killer, entity killee) logfrag = #79; \/* Part of QW_ENGINE*\/$/;"	f
void	fteextensions.qc	/^void(entity own, vector start, vector end) te_beam = #431; \/* Part of DP_TE_STANDARDEFFECTBUILT/;"	f
void	fteextensions.qc	/^void(entity own, vector start, vector end) te_lightning1 = #428; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	fteextensions.qc	/^void(entity own, vector start, vector end) te_lightning2 = #429; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	fteextensions.qc	/^void(entity own, vector start, vector end) te_lightning3 = #430; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	fteextensions.qc	/^void(entity player) dropclient = #453; \/* Part of DP_SV_DROPCLIENT*\/$/;"	f
void	fteextensions.qc	/^void(entity player) ex_clearprompt = #0:ex_clearprompt; \/* Part of EX_PROMPT$/;"	f
void	fteextensions.qc	/^void(entity player) setspawnparms = #78; \/*$/;"	f
void	fteextensions.qc	/^void(entity player, string key, string value) forceinfokey = #213; \/* Part of FTE_FORCEINFOKEY$/;"	f
void	fteextensions.qc	/^void(entity player, string key, void *data, int size) forceinfokeyblob = #0:forceinfokeyblob; \//;"	f
void	fteextensions.qc	/^void(entity player, string text, float impulse) ex_promptchoice = #0:ex_promptchoice; \/* Part o/;"	f
void	fteextensions.qc	/^void(entity player, string text, float numchoices) ex_prompt = #0:ex_prompt; \/* Part of EX_PROM/;"	f
void	fteextensions.qc	/^void(entity portal, float state) openportal = #207; \/*$/;"	f
void	fteextensions.qc	/^void(entity src, entity dst) copyentity = #47; \/* Part of DP_QC_COPYENTITY$/;"	f
void	fteextensions.qc	/^void(entity) eprint = #33;$/;"	f
void	fteextensions.qc	/^void(entity) remove = #23;$/;"	f
void	fteextensions.qc	/^void(filestream fh, entity e) writetofile = #606; \/*$/;"	f
void	fteextensions.qc	/^void(filestream fhandle) fclose = #111; \/* Part of FRIK_FILE$/;"	f
void	fteextensions.qc	/^void(filestream fhandle) fclose = #49; \/* Part of FRIK_FILE*\/$/;"	f
void	fteextensions.qc	/^void(filestream fhandle, string s) fputs = #51; \/* Part of FRIK_FILE*\/$/;"	f
void	fteextensions.qc	/^void(filestream fhandle, string s, optional string s2, optional string s3, optional string s4, o/;"	f
void	fteextensions.qc	/^void(float apilevel, string enginename, float engineversion) CSQC_Init;	\/* Called at startup. e/;"	f
void	fteextensions.qc	/^void(float buf, __double dbl) WriteDouble = #0:WriteDouble; \/*$/;"	f
void	fteextensions.qc	/^void(float buf, __int64 fl) WriteInt64 = #0:WriteInt64; \/*$/;"	f
void	fteextensions.qc	/^void(float buf, __uint fl) WriteUInt = #0:WriteUInt; \/*$/;"	f
void	fteextensions.qc	/^void(float buf, __uint64 fl) WriteUInt64 = #0:WriteUInt64; \/*$/;"	f
void	fteextensions.qc	/^void(float buf, float fl) WriteFloat = #280; \/*$/;"	f
void	fteextensions.qc	/^void(float buf, int fl) WriteInt = #0:WriteInt; \/*$/;"	f
void	fteextensions.qc	/^void(float dest) setkeydest = #601;$/;"	f
void	fteextensions.qc	/^void(float devid, \/*const*\/ void *data, int size) gp_settriggerfx = #0:gp_settriggerfx; \/*$/;"	f
void	fteextensions.qc	/^void(float devid, float amp_low, float amp_high, float duration) gp_rumble = #0:gp_rumble; \/*$/;"	f
void	fteextensions.qc	/^void(float devid, float left, float right, float duration) gp_rumbletriggers = #0:gp_rumbletrigg/;"	f
void	fteextensions.qc	/^void(float devid, vector color) gp_setledcolor = #0:gp_setledcolor; \/*$/;"	f
void	fteextensions.qc	/^void(float effectindex, entity own, vector org_from, vector org_to, vector dir_from, vector dir_/;"	f
void	fteextensions.qc	/^void(float effectnum, entity ent, vector start, vector end) trailparticles = #336; \/* Part of F/;"	f
void	fteextensions.qc	/^void(float effectnum, vector origin, optional vector dir, optional float count) pointparticles =/;"	f
void	fteextensions.qc	/^void(float entnum) CSQC_Ent_Spawn;	\/* Clumsily defined function for compat with DP. Should call/;"	f
void	fteextensions.qc	/^void(float fd, float entcount, float playerslots) SV_PerformLoad;	\/* Called by the engine to re/;"	f
void	fteextensions.qc	/^void(float fd, float entcount, float playerslots) SV_PerformSave;	\/* Called by the engine as pa/;"	f
void	fteextensions.qc	/^void(float fld, float descending) sethostcachesort = #619; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
void	fteextensions.qc	/^void(float isnew) CSQC_Ent_Update;	\/* Parses the data sent by ssqc's various SendEntity functio/;"	f
void	fteextensions.qc	/^void(float lightstyle, string stylestring, optional vector rgb) lightstyle = #35; \/*$/;"	f
void	fteextensions.qc	/^void(float lno, float fld, __variant value) dynamiclight_set = #373; \/*$/;"	f
void	fteextensions.qc	/^void(float mask) addentities = #301; \/*$/;"	f
void	fteextensions.qc	/^void(float mask, float fld, float num, float op) sethostcachemasknumber = #617; \/* Part of FTE_/;"	f
void	fteextensions.qc	/^void(float mask, float fld, string str, float op) sethostcachemaskstring = #616; \/* Part of FTE/;"	f
void	fteextensions.qc	/^void(float modelidx, int brushid) brush_delete = #0:brush_delete; \/* Part of FTE_RAW_MAP$/;"	f
void	fteextensions.qc	/^void(float modidx, float framenum, __inout float basetime, float targettime, void(float timestam/;"	f
void	fteextensions.qc	/^void(float msglvl, string s, optional string s2, optional string s3, optional string s4, optiona/;"	f
void	fteextensions.qc	/^void(float num, float type, .__variant fld) clientstat = #232; \/* Part of EXT_CSQC$/;"	f
void	fteextensions.qc	/^void(float num, float type, __variant *address) pointerstat = #0:pointerstat; \/*$/;"	f
void	fteextensions.qc	/^void(float num, float type, string name) globalstat = #233; \/*$/;"	f
void	fteextensions.qc	/^void(float pause) setpause = #531; \/*$/;"	f
void	fteextensions.qc	/^void(float pauseduration) SV_PausedTic;	\/* For each frame that the server is paused, this funct/;"	f
void	fteextensions.qc	/^void(float playernum) CSQC_PlayerInfoChanged;$/;"	f
void	fteextensions.qc	/^void(float prevprogs) init;	\/* Part of FTE_MULTIPROGS. Called as soon as a progs is loaded, cal/;"	f
void	fteextensions.qc	/^void(float prnum, __variant newval, string varname) externset = #204; \/* Part of FTE_MULTIPROGS$/;"	f
void	fteextensions.qc	/^void(float radius, vector texcoordbias) R_EndPolygonRibbon = #0:R_EndPolygonRibbon; \/*$/;"	f
void	fteextensions.qc	/^void(float reqid, float responsecode, string resourcebody, int resourcebytes) URI_Get_Callback;	/;"	f
void	fteextensions.qc	/^void(float reverbslot, reverbinfo_t *reverbinfo, int sizeofreverinfo_t) setup_reverb = #0:setup_/;"	f
void	fteextensions.qc	/^void(float seat, string keyname, string newvalue) setlocaluserinfo = #0:setlocaluserinfo; \/*$/;"	f
void	fteextensions.qc	/^void(float seat, string keyname, void *outptr, int size) setlocaluserinfoblob = #0:setlocaluseri/;"	f
void	fteextensions.qc	/^void(float sens) setsensitivityscaler = #346; \/*$/;"	f
void	fteextensions.qc	/^void(float serveridx) sqldisconnect = #251; \/* Part of FTE_SQL*\/$/;"	f
void	fteextensions.qc	/^void(float serveridx, float queryidx) sqlclosequery = #253; \/* Part of FTE_SQL*\/$/;"	f
void	fteextensions.qc	/^void(float skel) skel_delete = #275; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
void	fteextensions.qc	/^void(float skel, float bonenum, vector org, optional vector fwd, optional vector right, optional/;"	f
void	fteextensions.qc	/^void(float skel, float startbone, float endbone, vector org, optional vector fwd, optional vecto/;"	f
void	fteextensions.qc	/^void(float skeldst, float skelsrc, float startbone, float entbone) skel_copybones = #274; \/* Pa/;"	f
void	fteextensions.qc	/^void(float skinobj) releasecustomskin = #379; \/* Part of FTE_QC_CUSTOMSKINS$/;"	f
void	fteextensions.qc	/^void(float sleeptime) sleep = #212; \/* Part of FTE_MULTITHREADED$/;"	f
void	fteextensions.qc	/^void(float step) movetogoal = #67; \/*$/;"	f
void	fteextensions.qc	/^void(float style, float val, optional vector rgb) lightstylestatic = #5; \/*$/;"	f
void	fteextensions.qc	/^void(float target, string str) WriteUnterminatedString = #456; \/* Part of DP_SV_WRITEUNTERMINAT/;"	f
void	fteextensions.qc	/^void(float to, entity val) WriteEntity = #59; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteAngle = #57; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteByte = #52; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteChar = #53; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteCoord = #56; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteLong = #55; \/*$/;"	f
void	fteextensions.qc	/^void(float to, float val) WriteShort = #54; \/*$/;"	f
void	fteextensions.qc	/^void(float to, string s, float sz) WritePicture = #501; \/* Part of DP_SV_WRITEPICTURE$/;"	f
void	fteextensions.qc	/^void(float to, string val) WriteString = #58; \/*$/;"	f
void	fteextensions.qc	/^void(float trg) setmousetarget = #603;$/;"	f
void	fteextensions.qc	/^void(float type, vector pos, ...) CustomTempEnt = #209; \/* Part of FTE_PEXT_CUSTOMTENTS*\/$/;"	f
void	fteextensions.qc	/^void(float usecursor, optional string cursorimage, optional vector hotspot, optional float scale/;"	f
void	fteextensions.qc	/^void(float vwidth, float vheight, float notmenu) CSQC_UpdateView;	\/* Called every single video /;"	f
void	fteextensions.qc	/^void(float vwidth, float vheight, float notmenu) CSQC_UpdateViewLoading;	\/* Alternative to CSQC/;"	f
void	fteextensions.qc	/^void(float wantmode) m_toggle;$/;"	f
void	fteextensions.qc	/^void(float width, vector pos1, vector pos2) drawline = #466;$/;"	f
void	fteextensions.qc	/^void(float width, vector pos1, vector pos2, vector rgb, float alpha, optional float drawflag) dr/;"	f
void	fteextensions.qc	/^void(float x, float y, float width, float height) drawsetcliparea = #324; \/*$/;"	f
void	fteextensions.qc	/^void(float x, float y, float width, float height) drawsetcliparea = #458;$/;"	f
void	fteextensions.qc	/^void(hashtable table) hash_destroytab = #288; \/* Part of FTE_QC_HASHTABLES$/;"	f
void	fteextensions.qc	/^void(hashtable table, string name, __variant value, optional float typeandflags) hash_add = #289/;"	f
void	fteextensions.qc	/^void(int cliptype) clipboard_get = #0:clipboard_get; \/*$/;"	f
void	fteextensions.qc	/^void(int cliptype, string text) clipboard_set = #0:clipboard_set; \/*$/;"	f
void	fteextensions.qc	/^void(int entidx, string newentdata) CSQC_MapEntityEdited;$/;"	f
void	fteextensions.qc	/^void(jsonnode) json_free = #0:json_free; \/*$/;"	f
void	fteextensions.qc	/^void(optional __variant ret) abort = #211; \/* Part of FTE_MULTITHREADED$/;"	f
void	fteextensions.qc	/^void(optional entity ent, optional vector neworigin) touchtriggers = #279; \/*$/;"	f
void	fteextensions.qc	/^void(optional float dopurge) refreshhostcache = #620; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
void	fteextensions.qc	/^void(searchhandle handle) search_end = #445; \/* Part of DP_QC_FS_SEARCH, DP_QC_FS_SEARCH_PACKFI/;"	f
void	fteextensions.qc	/^void(searchhandle handle) search_end = #75; \/* Part of DP_QC_FS_SEARCH, DP_QC_FS_SEARCH_PACKFIL/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle) buf_del = #441; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle) buf_del = #461; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float sortprefixlen, float backward) buf_sort = #444; \/* Part of DP_QC_S/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float sortprefixlen, float backward) buf_sort = #464; \/* Part of DP_QC_S/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float string_index) bufstr_free = #449; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float string_index) bufstr_free = #469; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float string_index, string str) bufstr_set = #447; \/* Part of DP_QC_STRI/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle, float string_index, string str) bufstr_set = #467; \/* Part of DP_QC_STRI/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle_from, float bufhandle_to) buf_copy = #443; \/* Part of DP_QC_STRINGBUFFERS/;"	f
void	fteextensions.qc	/^void(strbuf bufhandle_from, strbuf bufhandle_to) buf_copy = #463; \/* Part of DP_QC_STRINGBUFFER/;"	f
void	fteextensions.qc	/^void(strbuf strbuf, string pattern, string antipattern) buf_cvarlist = #517;$/;"	f
void	fteextensions.qc	/^void(string cmd) SV_ParseClientCommand;	\/* Provides QC with a way to intercept 'cmd foo' comman/;"	f
void	fteextensions.qc	/^void(string cmdname, optional string desc) registercommand = #352; \/*$/;"	f
void	fteextensions.qc	/^void(string cmdtext) GameCommand;$/;"	f
void	fteextensions.qc	/^void(string conname, string messagefmt, ...) con_printf = #392; \/* Part of FTE_CSQC_ALTCONSOLES$/;"	f
void	fteextensions.qc	/^void(string conname, vector pos, vector size, float fontsize) con_draw = #393; \/* Part of FTE_C/;"	f
void	fteextensions.qc	/^void(string cvar, float val) cvar_setf = #176;$/;"	f
void	fteextensions.qc	/^void(string cvarname, string valuetoset) cvar_set = #72; \/*$/;"	f
void	fteextensions.qc	/^void(string dest, string from, string cmd, string info) SV_ParseClusterEvent;	\/* Part of cluste/;"	f
void	fteextensions.qc	/^void(string dest, string from, string cmd, string info) clusterevent = #0:clusterevent; \/*$/;"	f
void	fteextensions.qc	/^void(string e) error = #10; \/*$/;"	f
void	fteextensions.qc	/^void(string e) objerror = #11; \/*$/;"	f
void	fteextensions.qc	/^void(string err,...) error = #2; \/*$/;"	f
void	fteextensions.qc	/^void(string err,...) objerror = #3; \/*$/;"	f
void	fteextensions.qc	/^void(string evname, string evargs, ...) sendevent = #359; \/*$/;"	f
void	fteextensions.qc	/^void(string file) cin_restart = #0:cin_restart;$/;"	f
void	fteextensions.qc	/^void(string id) cin_close = #0:cin_close;$/;"	f
void	fteextensions.qc	/^void(string id, float newstate) cin_setstate = #0:cin_setstate;$/;"	f
void	fteextensions.qc	/^void(string imagename, int width, int height, void *pixeldata, optional int datasize, optional i/;"	f
void	fteextensions.qc	/^void(string key) addwantedhostcachekey = #623; \/* Part of FTE_CSQC_SERVERBROWSER$/;"	f
void	fteextensions.qc	/^void(string key, void *ptr, optional int size) setserverkey = #0:setserverkey; \/*$/;"	f
void	fteextensions.qc	/^void(string keyname, optional void *outptr, int size) setlocalinfo = #0:setlocalinfo; \/*$/;"	f
void	fteextensions.qc	/^void(string map) changelevel = #64; \/*$/;"	f
void	fteextensions.qc	/^void(string mapname, optional string newmapstartspot) changelevel = #70; \/*$/;"	f
void	fteextensions.qc	/^void(string mname) precache_model = #91; \/*$/;"	f
void	fteextensions.qc	/^void(string msg) CSQC_Parse_StuffCmd;	\/* Gives the CSQC a chance to intercept stuffcmds. Use th/;"	f
void	fteextensions.qc	/^void(string name) freepic = #319; \/*$/;"	f
void	fteextensions.qc	/^void(string name) gecko_destroy = #488; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	fteextensions.qc	/^void(string name, float evaltype, void *ptr) setwatchpoint = #0:setwatchpoint; \/*$/;"	f
void	fteextensions.qc	/^void(string name, float w, float h) gecko_resize = #492; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	fteextensions.qc	/^void(string name, float x, float y) gecko_mousemove = #491; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	fteextensions.qc	/^void(string name, string URI) gecko_navigate = #489; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	fteextensions.qc	/^void(string name, string value) cvar_set = #15;$/;"	f
void	fteextensions.qc	/^void(string newcaption) setwindowcaption = #0:setwindowcaption; \/* Part of FTE_CSQC_WINDOWCAPTI/;"	f
void	fteextensions.qc	/^void(string printmsg, float printlvl) CSQC_Parse_Print;	\/* Gives the CSQC a chance to intercept/;"	f
void	fteextensions.qc	/^void(string rendererdescription) CSQC_RendererRestarted;	\/* Called by the engine after the vide/;"	f
void	fteextensions.qc	/^void(string rendererdescription) Menu_RendererRestarted;	\/* Called by the engine after the vide/;"	f
void	fteextensions.qc	/^void(string s) loadfromdata = #529; \/*$/;"	f
void	fteextensions.qc	/^void(string s) loadfromdata = #68; \/*$/;"	f
void	fteextensions.qc	/^void(string s) loadfromfile = #530; \/*$/;"	f
void	fteextensions.qc	/^void(string s) loadfromfile = #69; \/*$/;"	f
void	fteextensions.qc	/^void(string s, ...) cprint = #338; \/*$/;"	f
void	fteextensions.qc	/^void(string s, ...) print = #339; \/* Part of DP_SV_PRINT$/;"	f
void	fteextensions.qc	/^void(string s, optional string s0, optional string s1, optional string s2, optional string s3, o/;"	f
void	fteextensions.qc	/^void(string s, optional string s2, optional string s3, optional string s4, optional string s5, o/;"	f
void	fteextensions.qc	/^void(string sample, optional float channel, optional float volume) localsound = #65; \/*$/;"	f
void	fteextensions.qc	/^void(string shadername, string replacement, float timeoffset) remapshader = #0:remapshader; \/*$/;"	f
void	fteextensions.qc	/^void(string shadername, vector origin, vector up, vector side, vector rgb, float alpha) adddecal/;"	f
void	fteextensions.qc	/^void(string text, ...) dprint = #16;$/;"	f
void	fteextensions.qc	/^void(string text,...) cprint = #7; \/*$/;"	f
void	fteextensions.qc	/^void(string text,...) print = #4; \/* Part of DP_SV_PRINT$/;"	f
void	fteextensions.qc	/^void(string texturename, int flags, struct trisoup_simple_vert_s *verts, int *indexes, int numin/;"	f
void	fteextensions.qc	/^void(string texturename, optional float flags, optional float is2d) R_BeginPolygon = #306; \/*$/;"	f
void	fteextensions.qc	/^void(string, ...) localcmd = #46; \/*$/;"	f
void	fteextensions.qc	/^void(string,...) localcmd = #13;$/;"	f
void	fteextensions.qc	/^void(vector angle) rotatevectorsbyangle = #235; \/*$/;"	f
void	fteextensions.qc	/^void(vector dir) vectorvectors = #432; \/* Part of DP_QC_VECTORVECTORS*\/$/;"	f
void	fteextensions.qc	/^void(vector fwd, vector right, vector up) rotatevectorsbyvectors = #236;$/;"	f
void	fteextensions.qc	/^void(vector mincorner, vector maxcorner, float explosionspeed, float howmany) te_bloodshower = #/;"	f
void	fteextensions.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlerain/;"	f
void	fteextensions.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlesnow/;"	f
void	fteextensions.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color, float gravityfl/;"	f
void	fteextensions.qc	/^void(vector newpos) setmousepos = #0:setmousepos; \/*$/;"	f
void	fteextensions.qc	/^void(vector org) te_explosion = #421; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDE/;"	f
void	fteextensions.qc	/^void(vector org) te_explosionquad = #415; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_gunshotquad = #412; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_knightspike = #424; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDAR/;"	f
void	fteextensions.qc	/^void(vector org) te_lavasplash = #425; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	fteextensions.qc	/^void(vector org) te_plasmaburn = #433; \/* Part of _DP_TE_PLASMABURN*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_smallflash = #416; \/* Part of DP_TE_SMALLFLASH*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_spike = #419; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEFFEC/;"	f
void	fteextensions.qc	/^void(vector org) te_spikequad = #413; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_superspike = #420; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	fteextensions.qc	/^void(vector org) te_superspikequad = #414; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	fteextensions.qc	/^void(vector org) te_tarexplosion = #422; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDA/;"	f
void	fteextensions.qc	/^void(vector org) te_teleport = #426; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	fteextensions.qc	/^void(vector org) te_wizspike = #423; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	fteextensions.qc	/^void(vector org, float color, float colorlength) te_explosion2 = #427; \/* Part of DP_TE_STANDAR/;"	f
void	fteextensions.qc	/^void(vector org, float radius, float colour, float effect, float count) particle4 = #217; \/* Pa/;"	f
void	fteextensions.qc	/^void(vector org, float radius, float lifetime, vector color) te_customflash = #417; \/* Part of /;"	f
void	fteextensions.qc	/^void(vector org, optional float count) te_bloodqw = #239; \/* Part of FTE_TE_STANDARDEFFECTBUILT/;"	f
void	fteextensions.qc	/^void(vector org, optional float count) te_gunshot = #418; \/* Part of DP_TE_STANDARDEFFECTBUILTI/;"	f
void	fteextensions.qc	/^void(vector org, string modelname, float startframe, float endframe, float framerate) effect = #/;"	f
void	fteextensions.qc	/^void(vector org, vector box, float colour, float effect, float count) particle3 = #216; \/* Part/;"	f
void	fteextensions.qc	/^void(vector org, vector color) te_explosionrgb = #407; \/* Part of DP_TE_EXPLOSIONRGB*\/$/;"	f
void	fteextensions.qc	/^void(vector org, vector dir, float count) te_blood = #405; \/* Part of DP_TE_BLOOD*\/$/;"	f
void	fteextensions.qc	/^void(vector org, vector dmin, vector dmax, float colour, float effect, float count) particle2 = /;"	f
void	fteextensions.qc	/^void(vector org, vector texcoords, vector rgb, float alpha) R_PolygonVertex = #307; \/*$/;"	f
void	fteextensions.qc	/^void(vector org, vector vel, float howmany) te_flamejet = #457; \/* Part of _DP_TE_FLAMEJET*\/$/;"	f
void	fteextensions.qc	/^void(vector org, vector vel, float howmany) te_spark = #411; \/* Part of DP_TE_SPARK*\/$/;"	f
void	fteextensions.qc	/^void(vector origin, string sample, float volume, float attenuation) pointsound = #483; \/* Part /;"	f
void	fteextensions.qc	/^void(vector origin, vector forward, vector right, vector up, optional float reverbtype) SetListe/;"	f
void	fteextensions.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector rgb, float alpha, float angle) d/;"	f
void	fteextensions.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector txmin, vector txsize, vector rgb/;"	f
void	fteextensions.qc	/^void(vector pos) te_lightningblood = #219; \/* Part of FTE_TE_STANDARDEFFECTBUILTINS*\/$/;"	f
void	fteextensions.qc	/^void(vector pos, vector dir, float colour, float count) particle = #48; \/*$/;"	f
void	fteextensions.qc	/^void(vector pos, vector sz, string pic, vector srcpos, vector srcsz, vector rgb, float alpha, fl/;"	f
void	fteextensions.qc	/^void(vector pos, vector sz, string pic, vector srcpos, vector srcsz, vector rgb, float alpha, op/;"	f
void	fteextensions.qc	/^void(vector screensize) m_draw;	\/* Provides the menuqc with a chance to draw. Will be called ev/;"	f
void	fteextensions.qc	/^void(vector screensize, float opaque) m_drawloading;	\/* Additional drawing function to draw loa/;"	f
void	fteextensions.qc	/^void(vector start, vector mins, vector maxs, vector end, float nomonsters, entity ent) tracebox /;"	f
void	fteextensions.qc	/^void(vector v1, vector v2, float flags, entity ent) traceline = #16; \/*$/;"	f
void	fteextensions.qc	/^void(vector vang) makevectors = #1; \/*$/;"	f
void	fteextensions.qc	/^void(vector viewsize, float scoresshown) CSQC_DrawHud;	\/* Part of simple csqc, called after dra/;"	f
void	fteextensions.qc	/^void(vector viewsize, float scoresshown) CSQC_DrawScores;	\/* Part of simple csqc, called after /;"	f
void	fteextensions.qc	/^void(vector where, float set) multicast = #82; \/* Part of EXT_CSQC, FTE_QC_MULTICAST$/;"	f
void	fteextensions.qc	/^void(void) drawresetcliparea = #325; \/*$/;"	f
void	fteextensions.qc	/^void(void) drawresetcliparea = #459;$/;"	f
void	m_defs.qc	/^void() R_EndPolygon = #308; \/*$/;"	f
void	m_defs.qc	/^void() clearscene = #300; \/*$/;"	f
void	m_defs.qc	/^void() coredump = #30;$/;"	f
void	m_defs.qc	/^void() crash = #72;$/;"	f
void	m_defs.qc	/^void() m_init;$/;"	f
void	m_defs.qc	/^void() m_shutdown;$/;"	f
void	m_defs.qc	/^void() renderscene = #304; \/*$/;"	f
void	m_defs.qc	/^void() resethostcachemasks = #615; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	m_defs.qc	/^void() resorthostcache = #618; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	m_defs.qc	/^void() stackdump = #73;$/;"	f
void	m_defs.qc	/^void() traceoff = #32;$/;"	f
void	m_defs.qc	/^void() traceon = #31;$/;"	f
void	m_defs.qc	/^void(...\/*, string funcname*\/) callfunction = #605; \/*$/;"	f
void	m_defs.qc	/^void(__variant *dst, __variant *src, int size) memcpy = #386; \/* Part of FTE_MEMALLOC$/;"	f
void	m_defs.qc	/^void(__variant *dst, float ofs, __variant val) memsetval = #389; \/*$/;"	f
void	m_defs.qc	/^void(__variant *dst, int val, int size) memfill8 = #387; \/* Part of FTE_MEMALLOC$/;"	f
void	m_defs.qc	/^void(__variant *ptr) memfree = #385; \/* Part of FTE_MEMALLOC$/;"	f
void	m_defs.qc	/^void(entity e, string skinfilename, optional string skindata) setcustomskin = #376; \/* Part of /;"	f
void	m_defs.qc	/^void(entity ent) addentity = #302; \/*$/;"	f
void	m_defs.qc	/^void(entity ent, string mname) setmodel = #90; \/*$/;"	f
void	m_defs.qc	/^void(entity ent, vector neworg) setorigin = #92; \/*$/;"	f
void	m_defs.qc	/^void(entity src, entity dst) copyentity = #47; \/* Part of DP_QC_COPYENTITY*\/$/;"	f
void	m_defs.qc	/^void(entity) eprint = #33;$/;"	f
void	m_defs.qc	/^void(entity) remove = #23;$/;"	f
void	m_defs.qc	/^void(filestream fh, entity e) writetofile = #606; \/*$/;"	f
void	m_defs.qc	/^void(filestream fhandle) fclose = #49; \/* Part of FRIK_FILE*\/$/;"	f
void	m_defs.qc	/^void(filestream fhandle, string s) fputs = #51; \/* Part of FRIK_FILE*\/$/;"	f
void	m_defs.qc	/^void(float clientnum, string text,...) msprint = #6;$/;"	f
void	m_defs.qc	/^void(float dest) setkeydest = #601;$/;"	f
void	m_defs.qc	/^void(float fld, float descending) sethostcachesort = #619; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	m_defs.qc	/^void(float mask, float fld, float num, float op) sethostcachemasknumber = #617; \/* Part of FTE_/;"	f
void	m_defs.qc	/^void(float mask, float fld, string str, float op) sethostcachemaskstring = #616; \/* Part of FTE/;"	f
void	m_defs.qc	/^void(float reqid, float responsecode, string resourcebody) URI_Get_Callback;	\/* Called as an ev/;"	f
void	m_defs.qc	/^void(float scan, float chr) m_keydown;$/;"	f
void	m_defs.qc	/^void(float scan, float chr) m_keyup;$/;"	f
void	m_defs.qc	/^void(float trg) setmousetarget = #603;$/;"	f
void	m_defs.qc	/^void(float usecursor, optional string cursorimage, optional vector hotspot, optional float scale/;"	f
void	m_defs.qc	/^void(float wantmode) m_toggle;$/;"	f
void	m_defs.qc	/^void(float x, float y, float width, float height) drawsetcliparea = #458;$/;"	f
void	m_defs.qc	/^void(hashtable table) hash_destroytab = #288; \/* Part of FTE_QC_HASHTABLES$/;"	f
void	m_defs.qc	/^void(hashtable table, string name, __variant value, optional float typeandflags) hash_add = #289/;"	f
void	m_defs.qc	/^void(optional __variant ret) abort = #211; \/* Part of FTE_MULTITHREADED$/;"	f
void	m_defs.qc	/^void(optional float dopurge) refreshhostcache = #620; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	m_defs.qc	/^void(searchhandle handle) search_end = #75; \/* Part of DP_QC_FS_SEARCH*\/$/;"	f
void	m_defs.qc	/^void(strbuf bufhandle) buf_del = #441; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	m_defs.qc	/^void(strbuf bufhandle, float sortprefixlen, float backward) buf_sort = #444; \/* Part of DP_QC_S/;"	f
void	m_defs.qc	/^void(strbuf bufhandle, float string_index) bufstr_free = #449; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	m_defs.qc	/^void(strbuf bufhandle, float string_index, string str) bufstr_set = #447; \/* Part of DP_QC_STRI/;"	f
void	m_defs.qc	/^void(strbuf bufhandle_from, float bufhandle_to) buf_copy = #443; \/* Part of DP_QC_STRINGBUFFERS/;"	f
void	m_defs.qc	/^void(strbuf strbuf, string pattern, string antipattern) buf_cvarlist = #517;$/;"	f
void	m_defs.qc	/^void(string cmdname) registercommand = #352; \/*$/;"	f
void	m_defs.qc	/^void(string cmdtext) GameCommand;$/;"	f
void	m_defs.qc	/^void(string conname, string messagefmt, ...) con_printf = #392; \/* Part of FTE_CSQC_ALTCONSOLES$/;"	f
void	m_defs.qc	/^void(string conname, vector pos, vector size, float fontsize) con_draw = #393; \/* Part of FTE_C/;"	f
void	m_defs.qc	/^void(string data) loadfromdata = #68;$/;"	f
void	m_defs.qc	/^void(string data) loadfromfile = #69;$/;"	f
void	m_defs.qc	/^void(string destaddress, string content) sendpacket = #242; \/* Part of FTE_QC_SENDPACKET$/;"	f
void	m_defs.qc	/^void(string err,...) error = #2;$/;"	f
void	m_defs.qc	/^void(string err,...) objerror = #3;$/;"	f
void	m_defs.qc	/^void(string imagename, int width, int height, void *pixeldata, optional int datasize, optional i/;"	f
void	m_defs.qc	/^void(string key) addwantedhostcachekey = #623; \/* Part of FTE_CSQC_SERVERBROWSER*\/$/;"	f
void	m_defs.qc	/^void(string map) changelevel = #64;$/;"	f
void	m_defs.qc	/^void(string mname) precache_model = #91; \/*$/;"	f
void	m_defs.qc	/^void(string name) gecko_destroy = #488; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	m_defs.qc	/^void(string name, float w, float h) gecko_resize = #492; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	m_defs.qc	/^void(string name, float x, float y) gecko_mousemove = #491; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	m_defs.qc	/^void(string name, string URI) gecko_navigate = #489; \/* Part of DP_GECKO_SUPPORT$/;"	f
void	m_defs.qc	/^void(string name, string value) cvar_set = #15;$/;"	f
void	m_defs.qc	/^void(string sample, optional float channel, optional float volume) localsound = #65;$/;"	f
void	m_defs.qc	/^void(string text) dprint = #16;$/;"	f
void	m_defs.qc	/^void(string text,...) bprint = #5;$/;"	f
void	m_defs.qc	/^void(string text,...) cprint = #7;$/;"	f
void	m_defs.qc	/^void(string text,...) print = #4; \/* Part of DP_SV_PRINT*\/$/;"	f
void	m_defs.qc	/^void(string texturename, optional float flags, optional float is2d) R_BeginPolygon = #306; \/*$/;"	f
void	m_defs.qc	/^void(string) strunzone = #57; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS*\/$/;"	f
void	m_defs.qc	/^void(string,...) localcmd = #13;$/;"	f
void	m_defs.qc	/^void(vector org, vector texcoords, vector rgb, float alpha) R_PolygonVertex = #307; \/*$/;"	f
void	m_defs.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector rgb, float alpha, float angle) d/;"	f
void	m_defs.qc	/^void(vector pivot, vector mins, vector maxs, string pic, vector txmin, vector txsize, vector rgb/;"	f
void	m_defs.qc	/^void(vector pos, vector size, float alignflags, string text) drawtextfield = #0:drawtextfield; \//;"	f
void	m_defs.qc	/^void(vector pos, vector sz, string pic, vector srcpos, vector srcsz, vector rgb, float alpha, fl/;"	f
void	m_defs.qc	/^void(vector screensize) m_draw;	\/* Provides the menuqc with a chance to draw. Will be called ev/;"	f
void	m_defs.qc	/^void(vector screensize, float opaque) m_drawloading;	\/* Additional drawing function to draw loa/;"	f
void	m_defs.qc	/^void(void) drawresetcliparea = #459;$/;"	f
void	m_main.qc	/^void() m_close =$/;"	f
void	m_main.qc	/^void() m_init =$/;"	f
void	m_main.qc	/^void() m_open =$/;"	f
void	m_main.qc	/^void() m_shutdown =$/;"	f
void	m_main.qc	/^void(float wantmode) m_toggle =$/;"	f
void	m_main.qc	/^void(vector screensize) m_draw =$/;"	f
void	m_menu.qc	/^void() help_menu =$/;"	f
void	m_menu.qc	/^void() ingame_menu =$/;"	f
void	m_menu.qc	/^void() input_tester =$/;"	f
void	m_menu.qc	/^void() main_menu =$/;"	f
void	m_menu.qc	/^void() settings_menu =$/;"	f
void	m_menu.qc	/^void(string id, vector pos, vector size, __inout vector scrollofs) bind_list =$/;"	f
void	m_menu.qc	/^void(string id, vector pos, vector size, float maxlen, __inout string text, __inout float cursor/;"	f
void	m_menu.qc	/^void(string id, vector pos, vector size, string name, string command) bind_button =$/;"	f
void	m_menu.qc	/^void(string id, vector pos, vector size, vector minmaxsteps, __inout float value) my_slider =$/;"	f
void	m_menu.qc	/^void(vector pos, vector size, vector minmaxsteps, string cvar_s, string name, string format) cva/;"	f
void	m_menu.qc	/^void(vector size) root_menu =$/;"	f
void	sh_customdefs.qc	/^void() precache_everything =$/;"	f
void	sui_sys.qc	/^	void(float index, vector click_ratios) action;$/;"	f
void	sui_sys.qc	/^void() _action_element_count_sanity =$/;"	f
void	sui_sys.qc	/^void() _retarget_kb_cursor =$/;"	f
void	sui_sys.qc	/^void() activate_mouse_cursor =$/;"	f
void	sui_sys.qc	/^void() deactivate_mouse_cursor =$/;"	f
void	sui_sys.qc	/^void() sui_clear_input =$/;"	f
void	sui_sys.qc	/^void() sui_clip_to_frame =$/;"	f
void	sui_sys.qc	/^void() sui_debug_draw_action_elements =$/;"	f
void	sui_sys.qc	/^void() sui_debug_draw_action_elements;$/;"	f
void	sui_sys.qc	/^void() sui_draw_bind_overlay =$/;"	f
void	sui_sys.qc	/^void() sui_draw_bind_overlay;$/;"	f
void	sui_sys.qc	/^void() sui_end =$/;"	f
void	sui_sys.qc	/^void() sui_list_view_end =$/;"	f
void	sui_sys.qc	/^void() sui_menu_nav =$/;"	f
void	sui_sys.qc	/^void() sui_pop_frame =$/;"	f
void	sui_sys.qc	/^void() sui_reread_input =$/;"	f
void	sui_sys.qc	/^void() sui_reset_actions =$/;"	f
void	sui_sys.qc	/^void() sui_reset_align =$/;"	f
void	sui_sys.qc	/^void() sui_reset_click =$/;"	f
void	sui_sys.qc	/^void() sui_reset_clip =$/;"	f
void	sui_sys.qc	/^void() sui_reset_frame = $/;"	f
void	sui_sys.qc	/^void() sui_scroll_view_end =$/;"	f
void	sui_sys.qc	/^void(__inout vector point) sui_transform_point =$/;"	f
void	sui_sys.qc	/^void(__inout vector point, vector size) sui_transform_box =$/;"	f
void	sui_sys.qc	/^void(float align) sui_set_x_align =$/;"	f
void	sui_sys.qc	/^void(float align) sui_set_y_align =$/;"	f
void	sui_sys.qc	/^void(float char, float scan, __inout string text, __inout float cursor) sui_handle_text_input =$/;"	f
void	sui_sys.qc	/^void(float index, vector click_ratios) sui_noop = {};$/;"	f
void	sui_sys.qc	/^void(float kb_dir) sui_hijack_kb_nav =$/;"	f
void	sui_sys.qc	/^void(float maxlen, __inout string text, __inout float cursor) sui_cap_input_length =$/;"	f
void	sui_sys.qc	/^void(float scan) DebugInput = {$/;"	f
void	sui_sys.qc	/^void(float scan, string command) _sui_do_keybind =$/;"	f
void	sui_sys.qc	/^void(float value) sui_slider_noop = {};$/;"	f
void	sui_sys.qc	/^void(float width, float height) sui_begin =$/;"	f
void	sui_sys.qc	/^void(string command) _sui_unbind =$/;"	f
void	sui_sys.qc	/^void(string command, string command_name) sui_start_bind =$/;"	f
void	sui_sys.qc	/^void(string id) sui_set_default_kb_focus =$/;"	f
void	sui_sys.qc	/^void(string id, vector pos, vector size, __inout string text, __inout float cursor) sui_text_inp/;"	f
void	sui_sys.qc	/^void(string id, vector pos, vector size, vector contentsize, __inout vector offset, vector scrol/;"	f
void	sui_sys.qc	/^void(string id, vector pos, vector size, vector itemsize, float numitems, __inout vector offset,/;"	f
void	sui_sys.qc	/^void(string id, vector size, vector contentsize, __inout vector offset, vector scrollbar_widths)/;"	f
void	sui_sys.qc	/^void(vector align) sui_set_align =$/;"	f
void	sui_sys.qc	/^void(vector dir) _cursor_kb_move =$/;"	f
void	sui_sys.qc	/^void(vector pos, float is_mouse = TRUE) _sui_mouse_move =$/;"	f
void	sui_sys.qc	/^void(vector pos, vector size) sui_push_frame =$/;"	f
void	sui_sys.qc	/^void(vector pos, vector size, float width, vector color, float alpha, float flags) sui_border_bo/;"	f
void	sui_sys.qc	/^void(vector pos, vector size, string id, void(float index, vector click_ratios) action, float is/;"	f
void	sui_sys.qc	/^void(vector pos, vector size, string pic, vector color, float alpha, float flags) sui_pic =$/;"	f
void	sui_sys.qc	/^void(vector pos, vector size, string text, vector color, float alpha, float flags) sui_text =$/;"	f
void	sui_sys.qc	/^void(vector pos, vector size, vector color, float alpha, float flags) sui_fill =$/;"	f
void	sv_customdefs.qc	/^void() light =$/;"	f
void	sv_customdefs.qc	/^void() sub_noop = {};$/;"	f
void	sv_customdefs.qc	/^void() sub_remove =$/;"	f
void	sv_customdefs.qc	/^void(entity adding) player_chain_add =$/;"	f
void	sv_customdefs.qc	/^void(entity e) MulticastEnt =$/;"	f
void	sv_customdefs.qc	/^void(entity removing) player_chain_remove =$/;"	f
void	sv_customdefs.qc	/^void(float event) BeginEvent =$/;"	f
void	sv_customdefs.qc	/^void(float val) MulticastByte =$/;"	f
void	sv_customdefs.qc	/^void(float val) MulticastFloat =$/;"	f
void	sv_customdefs.qc	/^void(float val) MulticastShort =$/;"	f
void	sv_customdefs.qc	/^void(string s) MulticastString =$/;"	f
void	sv_customdefs.qc	/^void(vector vec) MulticastVector =$/;"	f
void	sv_defs.qc	/^void (vector pos, string samp, float vol, float atten) ambientsound = #74;$/;"	f
void	sv_defs.qc	/^void() ClientConnect;$/;"	f
void	sv_defs.qc	/^void() ClientDisconnect;$/;"	f
void	sv_defs.qc	/^void() ClientKill;$/;"	f
void	sv_defs.qc	/^void() EndFrame;	\/* Called after non-player entities have been run at the end of the physics fr/;"	f
void	sv_defs.qc	/^void() PlayerPostThink;$/;"	f
void	sv_defs.qc	/^void() PlayerPreThink;$/;"	f
void	sv_defs.qc	/^void() PutClientInServer;$/;"	f
void	sv_defs.qc	/^void() R_EndPolygon = #308; \/*$/;"	f
void	sv_defs.qc	/^void() SV_AddDebugPolygons;	\/* Called each video frame. This is the only place where ssqc is al/;"	f
void	sv_defs.qc	/^void() SV_PlayerPhysics;	\/* Legacy method to tweak player input that does not reliably work wit/;"	f
void	sv_defs.qc	/^void() SV_RunClientCommand;	\/* Called each time a player movement packet was received from a cl/;"	f
void	sv_defs.qc	/^void() SetChangeParms;$/;"	f
void	sv_defs.qc	/^void() SetNewParms;$/;"	f
void	sv_defs.qc	/^void() SpectatorConnect;	\/* Called when a spectator joins the game. *\/$/;"	f
void	sv_defs.qc	/^void() SpectatorDisconnect;	\/* Called when a spectator disconnects from the game. *\/$/;"	f
void	sv_defs.qc	/^void() SpectatorThink;	\/* Called each frame for each spectator. *\/$/;"	f
void	sv_defs.qc	/^void() StartFrame;$/;"	f
void	sv_defs.qc	/^void() breakpoint = #6; \/*$/;"	f
void	sv_defs.qc	/^void() calltimeofday = #231; \/* Part of FTE_CALLTIMEOFDAY$/;"	f
void	sv_defs.qc	/^void() changeyaw = #49; \/*$/;"	f
void	sv_defs.qc	/^void() coredump = #28; \/*$/;"	f
void	sv_defs.qc	/^void() initents;	\/* Part of FTE_MULTIPROGS. Called after fields have been finalized. This is th/;"	f
void	sv_defs.qc	/^void() main;$/;"	f
void	sv_defs.qc	/^void() traceoff = #30; \/*$/;"	f
void	sv_defs.qc	/^void() traceon = #29; \/*$/;"	f
void	sv_defs.qc	/^void(...\/*, string funcname*\/) callfunction = #605; \/*$/;"	f
void	sv_defs.qc	/^void(__variant *dst, __variant *src, int size) memcpy = #386; \/* Part of FTE_MEMALLOC$/;"	f
void	sv_defs.qc	/^void(__variant *dst, float ofs, __variant val) memsetval = #389; \/*$/;"	f
void	sv_defs.qc	/^void(__variant *dst, int val, int size) memfill8 = #387; \/* Part of FTE_MEMALLOC$/;"	f
void	sv_defs.qc	/^void(__variant *ptr) memfree = #385; \/* Part of FTE_MEMALLOC$/;"	f
void	sv_defs.qc	/^void(entity client, float flags, string s) stuffcmdflags = #0:stuffcmdflags; \/* Part of FTE_QC_/;"	f
void	sv_defs.qc	/^void(entity client, float msglvl, string s, optional string s2, optional string s3, optional str/;"	f
void	sv_defs.qc	/^void(entity client, string s) stuffcmd = #21; \/*$/;"	f
void	sv_defs.qc	/^void(entity e) eprint = #31; \/*$/;"	f
void	sv_defs.qc	/^void(entity e) makestatic = #69; \/*$/;"	f
void	sv_defs.qc	/^void(entity e) remove = #15; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, entity tagentity, string tagname) setattachment = #443; \/* Part of DP_GFX_QUAKE3/;"	f
void	sv_defs.qc	/^void(entity e, float chan, string samp, float vol, float atten, optional float speedpct, optiona/;"	f
void	sv_defs.qc	/^void(entity e, float physics_enabled) physics_enable = #540; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, string m) setmodel = #3; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, string s) clientcommand = #440; \/* Part of KRIMZON_SV_PARSECLIENTCOMMAND*\/$/;"	f
void	sv_defs.qc	/^void(entity e, vector force, vector relative_ofs) physics_addforce = #541; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, vector min, vector max) setsize = #4; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, vector o) setorigin = #2; \/*$/;"	f
void	sv_defs.qc	/^void(entity e, vector torque) physics_addtorque = #542; \/*$/;"	f
void	sv_defs.qc	/^void(entity ent) changepitch = #63; \/* Part of DP_QC_CHANGEPITCH*\/$/;"	f
void	sv_defs.qc	/^void(entity ent) runstandardplayerphysics = #347; \/*$/;"	f
void	sv_defs.qc	/^void(entity ent) te_muzzleflash = #0:te_muzzleflash;$/;"	f
void	sv_defs.qc	/^void(entity ent, entity ignore) tracetoss = #64;$/;"	f
void	sv_defs.qc	/^void(entity ent, float bonenum, vector org, optional vector angorfwd, optional vector right, opt/;"	f
void	sv_defs.qc	/^void(entity ent, float colours) setcolors = #401; \/*$/;"	f
void	sv_defs.qc	/^void(entity ent, string text, optional string text2, optional string text3, optional string text/;"	f
void	sv_defs.qc	/^void(entity killer, entity killee) logfrag = #79; \/* Part of QW_ENGINE*\/$/;"	f
void	sv_defs.qc	/^void(entity own, vector start, vector end) te_beam = #431; \/* Part of DP_TE_STANDARDEFFECTBUILT/;"	f
void	sv_defs.qc	/^void(entity own, vector start, vector end) te_lightning1 = #428; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	sv_defs.qc	/^void(entity own, vector start, vector end) te_lightning2 = #429; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	sv_defs.qc	/^void(entity own, vector start, vector end) te_lightning3 = #430; \/* Part of DP_TE_STANDARDEFFEC/;"	f
void	sv_defs.qc	/^void(entity player) dropclient = #453; \/* Part of DP_SV_DROPCLIENT*\/$/;"	f
void	sv_defs.qc	/^void(entity player) setspawnparms = #78;$/;"	f
void	sv_defs.qc	/^void(entity player, string key, string value) forceinfokey = #213; \/* Part of FTE_FORCEINFOKEY$/;"	f
void	sv_defs.qc	/^void(entity portal, float state) openportal = #207; \/*$/;"	f
void	sv_defs.qc	/^void(entity to, string str) redirectcmd = #101; \/* Part of ??MVDSV_BUILTINS$/;"	f
void	sv_defs.qc	/^void(filestream fh, entity e) writetofile = #606; \/*$/;"	f
void	sv_defs.qc	/^void(filestream fhandle) fclose = #111; \/* Part of FRIK_FILE*\/$/;"	f
void	sv_defs.qc	/^void(filestream fhandle, string s, optional string s2, optional string s3, optional string s4, o/;"	f
void	sv_defs.qc	/^void(float action, optional vector pos, optional float radius, optional float quant, ...) terrai/;"	f
void	sv_defs.qc	/^void(float buf, float fl) WriteFloat = #280;$/;"	f
void	sv_defs.qc	/^void(float effectnum, entity ent, vector start, vector end) trailparticles = #336; \/* Part of F/;"	f
void	sv_defs.qc	/^void(float effectnum, vector origin, optional vector dir, optional float count) pointparticles =/;"	f
void	sv_defs.qc	/^void(float lightstyle, string stylestring, optional vector rgb) lightstyle = #35; \/*$/;"	f
void	sv_defs.qc	/^void(float modelidx, int brushid) brush_delete = #0:brush_delete; \/* Part of FTE_RAW_MAP$/;"	f
void	sv_defs.qc	/^void(float modidx, float framenum, __inout float basetime, float targettime, void(float timestam/;"	f
void	sv_defs.qc	/^void(float msglvl, string s, optional string s2, optional string s3, optional string s4, optiona/;"	f
void	sv_defs.qc	/^void(float num, float type, .__variant fld) clientstat = #232; \/*$/;"	f
void	sv_defs.qc	/^void(float num, float type, __variant *address) pointerstat = #0:pointerstat; \/*$/;"	f
void	sv_defs.qc	/^void(float num, float type, string name) globalstat = #233; \/*$/;"	f
void	sv_defs.qc	/^void(float pause) setpause = #531; \/*$/;"	f
void	sv_defs.qc	/^void(float pauseduration) SV_PausedTic;	\/* For each frame that the server is paused, this funct/;"	f
void	sv_defs.qc	/^void(float prevprogs) init;	\/* Part of FTE_MULTIPROGS. Called as soon as a progs is loaded, cal/;"	f
void	sv_defs.qc	/^void(float prnum, __variant newval, string varname) externset = #204; \/* Part of FTE_MULTIPROGS$/;"	f
void	sv_defs.qc	/^void(float reqid, float responsecode, string resourcebody) URI_Get_Callback;	\/* Called as an ev/;"	f
void	sv_defs.qc	/^void(float serveridx) sqldisconnect = #251; \/* Part of FTE_SQL*\/$/;"	f
void	sv_defs.qc	/^void(float serveridx, float queryidx) sqlclosequery = #253; \/* Part of FTE_SQL*\/$/;"	f
void	sv_defs.qc	/^void(float skel) skel_delete = #275; \/* Part of FTE_CSQC_SKELETONOBJECTS$/;"	f
void	sv_defs.qc	/^void(float skel, float bonenum, vector org, optional vector fwd, optional vector right, optional/;"	f
void	sv_defs.qc	/^void(float skel, float startbone, float endbone, vector org, optional vector fwd, optional vecto/;"	f
void	sv_defs.qc	/^void(float skeldst, float skelsrc, float startbone, float entbone) skel_copybones = #274; \/* Pa/;"	f
void	sv_defs.qc	/^void(float sleeptime) sleep = #212; \/* Part of FTE_MULTITHREADED$/;"	f
void	sv_defs.qc	/^void(float step) movetogoal = #67; \/*$/;"	f
void	sv_defs.qc	/^void(float style, float val, optional vector rgb) lightstylestatic = #5; \/*$/;"	f
void	sv_defs.qc	/^void(float target, string str) WriteUnterminatedString = #456; \/* Part of DP_SV_WRITEUNTERMINAT/;"	f
void	sv_defs.qc	/^void(float to, entity val) WriteEntity = #59;$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteAngle = #57;$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteByte = #52; \/*$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteChar = #53;$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteCoord = #56;$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteLong = #55;$/;"	f
void	sv_defs.qc	/^void(float to, float val) WriteShort = #54;$/;"	f
void	sv_defs.qc	/^void(float to, string s, float sz) WritePicture = #501; \/* Part of DP_SV_WRITEPICTURE$/;"	f
void	sv_defs.qc	/^void(float to, string val) WriteString = #58;$/;"	f
void	sv_defs.qc	/^void(float type, vector pos, ...) CustomTempEnt = #209; \/* Part of FTE_PEXT_CUSTOMTENTS*\/$/;"	f
void	sv_defs.qc	/^void(hashtable table) hash_destroytab = #288; \/* Part of FTE_QC_HASHTABLES$/;"	f
void	sv_defs.qc	/^void(hashtable table, string name, __variant value, optional float typeandflags) hash_add = #289/;"	f
void	sv_defs.qc	/^void(optional __variant ret) abort = #211; \/* Part of FTE_MULTITHREADED$/;"	f
void	sv_defs.qc	/^void(optional entity ent, optional vector neworigin) touchtriggers = #279; \/*$/;"	f
void	sv_defs.qc	/^void(searchhandle handle) search_end = #445; \/* Part of DP_QC_FS_SEARCH*\/$/;"	f
void	sv_defs.qc	/^void(strbuf bufhandle) buf_del = #461; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	sv_defs.qc	/^void(strbuf bufhandle, float sortprefixlen, float backward) buf_sort = #464; \/* Part of DP_QC_S/;"	f
void	sv_defs.qc	/^void(strbuf bufhandle, float string_index) bufstr_free = #469; \/* Part of DP_QC_STRINGBUFFERS*\/$/;"	f
void	sv_defs.qc	/^void(strbuf bufhandle, float string_index, string str) bufstr_set = #467; \/* Part of DP_QC_STRI/;"	f
void	sv_defs.qc	/^void(strbuf bufhandle_from, strbuf bufhandle_to) buf_copy = #463; \/* Part of DP_QC_STRINGBUFFER/;"	f
void	sv_defs.qc	/^void(strbuf strbuf, string pattern, string antipattern) buf_cvarlist = #517;$/;"	f
void	sv_defs.qc	/^void(string cmd) SV_ParseClientCommand;	\/* Provides QC with a way to intercept 'cmd foo' comman/;"	f
void	sv_defs.qc	/^void(string cvar, float val) cvar_setf = #176;$/;"	f
void	sv_defs.qc	/^void(string cvarname, string valuetoset) cvar_set = #72; \/*$/;"	f
void	sv_defs.qc	/^void(string dest, string from, string cmd, string info) SV_ParseClusterEvent;	\/* Part of cluste/;"	f
void	sv_defs.qc	/^void(string dest, string from, string cmd, string info) clusterevent = #0:clusterevent; \/*$/;"	f
void	sv_defs.qc	/^void(string destaddress, string content) sendpacket = #242; \/* Part of FTE_QC_SENDPACKET*\/$/;"	f
void	sv_defs.qc	/^void(string e) error = #10; \/*$/;"	f
void	sv_defs.qc	/^void(string e) objerror = #11; \/*$/;"	f
void	sv_defs.qc	/^void(string filename, float starttag, entity edict) chat = #214; \/* Part of FTE_QC_NPCCHAT*\/$/;"	f
void	sv_defs.qc	/^void(string mapname, optional string newmapstartspot) changelevel = #70; \/*$/;"	f
void	sv_defs.qc	/^void(string s) loadfromdata = #529; \/*$/;"	f
void	sv_defs.qc	/^void(string s) loadfromfile = #530; \/*$/;"	f
void	sv_defs.qc	/^void(string s) strunzone = #119; \/* Part of FRIK_FILE, FTE_STRINGS, ZQ_QC_STRINGS$/;"	f
void	sv_defs.qc	/^void(string s, ...) dprint = #25; \/*$/;"	f
void	sv_defs.qc	/^void(string s, ...) print = #339; \/* Part of DP_SV_PRINT$/;"	f
void	sv_defs.qc	/^void(string slot, float x, float y, float zone, optional entity player) movepic = #106; \/* Part/;"	f
void	sv_defs.qc	/^void(string slot, optional entity player) hidepic = #105; \/* Part of TEI_SHOWLMP2*\/$/;"	f
void	sv_defs.qc	/^void(string slot, string picname, float x, float y, float zone, optional entity player) showpic /;"	f
void	sv_defs.qc	/^void(string slot, string picname, optional entity player) changepic = #107; \/* Part of TEI_SHOW/;"	f
void	sv_defs.qc	/^void(string soundname, optional float channel, optional float volume) localsound = #177; \/*$/;"	f
void	sv_defs.qc	/^void(string texturename, optional float flags, optional float is2d) R_BeginPolygon = #306; \/*$/;"	f
void	sv_defs.qc	/^void(string, ...) localcmd = #46; \/*$/;"	f
void	sv_defs.qc	/^void(vector angle) rotatevectorsbyangle = #235; \/*$/;"	f
void	sv_defs.qc	/^void(vector dir) vectorvectors = #432; \/* Part of DP_QC_VECTORVECTORS*\/$/;"	f
void	sv_defs.qc	/^void(vector fwd, vector right, vector up) rotatevectorsbyvectors = #236;$/;"	f
void	sv_defs.qc	/^void(vector mincorner, vector maxcorner, float explosionspeed, float howmany) te_bloodshower = #/;"	f
void	sv_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlerain/;"	f
void	sv_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color) te_particlesnow/;"	f
void	sv_defs.qc	/^void(vector mincorner, vector maxcorner, vector vel, float howmany, float color, float gravityfl/;"	f
void	sv_defs.qc	/^void(vector org) te_explosion = #421; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDE/;"	f
void	sv_defs.qc	/^void(vector org) te_explosionquad = #415; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_gunshotquad = #412; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_knightspike = #424; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDAR/;"	f
void	sv_defs.qc	/^void(vector org) te_lavasplash = #425; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	sv_defs.qc	/^void(vector org) te_plasmaburn = #433; \/* Part of _DP_TE_PLASMABURN*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_smallflash = #416; \/* Part of DP_TE_SMALLFLASH*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_spike = #419; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEFFEC/;"	f
void	sv_defs.qc	/^void(vector org) te_spikequad = #413; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_superspike = #420; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARD/;"	f
void	sv_defs.qc	/^void(vector org) te_superspikequad = #414; \/* Part of _DP_TE_QUADEFFECTS1*\/$/;"	f
void	sv_defs.qc	/^void(vector org) te_tarexplosion = #422; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDA/;"	f
void	sv_defs.qc	/^void(vector org) te_teleport = #426; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	sv_defs.qc	/^void(vector org) te_wizspike = #423; \/* Part of DP_TE_STANDARDEFFECTBUILTINS, FTE_TE_STANDARDEF/;"	f
void	sv_defs.qc	/^void(vector org, float color, float colorlength) te_explosion2 = #427; \/* Part of DP_TE_STANDAR/;"	f
void	sv_defs.qc	/^void(vector org, float radius, float colour, float effect, float count) particle4 = #217; \/* Pa/;"	f
void	sv_defs.qc	/^void(vector org, float radius, float lifetime, vector color) te_customflash = #417; \/* Part of /;"	f
void	sv_defs.qc	/^void(vector org, optional float count) te_bloodqw = #239; \/* Part of FTE_TE_STANDARDEFFECTBUILT/;"	f
void	sv_defs.qc	/^void(vector org, optional float count) te_gunshot = #418; \/* Part of DP_TE_STANDARDEFFECTBUILTI/;"	f
void	sv_defs.qc	/^void(vector org, string modelname, float startframe, float endframe, float framerate) effect = #/;"	f
void	sv_defs.qc	/^void(vector org, vector box, float colour, float effect, float count) particle3 = #216; \/* Part/;"	f
void	sv_defs.qc	/^void(vector org, vector color) te_explosionrgb = #407; \/* Part of DP_TE_EXPLOSIONRGB*\/$/;"	f
void	sv_defs.qc	/^void(vector org, vector dir, float count) te_blood = #405; \/* Part of DP_TE_BLOOD*\/$/;"	f
void	sv_defs.qc	/^void(vector org, vector dmin, vector dmax, float colour, float effect, float count) particle2 = /;"	f
void	sv_defs.qc	/^void(vector org, vector texcoords, vector rgb, float alpha) R_PolygonVertex = #307; \/*$/;"	f
void	sv_defs.qc	/^void(vector org, vector vel, float howmany) te_flamejet = #457; \/* Part of _DP_TE_FLAMEJET*\/$/;"	f
void	sv_defs.qc	/^void(vector org, vector vel, float howmany) te_spark = #411; \/* Part of DP_TE_SPARK*\/$/;"	f
void	sv_defs.qc	/^void(vector origin, string sample, float volume, float attenuation) pointsound = #483; \/* Part /;"	f
void	sv_defs.qc	/^void(vector pos) te_lightningblood = #219; \/* Part of FTE_TE_STANDARDEFFECTBUILTINS*\/$/;"	f
void	sv_defs.qc	/^void(vector pos, vector dir, float colour, float count) particle = #48; \/*$/;"	f
void	sv_defs.qc	/^void(vector start, vector mins, vector maxs, vector end, float nomonsters, entity ent) tracebox /;"	f
void	sv_defs.qc	/^void(vector v1, vector v2, float flags, entity ent) traceline = #16; \/*$/;"	f
void	sv_defs.qc	/^void(vector vang) makevectors = #1; \/*$/;"	f
void	sv_defs.qc	/^void(vector where, float set) multicast = #82; \/* Part of FTE_QC_MULTICAST$/;"	f
void	sv_main.qc	/^void() SpectatorConnect =$/;"	f
void	sv_main.qc	/^void() StartFrame =$/;"	f
void	sv_main.qc	/^void() main =$/;"	f
void	sv_main.qc	/^void() worldspawn =$/;"	f
void	sv_player.qc	/^void() CheckImpulses =$/;"	f
void	sv_player.qc	/^void() ClientConnect =$/;"	f
void	sv_player.qc	/^void() ClientDisconnect =$/;"	f
void	sv_player.qc	/^void() ClientKill =$/;"	f
void	sv_player.qc	/^void() PlayerJump =$/;"	f
void	sv_player.qc	/^void() PlayerPostThink =$/;"	f
void	sv_player.qc	/^void() PlayerPreThink =$/;"	f
void	sv_player.qc	/^void() PlayerSpawn =$/;"	f
void	sv_player.qc	/^void() Player_HandleJump = $/;"	f
void	sv_player.qc	/^void() PutClientInServer =$/;"	f
void	sv_player.qc	/^void() SV_RunClientCommand =$/;"	f
void	sv_player.qc	/^void() SetChangeParms =$/;"	f
void	sv_player.qc	/^void() SetNewParms =$/;"	f
void	sv_player.qc	/^void() info_player_start =$/;"	f
void	sv_player.qc	/^void(float elapsedtime) SV_PausedTic =$/;"	f
void	sv_player.qc	/^void(string command_string) SV_ParseClientCommand =$/;"	f
void	sv_triggers.qc	/^void() func_illusionary =$/;"	f
void	sv_triggers.qc	/^void() info_null =$/;"	f
void	sv_triggers.qc	/^void() trigger_example =$/;"	f
while	m_menu.qc	/^	while (sui_get_input(char, scan))$/;"	f
while	sui_sys.qc	/^		while (sui_get_input(char, scan))$/;"	f
while	sui_sys.qc	/^		while(sui_get_input(char, scan)) sui_handle_text_input(char, scan, text, cursor);$/;"	f
while	sui_sys.qc	/^	while (_frame_index > 1)$/;"	f
xpos	m_menu.qc	/^	xpos = 8 + width + 8 + 8;$/;"	v
ypos	m_menu.qc	/^	ypos = 32;$/;"	v
